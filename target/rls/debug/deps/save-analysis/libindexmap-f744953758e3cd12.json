{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1","program":"/Users/doviethoang/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","indexmap","--edition=2018","/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"serde\"","--cfg","feature=\"serde-1\"","-C","metadata=f744953758e3cd12","-C","extra-filename=-f744953758e3cd12","--out-dir","/Users/doviethoang/Desktop/github/cw-contracts/contracts/voting/target/rls/debug/deps","-L","dependency=/Users/doviethoang/Desktop/github/cw-contracts/contracts/voting/target/rls/debug/deps","--extern","hashbrown=/Users/doviethoang/Desktop/github/cw-contracts/contracts/voting/target/rls/debug/deps/libhashbrown-cef838c23e4171cb.rmeta","--extern","serde=/Users/doviethoang/Desktop/github/cw-contracts/contracts/voting/target/rls/debug/deps/libserde-ea2f0c8c2cb51eed.rmeta","--cap-lints","allow","--cfg","has_std","--error-format=json","--sysroot","/Users/doviethoang/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/doviethoang/Desktop/github/cw-contracts/contracts/voting/target/rls/debug/deps/libindexmap-f744953758e3cd12.rmeta"},"prelude":{"crate_id":{"name":"indexmap","disambiguator":[8523884530850282582,0]},"crate_root":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src","external_crates":[{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[14793976659495462539,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[3402831840469434398,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[10266006331935790141,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","num":4,"id":{"name":"std","disambiguator":[8736441298905945133,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3256146445313423250,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[17904618012795691138,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9322387616446168443,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3101585505833515335,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[9998121223216013160,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[13604153592636442655,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[4682215639508348019,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[681692869457277629,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[14282542057858629160,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[14550073586256240635,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[6281633846692226065,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[17361906875064838028,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[16875744454975590306,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde.rs","num":18,"id":{"name":"serde","disambiguator":[15041396518810080169,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde.rs","num":19,"id":{"name":"serde_derive","disambiguator":[1210058101018356223,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core/raw.rs","num":20,"id":{"name":"hashbrown","disambiguator":[16906603229808179313,0]}}],"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":92,"byte_end":5450,"line_start":2,"line_end":192,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":326},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":85505,"byte_end":85518,"line_start":520,"line_end":520,"column_start":20,"column_end":33},"alias_span":null,"name":"OccupiedEntry","value":"","parent":{"krate":0,"index":280}},{"kind":"Use","ref_id":{"krate":0,"index":44},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":19948,"byte_end":19959,"line_start":6,"line_end":6,"column_start":30,"column_end":41},"alias_span":null,"name":"MutableKeys","value":"","parent":{"krate":0,"index":279}},{"kind":"Use","ref_id":{"krate":0,"index":462},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":20506,"byte_end":20511,"line_start":27,"line_end":27,"column_start":22,"column_end":27},"alias_span":null,"name":"Entry","value":"","parent":{"krate":0,"index":279}},{"kind":"Use","ref_id":{"krate":0,"index":326},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":20513,"byte_end":20526,"line_start":27,"line_end":27,"column_start":29,"column_end":42},"alias_span":null,"name":"OccupiedEntry","value":"","parent":{"krate":0,"index":279}},{"kind":"Use","ref_id":{"krate":0,"index":503},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":20528,"byte_end":20539,"line_start":27,"line_end":27,"column_start":44,"column_end":55},"alias_span":null,"name":"VacantEntry","value":"","parent":{"krate":0,"index":279}},{"kind":"Use","ref_id":{"krate":0,"index":21},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":3648,"byte_end":3658,"line_start":111,"line_end":111,"column_start":28,"column_end":38},"alias_span":null,"name":"Equivalent","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":600},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":3680,"byte_end":3688,"line_start":112,"line_end":112,"column_start":21,"column_end":29},"alias_span":null,"name":"IndexMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1022},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":3710,"byte_end":3718,"line_start":113,"line_end":113,"column_start":21,"column_end":29},"alias_span":null,"name":"IndexSet","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":92,"byte_end":5450,"line_start":2,"line_end":192,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":17},{"krate":0,"index":28},{"krate":0,"index":63},{"krate":0,"index":190},{"krate":0,"index":257},{"krate":0,"index":279},{"krate":0,"index":957},{"krate":0,"index":1376},{"krate":0,"index":1379},{"krate":0,"index":1382},{"krate":0,"index":1482},{"krate":0,"index":1485},{"krate":0,"index":1487},{"krate":0,"index":1488},{"krate":0,"index":1490},{"krate":0,"index":1491},{"krate":0,"index":1385},{"krate":0,"index":1494},{"krate":0,"index":1500},{"krate":0,"index":1503},{"krate":0,"index":1387},{"krate":0,"index":1392},{"krate":0,"index":1403}],"decl_id":null,"docs":" [`IndexMap`] is a hash table where the iteration order of the key-value\n pairs is independent of the hash values of the keys.","sig":null,"attributes":[{"value":"deny(unsafe_code)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":92,"byte_end":113,"line_start":2,"line_end":2,"column_start":1,"column_end":22}},{"value":"warn(rust_2018_idioms)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":114,"byte_end":140,"line_start":3,"line_end":3,"column_start":1,"column_end":27}},{"value":"no_std","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":196,"byte_end":206,"line_start":5,"line_end":5,"column_start":1,"column_end":11}},{"value":"/ [`IndexMap`] is a hash table where the iteration order of the key-value","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":208,"byte_end":283,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ pairs is independent of the hash values of the keys.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":284,"byte_end":340,"line_start":8,"line_end":8,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":341,"byte_end":344,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`] is a corresponding hash set using the same implementation and","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":345,"byte_end":423,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/ with similar properties.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":424,"byte_end":452,"line_start":11,"line_end":11,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":453,"byte_end":456,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`IndexMap`]: map/struct.IndexMap.html","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":457,"byte_end":499,"line_start":13,"line_end":13,"column_start":1,"column_end":43}},{"value":"/ [`IndexSet`]: set/struct.IndexSet.html","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":500,"byte_end":542,"line_start":14,"line_end":14,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":543,"byte_end":546,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":547,"byte_end":550,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ### Feature Highlights","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":551,"byte_end":577,"line_start":17,"line_end":17,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":578,"byte_end":581,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`IndexMap`] and [`IndexSet`] are drop-in compatible with the std `HashMap`","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":582,"byte_end":661,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ and `HashSet`, but they also have some features of note:","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":662,"byte_end":722,"line_start":20,"line_end":20,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":723,"byte_end":726,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ - The ordering semantics (see their documentation for details)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":727,"byte_end":793,"line_start":22,"line_end":22,"column_start":1,"column_end":67}},{"value":"/ - Sorting methods and the [`.pop()`][IndexMap::pop] methods.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":794,"byte_end":858,"line_start":23,"line_end":23,"column_start":1,"column_end":65}},{"value":"/ - The [`Equivalent`] trait, which offers more flexible equality definitions","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":859,"byte_end":938,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/   between borrowed and owned versions of keys.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":939,"byte_end":989,"line_start":25,"line_end":25,"column_start":1,"column_end":51}},{"value":"/ - The [`MutableKeys`][map::MutableKeys] trait, which gives opt-in mutable","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":990,"byte_end":1067,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/   access to hash map keys.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":1068,"byte_end":1098,"line_start":27,"line_end":27,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":1099,"byte_end":1102,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ### Alternate Hashers","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":1103,"byte_end":1128,"line_start":29,"line_end":29,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":1129,"byte_end":1132,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ [`IndexMap`] and [`IndexSet`] have a default hasher type `S = RandomState`,","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":1133,"byte_end":1212,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ just like the standard `HashMap` and `HashSet`, which is resistant to","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":1213,"byte_end":1286,"line_start":32,"line_end":32,"column_start":1,"column_end":74}},{"value":"/ HashDoS attacks but not the most performant. Type aliases can make it easier","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":1287,"byte_end":1367,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ to use alternate hashers:","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":1368,"byte_end":1397,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":1398,"byte_end":1401,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":1402,"byte_end":1409,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/ use fnv::FnvBuildHasher;","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":1410,"byte_end":1438,"line_start":37,"line_end":37,"column_start":1,"column_end":29}},{"value":"/ use fxhash::FxBuildHasher;","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":1439,"byte_end":1469,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/ use indexmap::{IndexMap, IndexSet};","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":1470,"byte_end":1509,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":1510,"byte_end":1513,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ type FnvIndexMap<K, V> = IndexMap<K, V, FnvBuildHasher>;","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":1514,"byte_end":1574,"line_start":41,"line_end":41,"column_start":1,"column_end":61}},{"value":"/ type FnvIndexSet<T> = IndexSet<T, FnvBuildHasher>;","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":1575,"byte_end":1629,"line_start":42,"line_end":42,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":1630,"byte_end":1633,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ type FxIndexMap<K, V> = IndexMap<K, V, FxBuildHasher>;","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":1634,"byte_end":1692,"line_start":44,"line_end":44,"column_start":1,"column_end":59}},{"value":"/ type FxIndexSet<T> = IndexSet<T, FxBuildHasher>;","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":1693,"byte_end":1745,"line_start":45,"line_end":45,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":1746,"byte_end":1749,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ let std: IndexSet<i32> = (0..100).collect();","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":1750,"byte_end":1798,"line_start":47,"line_end":47,"column_start":1,"column_end":49}},{"value":"/ let fnv: FnvIndexSet<i32> = (0..100).collect();","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":1799,"byte_end":1850,"line_start":48,"line_end":48,"column_start":1,"column_end":52}},{"value":"/ let fx: FxIndexSet<i32> = (0..100).collect();","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":1851,"byte_end":1900,"line_start":49,"line_end":49,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(std, fnv);","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":1901,"byte_end":1926,"line_start":50,"line_end":50,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(std, fx);","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":1927,"byte_end":1951,"line_start":51,"line_end":51,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":1952,"byte_end":1959,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":1960,"byte_end":1963,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ### Rust Version","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":1964,"byte_end":1984,"line_start":54,"line_end":54,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":1985,"byte_end":1988,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ This version of indexmap requires Rust 1.36 or later.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":1989,"byte_end":2046,"line_start":56,"line_end":56,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":2047,"byte_end":2050,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ The indexmap 1.x release series will use a carefully considered version","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":2051,"byte_end":2126,"line_start":58,"line_end":58,"column_start":1,"column_end":76}},{"value":"/ upgrade policy, where in a later 1.x version, we will raise the minimum","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":2127,"byte_end":2202,"line_start":59,"line_end":59,"column_start":1,"column_end":76}},{"value":"/ required Rust version.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":2203,"byte_end":2229,"line_start":60,"line_end":60,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":2230,"byte_end":2233,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ## No Standard Library Targets","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":2234,"byte_end":2268,"line_start":62,"line_end":62,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":2269,"byte_end":2272,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ This crate supports being built without `std`, requiring","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":2273,"byte_end":2333,"line_start":64,"line_end":64,"column_start":1,"column_end":61}},{"value":"/ `alloc` instead. This is enabled automatically when it is detected that","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":2334,"byte_end":2409,"line_start":65,"line_end":65,"column_start":1,"column_end":76}},{"value":"/ `std` is not available. There is no crate feature to enable/disable to","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":2410,"byte_end":2484,"line_start":66,"line_end":66,"column_start":1,"column_end":75}},{"value":"/ trigger this. It can be tested by building for a std-less target.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":2485,"byte_end":2554,"line_start":67,"line_end":67,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":2555,"byte_end":2558,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ - Creating maps and sets using [`new`][IndexMap::new] and","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":2559,"byte_end":2620,"line_start":69,"line_end":69,"column_start":1,"column_end":62}},{"value":"/ [`with_capacity`][IndexMap::with_capacity] is unavailable without `std`.  ","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":2621,"byte_end":2699,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/   Use methods [`IndexMap::default`][def],","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":2700,"byte_end":2745,"line_start":71,"line_end":71,"column_start":1,"column_end":46}},{"value":"/   [`with_hasher`][IndexMap::with_hasher],","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":2746,"byte_end":2791,"line_start":72,"line_end":72,"column_start":1,"column_end":46}},{"value":"/   [`with_capacity_and_hasher`][IndexMap::with_capacity_and_hasher] instead.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":2792,"byte_end":2871,"line_start":73,"line_end":73,"column_start":1,"column_end":80}},{"value":"/   A no-std compatible hasher will be needed as well, for example","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":2872,"byte_end":2940,"line_start":74,"line_end":74,"column_start":1,"column_end":69}},{"value":"/   from the crate `twox-hash`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":2941,"byte_end":2974,"line_start":75,"line_end":75,"column_start":1,"column_end":34}},{"value":"/ - Macros [`indexmap!`] and [`indexset!`] are unavailable without `std`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":2975,"byte_end":3050,"line_start":76,"line_end":76,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":3051,"byte_end":3054,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ [def]: map/struct.IndexMap.html#impl-Default","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":3055,"byte_end":3103,"line_start":78,"line_end":78,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":21},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/equivalent.rs","byte_start":9081,"byte_end":9091,"line_start":13,"line_end":13,"column_start":11,"column_end":21},"name":"Equivalent","qualname":"::equivalent::Equivalent","value":"Equivalent<K: ?Sized>","parent":null,"children":[{"krate":0,"index":23}],"decl_id":null,"docs":" Key equivalence trait.","sig":null,"attributes":[{"value":"/ Key equivalence trait.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/equivalent.rs","byte_start":8691,"byte_end":8717,"line_start":3,"line_end":3,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/equivalent.rs","byte_start":8718,"byte_end":8721,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This trait allows hash table lookup to be customized.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/equivalent.rs","byte_start":8722,"byte_end":8779,"line_start":5,"line_end":5,"column_start":1,"column_end":58}},{"value":"/ It has one blanket implementation that uses the regular `Borrow` solution,","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/equivalent.rs","byte_start":8780,"byte_end":8858,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ just like `HashMap` and `BTreeMap` do, so that you can pass `&str` to lookup","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/equivalent.rs","byte_start":8859,"byte_end":8939,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ into a map with `String` keys and so on.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/equivalent.rs","byte_start":8940,"byte_end":8984,"line_start":8,"line_end":8,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/equivalent.rs","byte_start":8985,"byte_end":8988,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Contract","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/equivalent.rs","byte_start":8989,"byte_end":9003,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/equivalent.rs","byte_start":9004,"byte_end":9007,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The implementor **must** hash like `K`, if it is hashable.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/equivalent.rs","byte_start":9008,"byte_end":9070,"line_start":12,"line_end":12,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/equivalent.rs","byte_start":9179,"byte_end":9189,"line_start":15,"line_end":15,"column_start":8,"column_end":18},"name":"equivalent","qualname":"::equivalent::Equivalent::equivalent","value":"pub fn equivalent(&Self, &K) -> bool","parent":{"krate":0,"index":21},"children":[],"decl_id":null,"docs":" Compare self to `key` and return `true` if they are equal.\n","sig":null,"attributes":[{"value":"/ Compare self to `key` and return `true` if they are equal.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/equivalent.rs","byte_start":9109,"byte_end":9171,"line_start":14,"line_end":14,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":43},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/mutable_keys.rs","byte_start":9485,"byte_end":9498,"line_start":5,"line_end":5,"column_start":12,"column_end":25},"name":"PrivateMarker","qualname":"::mutable_keys::PrivateMarker","value":"PrivateMarker {  }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":44},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/mutable_keys.rs","byte_start":10046,"byte_end":10057,"line_start":19,"line_end":19,"column_start":11,"column_end":22},"name":"MutableKeys","qualname":"::mutable_keys::MutableKeys","value":"MutableKeys","parent":null,"children":[{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":49},{"krate":0,"index":51}],"decl_id":null,"docs":" Opt-in mutable access to keys.","sig":null,"attributes":[{"value":"/ Opt-in mutable access to keys.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/mutable_keys.rs","byte_start":9503,"byte_end":9537,"line_start":7,"line_end":7,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/mutable_keys.rs","byte_start":9538,"byte_end":9541,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ These methods expose `&mut K`, mutable references to the key as it is stored","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/mutable_keys.rs","byte_start":9542,"byte_end":9622,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ in the map.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/mutable_keys.rs","byte_start":9623,"byte_end":9638,"line_start":10,"line_end":10,"column_start":1,"column_end":16}},{"value":"/ You are allowed to modify the keys in the hashmap **if the modifcation","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/mutable_keys.rs","byte_start":9639,"byte_end":9713,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ does not change the key’s hash and equality**.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/mutable_keys.rs","byte_start":9714,"byte_end":9766,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/mutable_keys.rs","byte_start":9767,"byte_end":9770,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ If keys are modified erronously, you can no longer look them up.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/mutable_keys.rs","byte_start":9771,"byte_end":9839,"line_start":14,"line_end":14,"column_start":1,"column_end":69}},{"value":"/ This is sound (memory safe) but a logical error hazard (just like","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/mutable_keys.rs","byte_start":9840,"byte_end":9909,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/ implementing PartialEq, Eq, or Hash incorrectly would be).","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/mutable_keys.rs","byte_start":9910,"byte_end":9972,"line_start":16,"line_end":16,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/mutable_keys.rs","byte_start":9973,"byte_end":9976,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ `use` this trait to enable its methods for `IndexMap`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/mutable_keys.rs","byte_start":9977,"byte_end":10035,"line_start":18,"line_end":18,"column_start":1,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":45},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/mutable_keys.rs","byte_start":10069,"byte_end":10072,"line_start":20,"line_end":20,"column_start":10,"column_end":13},"name":"Key","qualname":"::mutable_keys::MutableKeys::Key","value":"type Key;","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":46},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/mutable_keys.rs","byte_start":10083,"byte_end":10088,"line_start":21,"line_end":21,"column_start":10,"column_end":15},"name":"Value","qualname":"::mutable_keys::MutableKeys::Value","value":"type Value;","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/mutable_keys.rs","byte_start":10160,"byte_end":10173,"line_start":24,"line_end":24,"column_start":8,"column_end":21},"name":"get_full_mut2","qualname":"::mutable_keys::MutableKeys::get_full_mut2","value":"pub fn get_full_mut2<Q: ?Sized>(&mut Self, &Q)\n-> Option<(usize, &mut Self::Key, &mut Self::Value)> where Q: Hash +\nEquivalent<Self::Key>","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" Return item index, mutable reference to key and value\n","sig":null,"attributes":[{"value":"/ Return item index, mutable reference to key and value","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/mutable_keys.rs","byte_start":10095,"byte_end":10152,"line_start":23,"line_end":23,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/mutable_keys.rs","byte_start":10609,"byte_end":10616,"line_start":38,"line_end":38,"column_start":8,"column_end":15},"name":"retain2","qualname":"::mutable_keys::MutableKeys::retain2","value":"pub fn retain2<F>(&mut Self, F) where\nF: FnMut(&mut Self::Key, &mut Self::Value) -> bool","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" Scan through each key-value pair in the map and keep those where the\n closure `keep` returns `true`.","sig":null,"attributes":[{"value":"/ Scan through each key-value pair in the map and keep those where the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/mutable_keys.rs","byte_start":10337,"byte_end":10409,"line_start":31,"line_end":31,"column_start":5,"column_end":77}},{"value":"/ closure `keep` returns `true`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/mutable_keys.rs","byte_start":10414,"byte_end":10448,"line_start":32,"line_end":32,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/mutable_keys.rs","byte_start":10453,"byte_end":10456,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ The elements are visited in order, and remaining elements keep their","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/mutable_keys.rs","byte_start":10461,"byte_end":10533,"line_start":34,"line_end":34,"column_start":5,"column_end":77}},{"value":"/ order.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/mutable_keys.rs","byte_start":10538,"byte_end":10548,"line_start":35,"line_end":35,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/mutable_keys.rs","byte_start":10553,"byte_end":10556,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/mutable_keys.rs","byte_start":10561,"byte_end":10601,"line_start":37,"line_end":37,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/mutable_keys.rs","byte_start":10908,"byte_end":10924,"line_start":45,"line_end":45,"column_start":8,"column_end":24},"name":"__private_marker","qualname":"::mutable_keys::MutableKeys::__private_marker","value":"pub fn __private_marker(&Self) -> PrivateMarker","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" This method is not useful in itself – it is there to “seal” the trait\n for external implementation, so that we can add methods without\n causing breaking changes.\n","sig":null,"attributes":[{"value":"/ This method is not useful in itself – it is there to “seal” the trait","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/mutable_keys.rs","byte_start":10715,"byte_end":10794,"line_start":42,"line_end":42,"column_start":5,"column_end":78}},{"value":"/ for external implementation, so that we can add methods without","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/mutable_keys.rs","byte_start":10799,"byte_end":10866,"line_start":43,"line_end":43,"column_start":5,"column_end":72}},{"value":"/ causing breaking changes.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/mutable_keys.rs","byte_start":10871,"byte_end":10900,"line_start":44,"line_end":44,"column_start":5,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":190},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"serde_seq","qualname":"::serde_seq","value":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","parent":null,"children":[{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":198},{"krate":0,"index":201},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":208},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":215},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":228},{"krate":0,"index":231},{"krate":0,"index":236},{"krate":0,"index":242},{"krate":0,"index":251}],"decl_id":null,"docs":" Functions to serialize and deserialize an `IndexMap` as an ordered sequence.","sig":null,"attributes":[{"value":"cfg(feature = \"serde\")","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":3386,"byte_end":3411,"line_start":99,"line_end":99,"column_start":1,"column_end":26}},{"value":"/ Functions to serialize and deserialize an `IndexMap` as an ordered sequence.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":15497,"byte_end":15577,"line_start":1,"line_end":1,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":15578,"byte_end":15581,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The default `serde` implementation serializes `IndexMap` as a normal map,","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":15582,"byte_end":15659,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/ but there is no guarantee that serialization formats will preserve the order","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":15660,"byte_end":15740,"line_start":4,"line_end":4,"column_start":1,"column_end":81}},{"value":"/ of the key-value pairs. This module serializes `IndexMap` as a sequence of","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":15741,"byte_end":15819,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ `(key, value)` elements instead, in order.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":15820,"byte_end":15866,"line_start":6,"line_end":6,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":15867,"byte_end":15870,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This module may be used in a field attribute for derived implementations:","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":15871,"byte_end":15948,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":15949,"byte_end":15952,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":15953,"byte_end":15960,"line_start":10,"line_end":10,"column_start":1,"column_end":8}},{"value":"/ # use indexmap::IndexMap;","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":15961,"byte_end":15990,"line_start":11,"line_end":11,"column_start":1,"column_end":30}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":15991,"byte_end":16040,"line_start":12,"line_end":12,"column_start":1,"column_end":50}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":16041,"byte_end":16078,"line_start":13,"line_end":13,"column_start":1,"column_end":38}},{"value":"/ struct Data {","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":16079,"byte_end":16096,"line_start":14,"line_end":14,"column_start":1,"column_end":18}},{"value":"/     #[serde(with = \"indexmap::serde_seq\")]","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":16097,"byte_end":16143,"line_start":15,"line_end":15,"column_start":1,"column_end":47}},{"value":"/     map: IndexMap<i32, u64>,","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":16144,"byte_end":16176,"line_start":16,"line_end":16,"column_start":1,"column_end":33}},{"value":"/     // ...","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":16177,"byte_end":16191,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":16192,"byte_end":16197,"line_start":18,"line_end":18,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":16198,"byte_end":16205,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":16206,"byte_end":16209,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Requires crate feature `\"serde\"` or `\"serde-1\"`","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":16210,"byte_end":16261,"line_start":21,"line_end":21,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":231},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":16941,"byte_end":16950,"line_start":48,"line_end":48,"column_start":8,"column_end":17},"name":"serialize","qualname":"::serde_seq::serialize","value":"pub fn serialize<K, V, S, T>(&IndexMap<K, V, S>, T) -> Result<T::Ok, T::Error>\nwhere K: Serialize + Hash + Eq, V: Serialize, S: BuildHasher, T: Serializer","parent":null,"children":[],"decl_id":null,"docs":" Serializes an `IndexMap` as an ordered sequence.","sig":null,"attributes":[{"value":"/ Serializes an `IndexMap` as an ordered sequence.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":16494,"byte_end":16546,"line_start":32,"line_end":32,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":16547,"byte_end":16550,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ This function may be used in a field attribute for deriving `Serialize`:","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":16551,"byte_end":16627,"line_start":34,"line_end":34,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":16628,"byte_end":16631,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":16632,"byte_end":16639,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/ # use indexmap::IndexMap;","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":16640,"byte_end":16669,"line_start":37,"line_end":37,"column_start":1,"column_end":30}},{"value":"/ # use serde_derive::Serialize;","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":16670,"byte_end":16704,"line_start":38,"line_end":38,"column_start":1,"column_end":35}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":16705,"byte_end":16729,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/ struct Data {","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":16730,"byte_end":16747,"line_start":40,"line_end":40,"column_start":1,"column_end":18}},{"value":"/     #[serde(serialize_with = \"indexmap::serde_seq::serialize\")]","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":16748,"byte_end":16815,"line_start":41,"line_end":41,"column_start":1,"column_end":68}},{"value":"/     map: IndexMap<i32, u64>,","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":16816,"byte_end":16848,"line_start":42,"line_end":42,"column_start":1,"column_end":33}},{"value":"/     // ...","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":16849,"byte_end":16863,"line_start":43,"line_end":43,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":16864,"byte_end":16869,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":16870,"byte_end":16877,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":16878,"byte_end":16881,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Requires crate feature `\"serde\"` or `\"serde-1\"`","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":16882,"byte_end":16933,"line_start":47,"line_end":47,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":251},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":18426,"byte_end":18437,"line_start":104,"line_end":104,"column_start":8,"column_end":19},"name":"deserialize","qualname":"::serde_seq::deserialize","value":"pub fn deserialize<'de, D, K, V, S>(D) -> Result<IndexMap<K, V, S>, D::Error>\nwhere D: Deserializer, K: Deserialize + Eq + Hash, V: Deserialize,\nS: Default + BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Deserializes an `IndexMap` from an ordered sequence.","sig":null,"attributes":[{"value":"/ Deserializes an `IndexMap` from an ordered sequence.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":17965,"byte_end":18021,"line_start":88,"line_end":88,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":18022,"byte_end":18025,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ This function may be used in a field attribute for deriving `Deserialize`:","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":18026,"byte_end":18104,"line_start":90,"line_end":90,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":18105,"byte_end":18108,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":18109,"byte_end":18116,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ # use indexmap::IndexMap;","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":18117,"byte_end":18146,"line_start":93,"line_end":93,"column_start":1,"column_end":30}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":18147,"byte_end":18183,"line_start":94,"line_end":94,"column_start":1,"column_end":37}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":18184,"byte_end":18210,"line_start":95,"line_end":95,"column_start":1,"column_end":27}},{"value":"/ struct Data {","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":18211,"byte_end":18228,"line_start":96,"line_end":96,"column_start":1,"column_end":18}},{"value":"/     #[serde(deserialize_with = \"indexmap::serde_seq::deserialize\")]","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":18229,"byte_end":18300,"line_start":97,"line_end":97,"column_start":1,"column_end":72}},{"value":"/     map: IndexMap<i32, u64>,","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":18301,"byte_end":18333,"line_start":98,"line_end":98,"column_start":1,"column_end":33}},{"value":"/     // ...","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":18334,"byte_end":18348,"line_start":99,"line_end":99,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":18349,"byte_end":18354,"line_start":100,"line_end":100,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":18355,"byte_end":18362,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":18363,"byte_end":18366,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ Requires crate feature `\"serde\"` or `\"serde-1\"`","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":18367,"byte_end":18418,"line_start":103,"line_end":103,"column_start":1,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":279},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"map","qualname":"::map","value":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":522},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":529},{"krate":0,"index":532},{"krate":0,"index":535},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":545},{"krate":0,"index":548},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":555},{"krate":0,"index":558},{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":565},{"krate":0,"index":568},{"krate":0,"index":571},{"krate":0,"index":574},{"krate":0,"index":577},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":584},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":594},{"krate":0,"index":597},{"krate":0,"index":600},{"krate":0,"index":606},{"krate":0,"index":612},{"krate":0,"index":622},{"krate":0,"index":627},{"krate":0,"index":632},{"krate":0,"index":652},{"krate":0,"index":712},{"krate":0,"index":725},{"krate":0,"index":730},{"krate":0,"index":735},{"krate":0,"index":739},{"krate":0,"index":743},{"krate":0,"index":747},{"krate":0,"index":751},{"krate":0,"index":756},{"krate":0,"index":761},{"krate":0,"index":765},{"krate":0,"index":769},{"krate":0,"index":773},{"krate":0,"index":777},{"krate":0,"index":782},{"krate":0,"index":787},{"krate":0,"index":791},{"krate":0,"index":795},{"krate":0,"index":800},{"krate":0,"index":805},{"krate":0,"index":809},{"krate":0,"index":813},{"krate":0,"index":817},{"krate":0,"index":821},{"krate":0,"index":826},{"krate":0,"index":831},{"krate":0,"index":835},{"krate":0,"index":839},{"krate":0,"index":843},{"krate":0,"index":847},{"krate":0,"index":851},{"krate":0,"index":855},{"krate":0,"index":859},{"krate":0,"index":864},{"krate":0,"index":868},{"krate":0,"index":871},{"krate":0,"index":879},{"krate":0,"index":887},{"krate":0,"index":894},{"krate":0,"index":901},{"krate":0,"index":907},{"krate":0,"index":913},{"krate":0,"index":918},{"krate":0,"index":924},{"krate":0,"index":931},{"krate":0,"index":939},{"krate":0,"index":944},{"krate":0,"index":953}],"decl_id":null,"docs":" `IndexMap` is a hash table where the iteration order of the key-value\n pairs is independent of the hash values of the keys.\n","sig":null,"attributes":[{"value":"/ `IndexMap` is a hash table where the iteration order of the key-value","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":19776,"byte_end":19849,"line_start":1,"line_end":1,"column_start":1,"column_end":74}},{"value":"/ pairs is independent of the hash values of the keys.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":19850,"byte_end":19906,"line_start":2,"line_end":2,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":326},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core/raw.rs","byte_start":92037,"byte_end":92050,"line_start":95,"line_end":95,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::map::core::raw::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332}],"decl_id":null,"docs":" A view into an occupied entry in a `IndexMap`.\n It is part of the [`Entry`] enum.","sig":null,"attributes":[{"value":"/ A view into an occupied entry in a `IndexMap`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core/raw.rs","byte_start":91765,"byte_end":91815,"line_start":89,"line_end":89,"column_start":1,"column_end":51}},{"value":"/ It is part of the [`Entry`] enum.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core/raw.rs","byte_start":91816,"byte_end":91853,"line_start":90,"line_end":90,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core/raw.rs","byte_start":91854,"byte_end":91857,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core/raw.rs","byte_start":91858,"byte_end":91888,"line_start":92,"line_end":92,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core/raw.rs","byte_start":92458,"byte_end":92461,"line_start":107,"line_end":107,"column_start":12,"column_end":15},"name":"key","qualname":"<OccupiedEntry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core/raw.rs","byte_start":92513,"byte_end":92516,"line_start":111,"line_end":111,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"pub fn get(&Self) -> &V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core/raw.rs","byte_start":92596,"byte_end":92603,"line_start":115,"line_end":115,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core/raw.rs","byte_start":93015,"byte_end":93020,"line_start":129,"line_end":129,"column_start":12,"column_end":17},"name":"index","qualname":"<OccupiedEntry>::index","value":"pub fn index(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the index of the key-value pair\n","sig":null,"attributes":[{"value":"/ Return the index of the key-value pair","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core/raw.rs","byte_start":92947,"byte_end":92989,"line_start":127,"line_end":127,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core/raw.rs","byte_start":92994,"byte_end":93003,"line_start":128,"line_end":128,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core/raw.rs","byte_start":93166,"byte_end":93174,"line_start":134,"line_end":134,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"pub fn into_mut(Self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core/raw.rs","byte_start":93635,"byte_end":93652,"line_start":146,"line_end":146,"column_start":12,"column_end":29},"name":"swap_remove_entry","qualname":"<OccupiedEntry>::swap_remove_entry","value":"pub fn swap_remove_entry(Self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the key, value pair stored in the map for this entry","sig":null,"attributes":[{"value":"/ Remove and return the key, value pair stored in the map for this entry","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core/raw.rs","byte_start":93284,"byte_end":93358,"line_start":139,"line_end":139,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core/raw.rs","byte_start":93363,"byte_end":93366,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core/raw.rs","byte_start":93371,"byte_end":93443,"line_start":141,"line_end":141,"column_start":5,"column_end":77}},{"value":"/ last element of the map and popping it off. **This perturbs","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core/raw.rs","byte_start":93448,"byte_end":93511,"line_start":142,"line_end":142,"column_start":5,"column_end":68}},{"value":"/ the postion of what used to be the last element!**","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core/raw.rs","byte_start":93516,"byte_end":93570,"line_start":143,"line_end":143,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core/raw.rs","byte_start":93575,"byte_end":93578,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core/raw.rs","byte_start":93583,"byte_end":93623,"line_start":145,"line_end":145,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core/raw.rs","byte_start":94302,"byte_end":94320,"line_start":160,"line_end":160,"column_start":12,"column_end":30},"name":"shift_remove_entry","qualname":"<OccupiedEntry>::shift_remove_entry","value":"pub fn shift_remove_entry(Self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the key, value pair stored in the map for this entry","sig":null,"attributes":[{"value":"/ Remove and return the key, value pair stored in the map for this entry","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core/raw.rs","byte_start":93956,"byte_end":94030,"line_start":153,"line_end":153,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core/raw.rs","byte_start":94035,"byte_end":94038,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the pair is removed by shifting all of the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core/raw.rs","byte_start":94043,"byte_end":94109,"line_start":155,"line_end":155,"column_start":5,"column_end":71}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core/raw.rs","byte_start":94114,"byte_end":94175,"line_start":156,"line_end":156,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core/raw.rs","byte_start":94180,"byte_end":94237,"line_start":157,"line_end":157,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core/raw.rs","byte_start":94242,"byte_end":94245,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core/raw.rs","byte_start":94250,"byte_end":94290,"line_start":159,"line_end":159,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":466},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":83164,"byte_end":83172,"line_start":442,"line_end":442,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::map::core::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry)","parent":{"krate":0,"index":462},"children":[],"decl_id":null,"docs":" Existing slot with equivalent key.\n","sig":null,"attributes":[{"value":"/ Existing slot with equivalent key.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":83121,"byte_end":83159,"line_start":441,"line_end":441,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":469},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":83255,"byte_end":83261,"line_start":444,"line_end":444,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::map::core::Entry::Vacant","value":"Entry::Vacant(VacantEntry)","parent":{"krate":0,"index":462},"children":[],"decl_id":null,"docs":" Vacant slot (no equivalent key in the map).\n","sig":null,"attributes":[{"value":"/ Vacant slot (no equivalent key in the map).","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":83203,"byte_end":83250,"line_start":443,"line_end":443,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":462},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":83099,"byte_end":83104,"line_start":440,"line_end":440,"column_start":10,"column_end":15},"name":"Entry","qualname":"::map::core::Entry","value":"pub enum Entry<'a, K, V> { Occupied(OccupiedEntry), Vacant(VacantEntry), }","parent":null,"children":[{"krate":0,"index":466},{"krate":0,"index":469}],"decl_id":null,"docs":" Entry for an existing key-value pair or a vacant location to\n insert one.\n","sig":null,"attributes":[{"value":"/ Entry for an existing key-value pair or a vacant location to","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":83009,"byte_end":83073,"line_start":438,"line_end":438,"column_start":1,"column_end":65}},{"value":"/ insert one.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":83074,"byte_end":83089,"line_start":439,"line_end":439,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":83388,"byte_end":83397,"line_start":449,"line_end":449,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"pub fn or_insert(Self, V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time (amortized average).\n","sig":null,"attributes":[{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":83326,"byte_end":83376,"line_start":448,"line_end":448,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":83650,"byte_end":83664,"line_start":457,"line_end":457,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"pub fn or_insert_with<F>(Self, F) -> &'a mut V where F: FnOnce() -> V","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time (amortized average).\n","sig":null,"attributes":[{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":83588,"byte_end":83638,"line_start":456,"line_end":456,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":83901,"byte_end":83904,"line_start":467,"line_end":467,"column_start":12,"column_end":15},"name":"key","qualname":"<Entry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":84156,"byte_end":84161,"line_start":475,"line_end":475,"column_start":12,"column_end":17},"name":"index","qualname":"<Entry>::index","value":"pub fn index(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the index where the key-value pair exists or will be inserted.\n","sig":null,"attributes":[{"value":"/ Return the index where the key-value pair exists or will be inserted.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":84071,"byte_end":84144,"line_start":474,"line_end":474,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":84388,"byte_end":84398,"line_start":483,"line_end":483,"column_start":12,"column_end":22},"name":"and_modify","qualname":"<Entry>::and_modify","value":"pub fn and_modify<F>(Self, F) -> Self where F: FnOnce(&mut V) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Modifies the entry if it is occupied.\n","sig":null,"attributes":[{"value":"/ Modifies the entry if it is occupied.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":84335,"byte_end":84376,"line_start":482,"line_end":482,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":84910,"byte_end":84920,"line_start":500,"line_end":500,"column_start":12,"column_end":22},"name":"or_default","qualname":"<Entry>::or_default","value":"pub fn or_default(Self) -> &'a mut V where V: Default","parent":null,"children":[],"decl_id":null,"docs":" Inserts a default-constructed value in the entry if it is vacant and returns a mutable\n reference to it. Otherwise a mutable reference to an already existent value is returned.","sig":null,"attributes":[{"value":"/ Inserts a default-constructed value in the entry if it is vacant and returns a mutable","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":84648,"byte_end":84738,"line_start":496,"line_end":496,"column_start":5,"column_end":95}},{"value":"/ reference to it. Otherwise a mutable reference to an already existent value is returned.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":84743,"byte_end":84835,"line_start":497,"line_end":497,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":84840,"byte_end":84843,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":84848,"byte_end":84898,"line_start":499,"line_end":499,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":85715,"byte_end":85721,"line_start":525,"line_end":525,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"pub fn insert(&mut Self, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry to `value`, and returns the entry's old value.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry to `value`, and returns the entry's old value.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":85625,"byte_end":85703,"line_start":524,"line_end":524,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":85964,"byte_end":85970,"line_start":532,"line_end":532,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"pub fn remove(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Remove the key, value pair stored in the map for this entry, and return the value.","sig":null,"attributes":[{"value":"/ Remove the key, value pair stored in the map for this entry, and return the value.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":85800,"byte_end":85886,"line_start":529,"line_end":529,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":85891,"byte_end":85894,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** This is equivalent to `.swap_remove()`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":85899,"byte_end":85952,"line_start":531,"line_end":531,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":86385,"byte_end":86396,"line_start":543,"line_end":543,"column_start":12,"column_end":23},"name":"swap_remove","qualname":"<OccupiedEntry>::swap_remove","value":"pub fn swap_remove(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Remove the key, value pair stored in the map for this entry, and return the value.","sig":null,"attributes":[{"value":"/ Remove the key, value pair stored in the map for this entry, and return the value.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":86022,"byte_end":86108,"line_start":536,"line_end":536,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":86113,"byte_end":86116,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":86121,"byte_end":86193,"line_start":538,"line_end":538,"column_start":5,"column_end":77}},{"value":"/ last element of the map and popping it off. **This perturbs","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":86198,"byte_end":86261,"line_start":539,"line_end":539,"column_start":5,"column_end":68}},{"value":"/ the postion of what used to be the last element!**","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":86266,"byte_end":86320,"line_start":540,"line_end":540,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":86325,"byte_end":86328,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":86333,"byte_end":86373,"line_start":542,"line_end":542,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":86814,"byte_end":86826,"line_start":554,"line_end":554,"column_start":12,"column_end":24},"name":"shift_remove","qualname":"<OccupiedEntry>::shift_remove","value":"pub fn shift_remove(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Remove the key, value pair stored in the map for this entry, and return the value.","sig":null,"attributes":[{"value":"/ Remove the key, value pair stored in the map for this entry, and return the value.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":86456,"byte_end":86542,"line_start":547,"line_end":547,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":86547,"byte_end":86550,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the pair is removed by shifting all of the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":86555,"byte_end":86621,"line_start":549,"line_end":549,"column_start":5,"column_end":71}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":86626,"byte_end":86687,"line_start":550,"line_end":550,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":86692,"byte_end":86749,"line_start":551,"line_end":551,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":86754,"byte_end":86757,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":86762,"byte_end":86802,"line_start":553,"line_end":553,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":87045,"byte_end":87057,"line_start":561,"line_end":561,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<OccupiedEntry>::remove_entry","value":"pub fn remove_entry(Self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the key, value pair stored in the map for this entry","sig":null,"attributes":[{"value":"/ Remove and return the key, value pair stored in the map for this entry","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":86887,"byte_end":86961,"line_start":558,"line_end":558,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":86966,"byte_end":86969,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** This is equivalent to `.swap_remove_entry()`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":86974,"byte_end":87033,"line_start":560,"line_end":560,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":503},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":87548,"byte_end":87559,"line_start":579,"line_end":579,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::map::core::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509}],"decl_id":null,"docs":" A view into a vacant entry in a `IndexMap`.\n It is part of the [`Entry`] enum.","sig":null,"attributes":[{"value":"/ A view into a vacant entry in a `IndexMap`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":87416,"byte_end":87463,"line_start":575,"line_end":575,"column_start":1,"column_end":48}},{"value":"/ It is part of the [`Entry`] enum.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":87464,"byte_end":87501,"line_start":576,"line_end":576,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":87502,"byte_end":87505,"line_start":577,"line_end":577,"column_start":1,"column_end":4}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":87506,"byte_end":87536,"line_start":578,"line_end":578,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":87695,"byte_end":87698,"line_start":586,"line_end":586,"column_start":12,"column_end":15},"name":"key","qualname":"<VacantEntry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":87750,"byte_end":87758,"line_start":590,"line_end":590,"column_start":12,"column_end":20},"name":"into_key","qualname":"<VacantEntry>::into_key","value":"pub fn into_key(Self) -> K","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":87875,"byte_end":87880,"line_start":595,"line_end":595,"column_start":12,"column_end":17},"name":"index","qualname":"<VacantEntry>::index","value":"pub fn index(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the index where the key-value pair will be inserted.\n","sig":null,"attributes":[{"value":"/ Return the index where the key-value pair will be inserted.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":87800,"byte_end":87863,"line_start":594,"line_end":594,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":87940,"byte_end":87946,"line_start":599,"line_end":599,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"pub fn insert(Self, V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":600},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":21979,"byte_end":21987,"line_start":71,"line_end":71,"column_start":12,"column_end":20},"name":"IndexMap","qualname":"::map::IndexMap","value":"IndexMap {  }","parent":null,"children":[{"krate":0,"index":604},{"krate":0,"index":605}],"decl_id":null,"docs":" A hash table where the iteration order of the key-value pairs is independent\n of the hash values of the keys.","sig":null,"attributes":[{"value":"/ A hash table where the iteration order of the key-value pairs is independent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":20543,"byte_end":20623,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"/ of the hash values of the keys.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":20624,"byte_end":20659,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":20660,"byte_end":20663,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ The interface is closely compatible with the standard `HashMap`, but also","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":20664,"byte_end":20741,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/ has additional features.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":20742,"byte_end":20770,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":20771,"byte_end":20774,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Order","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":20775,"byte_end":20786,"line_start":35,"line_end":35,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":20787,"byte_end":20790,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ The key-value pairs have a consistent order that is determined by","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":20791,"byte_end":20860,"line_start":37,"line_end":37,"column_start":1,"column_end":70}},{"value":"/ the sequence of insertion and removal calls on the map. The order does","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":20861,"byte_end":20935,"line_start":38,"line_end":38,"column_start":1,"column_end":75}},{"value":"/ not depend on the keys or the hash function at all.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":20936,"byte_end":20991,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":20992,"byte_end":20995,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ All iterators traverse the map in *the order*.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":20996,"byte_end":21046,"line_start":41,"line_end":41,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":21047,"byte_end":21050,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ The insertion order is preserved, with **notable exceptions** like the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":21051,"byte_end":21125,"line_start":43,"line_end":43,"column_start":1,"column_end":75}},{"value":"/ `.remove()` or `.swap_remove()` methods. Methods such as `.sort_by()` of","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":21126,"byte_end":21202,"line_start":44,"line_end":44,"column_start":1,"column_end":77}},{"value":"/ course result in a new order, depending on the sorting order.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":21203,"byte_end":21268,"line_start":45,"line_end":45,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":21269,"byte_end":21272,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ # Indices","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":21273,"byte_end":21286,"line_start":47,"line_end":47,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":21287,"byte_end":21290,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ The key-value pairs are indexed in a compact range without holes in the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":21291,"byte_end":21366,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"/ range `0..self.len()`. For example, the method `.get_full` looks up the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":21367,"byte_end":21442,"line_start":50,"line_end":50,"column_start":1,"column_end":76}},{"value":"/ index for a key, and the method `.get_index` looks up the key-value pair by","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":21443,"byte_end":21522,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ index.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":21523,"byte_end":21533,"line_start":52,"line_end":52,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":21534,"byte_end":21537,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":21538,"byte_end":21552,"line_start":54,"line_end":54,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":21553,"byte_end":21556,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":21557,"byte_end":21564,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ use indexmap::IndexMap;","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":21565,"byte_end":21592,"line_start":57,"line_end":57,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":21593,"byte_end":21596,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ // count the frequency of each letter in a sentence.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":21597,"byte_end":21653,"line_start":59,"line_end":59,"column_start":1,"column_end":57}},{"value":"/ let mut letters = IndexMap::new();","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":21654,"byte_end":21692,"line_start":60,"line_end":60,"column_start":1,"column_end":39}},{"value":"/ for ch in \"a short treatise on fungi\".chars() {","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":21693,"byte_end":21744,"line_start":61,"line_end":61,"column_start":1,"column_end":52}},{"value":"/     *letters.entry(ch).or_insert(0) += 1;","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":21745,"byte_end":21790,"line_start":62,"line_end":62,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":21791,"byte_end":21796,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":21797,"byte_end":21800,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(letters[&'s'], 2);","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":21801,"byte_end":21834,"line_start":65,"line_end":65,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(letters[&'t'], 3);","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":21835,"byte_end":21868,"line_start":66,"line_end":66,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(letters[&'u'], 1);","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":21869,"byte_end":21902,"line_start":67,"line_end":67,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(letters.get(&'y'), None);","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":21903,"byte_end":21943,"line_start":68,"line_end":68,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":21944,"byte_end":21951,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"cfg(has_std)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":21952,"byte_end":21967,"line_start":70,"line_end":70,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":23693,"byte_end":23696,"line_start":147,"line_end":147,"column_start":12,"column_end":15},"name":"new","qualname":"<IndexMap<K, V>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new map. (Does not allocate.)\n","sig":null,"attributes":[{"value":"/ Create a new map. (Does not allocate.)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":23625,"byte_end":23667,"line_start":145,"line_end":145,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":23672,"byte_end":23681,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":23923,"byte_end":23936,"line_start":156,"line_end":156,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<IndexMap<K, V>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new map with capacity for `n` key-value pairs. (Does not\n allocate if `n` is zero.)","sig":null,"attributes":[{"value":"/ Create a new map with capacity for `n` key-value pairs. (Does not","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":23751,"byte_end":23820,"line_start":151,"line_end":151,"column_start":5,"column_end":74}},{"value":"/ allocate if `n` is zero.)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":23825,"byte_end":23854,"line_start":152,"line_end":152,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":23859,"byte_end":23862,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":23867,"byte_end":23897,"line_start":154,"line_end":154,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":23902,"byte_end":23911,"line_start":155,"line_end":155,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":24234,"byte_end":24258,"line_start":167,"line_end":167,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<IndexMap<K, V, S>>::with_capacity_and_hasher","value":"pub fn with_capacity_and_hasher(usize, S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new map with capacity for `n` key-value pairs. (Does not\n allocate if `n` is zero.)","sig":null,"attributes":[{"value":"/ Create a new map with capacity for `n` key-value pairs. (Does not","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":24062,"byte_end":24131,"line_start":162,"line_end":162,"column_start":5,"column_end":74}},{"value":"/ allocate if `n` is zero.)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":24136,"byte_end":24165,"line_start":163,"line_end":163,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":24170,"byte_end":24173,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":24178,"byte_end":24208,"line_start":165,"line_end":165,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":24213,"byte_end":24222,"line_start":166,"line_end":166,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":637},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":24637,"byte_end":24648,"line_start":182,"line_end":182,"column_start":12,"column_end":23},"name":"with_hasher","qualname":"<IndexMap<K, V, S>>::with_hasher","value":"pub fn with_hasher(S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new map with `hash_builder`\n","sig":null,"attributes":[{"value":"/ Create a new map with `hash_builder`","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":24585,"byte_end":24625,"line_start":181,"line_end":181,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":638},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":24785,"byte_end":24793,"line_start":187,"line_end":187,"column_start":12,"column_end":20},"name":"capacity","qualname":"<IndexMap<K, V, S>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time.\n","sig":null,"attributes":[{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":24743,"byte_end":24773,"line_start":186,"line_end":186,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":24914,"byte_end":24920,"line_start":192,"line_end":192,"column_start":12,"column_end":18},"name":"hasher","qualname":"<IndexMap<K, V, S>>::hasher","value":"pub fn hasher(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the map's `BuildHasher`.\n","sig":null,"attributes":[{"value":"/ Return a reference to the map's `BuildHasher`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":24852,"byte_end":24902,"line_start":191,"line_end":191,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":25095,"byte_end":25098,"line_start":200,"line_end":200,"column_start":12,"column_end":15},"name":"len","qualname":"<IndexMap<K, V, S>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of key-value pairs in the map.","sig":null,"attributes":[{"value":"/ Return the number of key-value pairs in the map.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":24974,"byte_end":25026,"line_start":196,"line_end":196,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":25031,"byte_end":25034,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":25039,"byte_end":25069,"line_start":198,"line_end":198,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":25074,"byte_end":25083,"line_start":199,"line_end":199,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":25270,"byte_end":25278,"line_start":208,"line_end":208,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<IndexMap<K, V, S>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains no elements.","sig":null,"attributes":[{"value":"/ Returns true if the map contains no elements.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":25152,"byte_end":25201,"line_start":204,"line_end":204,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":25206,"byte_end":25209,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":25214,"byte_end":25244,"line_start":206,"line_end":206,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":25249,"byte_end":25258,"line_start":207,"line_end":207,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":25417,"byte_end":25421,"line_start":213,"line_end":213,"column_start":12,"column_end":16},"name":"iter","qualname":"<IndexMap<K, V, S>>::iter","value":"pub fn iter(&Self) -> Iter<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the key-value pairs of the map, in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over the key-value pairs of the map, in their order","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":25331,"byte_end":25405,"line_start":212,"line_end":212,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":643},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":25615,"byte_end":25623,"line_start":220,"line_end":220,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<IndexMap<K, V, S>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the key-value pairs of the map, in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over the key-value pairs of the map, in their order","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":25529,"byte_end":25603,"line_start":219,"line_end":219,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":25824,"byte_end":25828,"line_start":227,"line_end":227,"column_start":12,"column_end":16},"name":"keys","qualname":"<IndexMap<K, V, S>>::keys","value":"pub fn keys(&Self) -> Keys<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the keys of the map, in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over the keys of the map, in their order","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":25749,"byte_end":25812,"line_start":226,"line_end":226,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":645},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":26013,"byte_end":26019,"line_start":234,"line_end":234,"column_start":12,"column_end":18},"name":"values","qualname":"<IndexMap<K, V, S>>::values","value":"pub fn values(&Self) -> Values<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values of the map, in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over the values of the map, in their order","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":25936,"byte_end":26001,"line_start":233,"line_end":233,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":26242,"byte_end":26252,"line_start":242,"line_end":242,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<IndexMap<K, V, S>>::values_mut","value":"pub fn values_mut(&mut Self) -> ValuesMut<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over mutable references to the the values of the map,\n in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over mutable references to the the values of the map,","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":26131,"byte_end":26207,"line_start":240,"line_end":240,"column_start":5,"column_end":81}},{"value":"/ in their order","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":26212,"byte_end":26230,"line_start":241,"line_end":241,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":26510,"byte_end":26515,"line_start":251,"line_end":251,"column_start":12,"column_end":17},"name":"clear","qualname":"<IndexMap<K, V, S>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove all key-value pairs in the map, while preserving its capacity.","sig":null,"attributes":[{"value":"/ Remove all key-value pairs in the map, while preserving its capacity.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":26382,"byte_end":26455,"line_start":248,"line_end":248,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":26460,"byte_end":26463,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":26468,"byte_end":26498,"line_start":250,"line_end":250,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":26743,"byte_end":26751,"line_start":258,"line_end":258,"column_start":12,"column_end":20},"name":"truncate","qualname":"<IndexMap<K, V, S>>::truncate","value":"pub fn truncate(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Shortens the map, keeping the first `len` elements and dropping the rest.","sig":null,"attributes":[{"value":"/ Shortens the map, keeping the first `len` elements and dropping the rest.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":26567,"byte_end":26644,"line_start":255,"line_end":255,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":26649,"byte_end":26652,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ If `len` is greater than the map's current length, this has no effect.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":26657,"byte_end":26731,"line_start":257,"line_end":257,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":27503,"byte_end":27508,"line_start":275,"line_end":275,"column_start":12,"column_end":17},"name":"drain","qualname":"<IndexMap<K, V, S>>::drain","value":"pub fn drain<R>(&mut Self, R) -> Drain<, K, V> where R: RangeBounds<usize>","parent":null,"children":[],"decl_id":null,"docs":" Clears the `IndexMap` in the given index range, returning those\n key-value pairs as a drain iterator.","sig":null,"attributes":[{"value":"/ Clears the `IndexMap` in the given index range, returning those","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":26821,"byte_end":26888,"line_start":262,"line_end":262,"column_start":5,"column_end":72}},{"value":"/ key-value pairs as a drain iterator.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":26893,"byte_end":26933,"line_start":263,"line_end":263,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":26938,"byte_end":26941,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ The range may be any type that implements `RangeBounds<usize>`,","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":26946,"byte_end":27013,"line_start":265,"line_end":265,"column_start":5,"column_end":72}},{"value":"/ including all of the `std::ops::Range*` types, or even a tuple pair of","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":27018,"byte_end":27092,"line_start":266,"line_end":266,"column_start":5,"column_end":79}},{"value":"/ `Bound` start and end values. To drain the map entirely, use `RangeFull`","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":27097,"byte_end":27173,"line_start":267,"line_end":267,"column_start":5,"column_end":81}},{"value":"/ like `map.drain(..)`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":27178,"byte_end":27203,"line_start":268,"line_end":268,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":27208,"byte_end":27211,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ This shifts down all entries following the drained range to fill the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":27216,"byte_end":27288,"line_start":270,"line_end":270,"column_start":5,"column_end":77}},{"value":"/ gap, and keeps the allocated memory for reuse.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":27293,"byte_end":27343,"line_start":271,"line_end":271,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":27348,"byte_end":27351,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if the starting point is greater than the end point or if","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":27356,"byte_end":27430,"line_start":273,"line_end":273,"column_start":5,"column_end":79}},{"value":"/ the end point is greater than the length of the map.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":27435,"byte_end":27491,"line_start":274,"line_end":274,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":28018,"byte_end":28027,"line_start":291,"line_end":291,"column_start":12,"column_end":21},"name":"split_off","qualname":"<IndexMap<K, V, S>>::split_off","value":"pub fn split_off(&mut Self, usize) -> Self where S: Clone","parent":null,"children":[],"decl_id":null,"docs":" Splits the collection into two at the given index.","sig":null,"attributes":[{"value":"/ Splits the collection into two at the given index.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":27678,"byte_end":27732,"line_start":284,"line_end":284,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":27737,"byte_end":27740,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ Returns a newly allocated map containing the elements in the range","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":27745,"byte_end":27815,"line_start":286,"line_end":286,"column_start":5,"column_end":75}},{"value":"/ `[at, len)`. After the call, the original map will be left containing","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":27820,"byte_end":27893,"line_start":287,"line_end":287,"column_start":5,"column_end":78}},{"value":"/ the elements `[0, at)` with its previous capacity unchanged.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":27898,"byte_end":27962,"line_start":288,"line_end":288,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":27967,"byte_end":27970,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if `at > len`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":27975,"byte_end":28006,"line_start":290,"line_end":290,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":656},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":28418,"byte_end":28425,"line_start":310,"line_end":310,"column_start":12,"column_end":19},"name":"reserve","qualname":"<IndexMap<K, V, S>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserve capacity for `additional` more key-value pairs.","sig":null,"attributes":[{"value":"/ Reserve capacity for `additional` more key-value pairs.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":28304,"byte_end":28363,"line_start":307,"line_end":307,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":28368,"byte_end":28371,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":28376,"byte_end":28406,"line_start":309,"line_end":309,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":28618,"byte_end":28631,"line_start":317,"line_end":317,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<IndexMap<K, V, S>>::shrink_to_fit","value":"pub fn shrink_to_fit(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Shrink the capacity of the map as much as possible.","sig":null,"attributes":[{"value":"/ Shrink the capacity of the map as much as possible.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":28508,"byte_end":28563,"line_start":314,"line_end":314,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":28568,"byte_end":28571,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":28576,"byte_end":28606,"line_start":316,"line_end":316,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":29530,"byte_end":29536,"line_start":340,"line_end":340,"column_start":12,"column_end":18},"name":"insert","qualname":"<IndexMap<K, V, S>>::insert","value":"pub fn insert(&mut Self, K, V) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Insert a key-value pair in the map.","sig":null,"attributes":[{"value":"/ Insert a key-value pair in the map.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":28878,"byte_end":28917,"line_start":327,"line_end":327,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":28922,"byte_end":28925,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ If an equivalent key already exists in the map: the key remains and","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":28930,"byte_end":29001,"line_start":329,"line_end":329,"column_start":5,"column_end":76}},{"value":"/ retains in its place in the order, its corresponding value is updated","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":29006,"byte_end":29079,"line_start":330,"line_end":330,"column_start":5,"column_end":78}},{"value":"/ with `value` and the older value is returned inside `Some(_)`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":29084,"byte_end":29150,"line_start":331,"line_end":331,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":29155,"byte_end":29158,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ If no equivalent key existed in the map: the new key-value pair is","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":29163,"byte_end":29233,"line_start":333,"line_end":333,"column_start":5,"column_end":75}},{"value":"/ inserted, last in order, and `None` is returned.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":29238,"byte_end":29290,"line_start":334,"line_end":334,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":29295,"byte_end":29298,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":29303,"byte_end":29353,"line_start":336,"line_end":336,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":29358,"byte_end":29361,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ See also [`entry`](#method.entry) if you you want to insert *or* modify","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":29366,"byte_end":29441,"line_start":338,"line_end":338,"column_start":5,"column_end":80}},{"value":"/ or if you need to get the index of the corresponding key-value pair.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":29446,"byte_end":29518,"line_start":339,"line_end":339,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":661},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":30322,"byte_end":30333,"line_start":357,"line_end":357,"column_start":12,"column_end":23},"name":"insert_full","qualname":"<IndexMap<K, V, S>>::insert_full","value":"pub fn insert_full(&mut Self, K, V) -> (usize, Option<V>)","parent":null,"children":[],"decl_id":null,"docs":" Insert a key-value pair in the map, and get their index.","sig":null,"attributes":[{"value":"/ Insert a key-value pair in the map, and get their index.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":29631,"byte_end":29691,"line_start":344,"line_end":344,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":29696,"byte_end":29699,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ If an equivalent key already exists in the map: the key remains and","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":29704,"byte_end":29775,"line_start":346,"line_end":346,"column_start":5,"column_end":76}},{"value":"/ retains in its place in the order, its corresponding value is updated","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":29780,"byte_end":29853,"line_start":347,"line_end":347,"column_start":5,"column_end":78}},{"value":"/ with `value` and the older value is returned inside `(index, Some(_))`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":29858,"byte_end":29933,"line_start":348,"line_end":348,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":29938,"byte_end":29941,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ If no equivalent key existed in the map: the new key-value pair is","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":29946,"byte_end":30016,"line_start":350,"line_end":350,"column_start":5,"column_end":75}},{"value":"/ inserted, last in order, and `(index, None)` is returned.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":30021,"byte_end":30082,"line_start":351,"line_end":351,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":30087,"byte_end":30090,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":30095,"byte_end":30145,"line_start":353,"line_end":353,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":30150,"byte_end":30153,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ See also [`entry`](#method.entry) if you you want to insert *or* modify","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":30158,"byte_end":30233,"line_start":355,"line_end":355,"column_start":5,"column_end":80}},{"value":"/ or if you need to get the index of the corresponding key-value pair.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":30238,"byte_end":30310,"line_start":356,"line_end":356,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":30665,"byte_end":30670,"line_start":366,"line_end":366,"column_start":12,"column_end":17},"name":"entry","qualname":"<IndexMap<K, V, S>>::entry","value":"pub fn entry(&mut Self, K) -> Entry<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Get the given key’s corresponding entry in the map for insertion and/or\n in-place manipulation.","sig":null,"attributes":[{"value":"/ Get the given key’s corresponding entry in the map for insertion and/or","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":30482,"byte_end":30559,"line_start":362,"line_end":362,"column_start":5,"column_end":80}},{"value":"/ in-place manipulation.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":30564,"byte_end":30590,"line_start":363,"line_end":363,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":30595,"byte_end":30598,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":30603,"byte_end":30653,"line_start":365,"line_end":365,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":663},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":30920,"byte_end":30932,"line_start":374,"line_end":374,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<IndexMap<K, V, S>>::contains_key","value":"pub fn contains_key<Q: ?Sized>(&Self, &Q) -> bool where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if an equivalent to `key` exists in the map.","sig":null,"attributes":[{"value":"/ Return `true` if an equivalent to `key` exists in the map.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":30793,"byte_end":30855,"line_start":371,"line_end":371,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":30860,"byte_end":30863,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":30868,"byte_end":30908,"line_start":373,"line_end":373,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":665},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":31226,"byte_end":31229,"line_start":385,"line_end":385,"column_start":12,"column_end":15},"name":"get","qualname":"<IndexMap<K, V, S>>::get","value":"pub fn get<Q: ?Sized>(&Self, &Q) -> Option<&V> where Q: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the value stored for `key`, if it is present,\n else `None`.","sig":null,"attributes":[{"value":"/ Return a reference to the value stored for `key`, if it is present,","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":31069,"byte_end":31140,"line_start":381,"line_end":381,"column_start":5,"column_end":76}},{"value":"/ else `None`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":31145,"byte_end":31161,"line_start":382,"line_end":382,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":31166,"byte_end":31169,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":31174,"byte_end":31214,"line_start":384,"line_end":384,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":31668,"byte_end":31681,"line_start":401,"line_end":401,"column_start":12,"column_end":25},"name":"get_key_value","qualname":"<IndexMap<K, V, S>>::get_key_value","value":"pub fn get_key_value<Q: ?Sized>(&Self, &Q) -> Option<(&K, &V)> where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Return references to the key-value pair stored for `key`,\n if it is present, else `None`.","sig":null,"attributes":[{"value":"/ Return references to the key-value pair stored for `key`,","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":31503,"byte_end":31564,"line_start":397,"line_end":397,"column_start":5,"column_end":66}},{"value":"/ if it is present, else `None`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":31569,"byte_end":31603,"line_start":398,"line_end":398,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":31608,"byte_end":31611,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":31616,"byte_end":31656,"line_start":400,"line_end":400,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":669},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":32023,"byte_end":32031,"line_start":414,"line_end":414,"column_start":12,"column_end":20},"name":"get_full","qualname":"<IndexMap<K, V, S>>::get_full","value":"pub fn get_full<Q: ?Sized>(&Self, &Q) -> Option<(usize, &K, &V)> where\nQ: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Return item index, key and value\n","sig":null,"attributes":[{"value":"/ Return item index, key and value","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":31975,"byte_end":32011,"line_start":413,"line_end":413,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":671},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":32393,"byte_end":32405,"line_start":427,"line_end":427,"column_start":12,"column_end":24},"name":"get_index_of","qualname":"<IndexMap<K, V, S>>::get_index_of","value":"pub fn get_index_of<Q: ?Sized>(&Self, &Q) -> Option<usize> where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Return item index, if it exists in the map\n","sig":null,"attributes":[{"value":"/ Return item index, if it exists in the map","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":32335,"byte_end":32381,"line_start":426,"line_end":426,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":32675,"byte_end":32682,"line_start":439,"line_end":439,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<IndexMap<K, V, S>>::get_mut","value":"pub fn get_mut<Q: ?Sized>(&mut Self, &Q) -> Option<&mut V> where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":32983,"byte_end":32995,"line_start":451,"line_end":451,"column_start":12,"column_end":24},"name":"get_full_mut","qualname":"<IndexMap<K, V, S>>::get_full_mut","value":"pub fn get_full_mut<Q: ?Sized>(&mut Self, &Q) -> Option<(usize, &K, &mut V)>\nwhere Q: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":34027,"byte_end":34033,"line_start":486,"line_end":486,"column_start":12,"column_end":18},"name":"remove","qualname":"<IndexMap<K, V, S>>::remove","value":"pub fn remove<Q: ?Sized>(&mut Self, &Q) -> Option<V> where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return\n its value.","sig":null,"attributes":[{"value":"/ Remove the key-value pair equivalent to `key` and return","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":33706,"byte_end":33766,"line_start":478,"line_end":478,"column_start":5,"column_end":65}},{"value":"/ its value.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":33771,"byte_end":33785,"line_start":479,"line_end":479,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":33790,"byte_end":33793,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** This is equivalent to `.swap_remove(key)`, if you need to","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":33798,"byte_end":33869,"line_start":481,"line_end":481,"column_start":5,"column_end":76}},{"value":"/ preserve the order of the keys in the map, use `.shift_remove(key)`","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":33874,"byte_end":33945,"line_start":482,"line_end":482,"column_start":5,"column_end":76}},{"value":"/ instead.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":33950,"byte_end":33962,"line_start":483,"line_end":483,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":33967,"byte_end":33970,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":33975,"byte_end":34015,"line_start":485,"line_end":485,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":681},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":34483,"byte_end":34495,"line_start":500,"line_end":500,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<IndexMap<K, V, S>>::remove_entry","value":"pub fn remove_entry<Q: ?Sized>(&mut Self, &Q) -> Option<(K, V)> where\nQ: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the key-value pair equivalent to `key`.","sig":null,"attributes":[{"value":"/ Remove and return the key-value pair equivalent to `key`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":34168,"byte_end":34229,"line_start":493,"line_end":493,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":34234,"byte_end":34237,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** This is equivalent to `.swap_remove_entry(key)`, if you need to","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":34242,"byte_end":34319,"line_start":495,"line_end":495,"column_start":5,"column_end":82}},{"value":"/ preserve the order of the keys in the map, use `.shift_remove_entry(key)`","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":34324,"byte_end":34401,"line_start":496,"line_end":496,"column_start":5,"column_end":82}},{"value":"/ instead.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":34406,"byte_end":34418,"line_start":497,"line_end":497,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":34423,"byte_end":34426,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":34431,"byte_end":34471,"line_start":499,"line_end":499,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":35051,"byte_end":35062,"line_start":517,"line_end":517,"column_start":12,"column_end":23},"name":"swap_remove","qualname":"<IndexMap<K, V, S>>::swap_remove","value":"pub fn swap_remove<Q: ?Sized>(&mut Self, &Q) -> Option<V> where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return\n its value.","sig":null,"attributes":[{"value":"/ Remove the key-value pair equivalent to `key` and return","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":34641,"byte_end":34701,"line_start":507,"line_end":507,"column_start":5,"column_end":65}},{"value":"/ its value.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":34706,"byte_end":34720,"line_start":508,"line_end":508,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":34725,"byte_end":34728,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":34733,"byte_end":34805,"line_start":510,"line_end":510,"column_start":5,"column_end":77}},{"value":"/ last element of the map and popping it off. **This perturbs","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":34810,"byte_end":34873,"line_start":511,"line_end":511,"column_start":5,"column_end":68}},{"value":"/ the postion of what used to be the last element!**","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":34878,"byte_end":34932,"line_start":512,"line_end":512,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":34937,"byte_end":34940,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `key` is not in map.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":34945,"byte_end":34986,"line_start":514,"line_end":514,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":34991,"byte_end":34994,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":34999,"byte_end":35039,"line_start":516,"line_end":516,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":35605,"byte_end":35622,"line_start":533,"line_end":533,"column_start":12,"column_end":29},"name":"swap_remove_entry","qualname":"<IndexMap<K, V, S>>::swap_remove_entry","value":"pub fn swap_remove_entry<Q: ?Sized>(&mut Self, &Q) -> Option<(K, V)> where\nQ: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the key-value pair equivalent to `key`.","sig":null,"attributes":[{"value":"/ Remove and return the key-value pair equivalent to `key`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":35213,"byte_end":35274,"line_start":524,"line_end":524,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":35279,"byte_end":35282,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":35287,"byte_end":35359,"line_start":526,"line_end":526,"column_start":5,"column_end":77}},{"value":"/ last element of the map and popping it off. **This perturbs","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":35364,"byte_end":35427,"line_start":527,"line_end":527,"column_start":5,"column_end":68}},{"value":"/ the postion of what used to be the last element!**","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":35432,"byte_end":35486,"line_start":528,"line_end":528,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":35491,"byte_end":35494,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `key` is not in map.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":35499,"byte_end":35540,"line_start":530,"line_end":530,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":35545,"byte_end":35548,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":35553,"byte_end":35593,"line_start":532,"line_end":532,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":36292,"byte_end":36308,"line_start":553,"line_end":553,"column_start":12,"column_end":28},"name":"swap_remove_full","qualname":"<IndexMap<K, V, S>>::swap_remove_full","value":"pub fn swap_remove_full<Q: ?Sized>(&mut Self, &Q) -> Option<(usize, K, V)>\nwhere Q: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return it and\n the index it had.","sig":null,"attributes":[{"value":"/ Remove the key-value pair equivalent to `key` and return it and","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":35868,"byte_end":35935,"line_start":543,"line_end":543,"column_start":5,"column_end":72}},{"value":"/ the index it had.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":35940,"byte_end":35961,"line_start":544,"line_end":544,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":35966,"byte_end":35969,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":35974,"byte_end":36046,"line_start":546,"line_end":546,"column_start":5,"column_end":77}},{"value":"/ last element of the map and popping it off. **This perturbs","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":36051,"byte_end":36114,"line_start":547,"line_end":547,"column_start":5,"column_end":68}},{"value":"/ the postion of what used to be the last element!**","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":36119,"byte_end":36173,"line_start":548,"line_end":548,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":36178,"byte_end":36181,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `key` is not in map.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":36186,"byte_end":36227,"line_start":550,"line_end":550,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":36232,"byte_end":36235,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":36240,"byte_end":36280,"line_start":552,"line_end":552,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":36975,"byte_end":36987,"line_start":574,"line_end":574,"column_start":12,"column_end":24},"name":"shift_remove","qualname":"<IndexMap<K, V, S>>::shift_remove","value":"pub fn shift_remove<Q: ?Sized>(&mut Self, &Q) -> Option<V> where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return\n its value.","sig":null,"attributes":[{"value":"/ Remove the key-value pair equivalent to `key` and return","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":36570,"byte_end":36630,"line_start":564,"line_end":564,"column_start":5,"column_end":65}},{"value":"/ its value.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":36635,"byte_end":36649,"line_start":565,"line_end":565,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":36654,"byte_end":36657,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the pair is removed by shifting all of the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":36662,"byte_end":36728,"line_start":567,"line_end":567,"column_start":5,"column_end":71}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":36733,"byte_end":36794,"line_start":568,"line_end":568,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":36799,"byte_end":36856,"line_start":569,"line_end":569,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":36861,"byte_end":36864,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `key` is not in map.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":36869,"byte_end":36910,"line_start":571,"line_end":571,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":36915,"byte_end":36918,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":36923,"byte_end":36963,"line_start":573,"line_end":573,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":37526,"byte_end":37544,"line_start":590,"line_end":590,"column_start":12,"column_end":30},"name":"shift_remove_entry","qualname":"<IndexMap<K, V, S>>::shift_remove_entry","value":"pub fn shift_remove_entry<Q: ?Sized>(&mut Self, &Q) -> Option<(K, V)> where\nQ: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the key-value pair equivalent to `key`.","sig":null,"attributes":[{"value":"/ Remove and return the key-value pair equivalent to `key`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":37139,"byte_end":37200,"line_start":581,"line_end":581,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":37205,"byte_end":37208,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the pair is removed by shifting all of the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":37213,"byte_end":37279,"line_start":583,"line_end":583,"column_start":5,"column_end":71}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":37284,"byte_end":37345,"line_start":584,"line_end":584,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":37350,"byte_end":37407,"line_start":585,"line_end":585,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":37412,"byte_end":37415,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `key` is not in map.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":37420,"byte_end":37461,"line_start":587,"line_end":587,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":37466,"byte_end":37469,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":37474,"byte_end":37514,"line_start":589,"line_end":589,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":38210,"byte_end":38227,"line_start":610,"line_end":610,"column_start":12,"column_end":29},"name":"shift_remove_full","qualname":"<IndexMap<K, V, S>>::shift_remove_full","value":"pub fn shift_remove_full<Q: ?Sized>(&mut Self, &Q) -> Option<(usize, K, V)>\nwhere Q: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return it and\n the index it had.","sig":null,"attributes":[{"value":"/ Remove the key-value pair equivalent to `key` and return it and","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":37791,"byte_end":37858,"line_start":600,"line_end":600,"column_start":5,"column_end":72}},{"value":"/ the index it had.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":37863,"byte_end":37884,"line_start":601,"line_end":601,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":37889,"byte_end":37892,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the pair is removed by shifting all of the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":37897,"byte_end":37963,"line_start":603,"line_end":603,"column_start":5,"column_end":71}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":37968,"byte_end":38029,"line_start":604,"line_end":604,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":38034,"byte_end":38091,"line_start":605,"line_end":605,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":38096,"byte_end":38099,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `key` is not in map.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":38104,"byte_end":38145,"line_start":607,"line_end":607,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":38150,"byte_end":38153,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":38158,"byte_end":38198,"line_start":609,"line_end":609,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":38589,"byte_end":38592,"line_start":624,"line_end":624,"column_start":12,"column_end":15},"name":"pop","qualname":"<IndexMap<K, V, S>>::pop","value":"pub fn pop(&mut Self) -> Option<(K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Remove the last key-value pair","sig":null,"attributes":[{"value":"/ Remove the last key-value pair","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":38490,"byte_end":38524,"line_start":621,"line_end":621,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":38529,"byte_end":38532,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":38537,"byte_end":38577,"line_start":623,"line_end":623,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":696},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":38935,"byte_end":38941,"line_start":635,"line_end":635,"column_start":12,"column_end":18},"name":"retain","qualname":"<IndexMap<K, V, S>>::retain","value":"pub fn retain<F>(&mut Self, F) where F: FnMut(&K, &mut V) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Scan through each key-value pair in the map and keep those where the\n closure `keep` returns `true`.","sig":null,"attributes":[{"value":"/ Scan through each key-value pair in the map and keep those where the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":38659,"byte_end":38731,"line_start":628,"line_end":628,"column_start":5,"column_end":77}},{"value":"/ closure `keep` returns `true`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":38736,"byte_end":38770,"line_start":629,"line_end":629,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":38775,"byte_end":38778,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ The elements are visited in order, and remaining elements keep their","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":38783,"byte_end":38855,"line_start":631,"line_end":631,"column_start":5,"column_end":77}},{"value":"/ order.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":38860,"byte_end":38870,"line_start":632,"line_end":632,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":38875,"byte_end":38878,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":38883,"byte_end":38923,"line_start":634,"line_end":634,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":701},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":39379,"byte_end":39388,"line_start":652,"line_end":652,"column_start":12,"column_end":21},"name":"sort_keys","qualname":"<IndexMap<K, V, S>>::sort_keys","value":"pub fn sort_keys(&mut Self) where K: Ord","parent":null,"children":[],"decl_id":null,"docs":" Sort the map’s key-value pairs by the default ordering of the keys.","sig":null,"attributes":[{"value":"/ Sort the map’s key-value pairs by the default ordering of the keys.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":39251,"byte_end":39324,"line_start":649,"line_end":649,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":39329,"byte_end":39332,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ See `sort_by` for details.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":39337,"byte_end":39367,"line_start":651,"line_end":651,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":39974,"byte_end":39981,"line_start":669,"line_end":669,"column_start":12,"column_end":19},"name":"sort_by","qualname":"<IndexMap<K, V, S>>::sort_by","value":"pub fn sort_by<F>(&mut Self, F) where F: FnMut(&K, &V, &K, &V) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Sort the map’s key-value pairs in place using the comparison\n function `compare`.","sig":null,"attributes":[{"value":"/ Sort the map’s key-value pairs in place using the comparison","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":39555,"byte_end":39621,"line_start":661,"line_end":661,"column_start":5,"column_end":69}},{"value":"/ function `compare`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":39626,"byte_end":39649,"line_start":662,"line_end":662,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":39654,"byte_end":39657,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ The comparison function receives two key and value pairs to compare (you","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":39662,"byte_end":39738,"line_start":664,"line_end":664,"column_start":5,"column_end":81}},{"value":"/ can sort by keys or values or their combination as needed).","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":39743,"byte_end":39806,"line_start":665,"line_end":665,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":39811,"byte_end":39814,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n log n + c)** time and **O(n)** space where *n* is","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":39819,"byte_end":39890,"line_start":667,"line_end":667,"column_start":5,"column_end":76}},{"value":"/ the length of the map and *c* the capacity. The sort is stable.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":39895,"byte_end":39962,"line_start":668,"line_end":668,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":40384,"byte_end":40393,"line_start":682,"line_end":682,"column_start":12,"column_end":21},"name":"sorted_by","qualname":"<IndexMap<K, V, S>>::sorted_by","value":"pub fn sorted_by<F>(Self, F) -> IntoIter<K, V> where F: FnMut(&K, &V, &K, &V)\n-> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Sort the key-value pairs of the map and return a by value iterator of\n the key-value pairs with the result.","sig":null,"attributes":[{"value":"/ Sort the key-value pairs of the map and return a by value iterator of","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":40218,"byte_end":40291,"line_start":678,"line_end":678,"column_start":5,"column_end":78}},{"value":"/ the key-value pairs with the result.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":40296,"byte_end":40336,"line_start":679,"line_end":679,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":40341,"byte_end":40344,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ The sort is stable.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":40349,"byte_end":40372,"line_start":681,"line_end":681,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":40836,"byte_end":40843,"line_start":696,"line_end":696,"column_start":12,"column_end":19},"name":"reverse","qualname":"<IndexMap<K, V, S>>::reverse","value":"pub fn reverse(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Reverses the order of the map’s key-value pairs in place.","sig":null,"attributes":[{"value":"/ Reverses the order of the map’s key-value pairs in place.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":40699,"byte_end":40762,"line_start":693,"line_end":693,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":40767,"byte_end":40770,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time and **O(1)** space.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":40775,"byte_end":40824,"line_start":695,"line_end":695,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":41080,"byte_end":41089,"line_start":707,"line_end":707,"column_start":12,"column_end":21},"name":"get_index","qualname":"<IndexMap<K, V, S>>::get_index","value":"pub fn get_index(&Self, usize) -> Option<(&K, &V)>","parent":null,"children":[],"decl_id":null,"docs":" Get a key-value pair by index","sig":null,"attributes":[{"value":"/ Get a key-value pair by index","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":40932,"byte_end":40965,"line_start":702,"line_end":702,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":40970,"byte_end":40973,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":40978,"byte_end":41025,"line_start":704,"line_end":704,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":41030,"byte_end":41033,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":41038,"byte_end":41068,"line_start":706,"line_end":706,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":41347,"byte_end":41360,"line_start":716,"line_end":716,"column_start":12,"column_end":25},"name":"get_index_mut","qualname":"<IndexMap<K, V, S>>::get_index_mut","value":"pub fn get_index_mut(&mut Self, usize) -> Option<(&mut K, &mut V)>","parent":null,"children":[],"decl_id":null,"docs":" Get a key-value pair by index","sig":null,"attributes":[{"value":"/ Get a key-value pair by index","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":41199,"byte_end":41232,"line_start":711,"line_end":711,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":41237,"byte_end":41240,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":41245,"byte_end":41292,"line_start":713,"line_end":713,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":41297,"byte_end":41300,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":41305,"byte_end":41335,"line_start":715,"line_end":715,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":41577,"byte_end":41582,"line_start":723,"line_end":723,"column_start":12,"column_end":17},"name":"first","qualname":"<IndexMap<K, V, S>>::first","value":"pub fn first(&Self) -> Option<(&K, &V)>","parent":null,"children":[],"decl_id":null,"docs":" Get the first key-value pair","sig":null,"attributes":[{"value":"/ Get the first key-value pair","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":41490,"byte_end":41522,"line_start":720,"line_end":720,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":41527,"byte_end":41530,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":41535,"byte_end":41565,"line_start":722,"line_end":722,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":41796,"byte_end":41805,"line_start":730,"line_end":730,"column_start":12,"column_end":21},"name":"first_mut","qualname":"<IndexMap<K, V, S>>::first_mut","value":"pub fn first_mut(&mut Self) -> Option<(&K, &mut V)>","parent":null,"children":[],"decl_id":null,"docs":" Get the first key-value pair, with mutable access to the value","sig":null,"attributes":[{"value":"/ Get the first key-value pair, with mutable access to the value","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":41675,"byte_end":41741,"line_start":727,"line_end":727,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":41746,"byte_end":41749,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":41754,"byte_end":41784,"line_start":729,"line_end":729,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":42003,"byte_end":42007,"line_start":737,"line_end":737,"column_start":12,"column_end":16},"name":"last","qualname":"<IndexMap<K, V, S>>::last","value":"pub fn last(&Self) -> Option<(&K, &V)>","parent":null,"children":[],"decl_id":null,"docs":" Get the last key-value pair","sig":null,"attributes":[{"value":"/ Get the last key-value pair","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":41917,"byte_end":41948,"line_start":734,"line_end":734,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":41953,"byte_end":41956,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":41961,"byte_end":41991,"line_start":736,"line_end":736,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":721},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":42219,"byte_end":42227,"line_start":744,"line_end":744,"column_start":12,"column_end":20},"name":"last_mut","qualname":"<IndexMap<K, V, S>>::last_mut","value":"pub fn last_mut(&mut Self) -> Option<(&K, &mut V)>","parent":null,"children":[],"decl_id":null,"docs":" Get the last key-value pair, with mutable access to the value","sig":null,"attributes":[{"value":"/ Get the last key-value pair, with mutable access to the value","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":42099,"byte_end":42164,"line_start":741,"line_end":741,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":42169,"byte_end":42172,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":42177,"byte_end":42207,"line_start":743,"line_end":743,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":42713,"byte_end":42730,"line_start":757,"line_end":757,"column_start":12,"column_end":29},"name":"swap_remove_index","qualname":"<IndexMap<K, V, S>>::swap_remove_index","value":"pub fn swap_remove_index(&mut Self, usize) -> Option<(K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair by index","sig":null,"attributes":[{"value":"/ Remove the key-value pair by index","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":42338,"byte_end":42376,"line_start":748,"line_end":748,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":42381,"byte_end":42384,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":42389,"byte_end":42436,"line_start":750,"line_end":750,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":42441,"byte_end":42444,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":42449,"byte_end":42521,"line_start":752,"line_end":752,"column_start":5,"column_end":77}},{"value":"/ last element of the map and popping it off. **This perturbs","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":42526,"byte_end":42589,"line_start":753,"line_end":753,"column_start":5,"column_end":68}},{"value":"/ the postion of what used to be the last element!**","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":42594,"byte_end":42648,"line_start":754,"line_end":754,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":42653,"byte_end":42656,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":42661,"byte_end":42701,"line_start":756,"line_end":756,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":723},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":43200,"byte_end":43218,"line_start":770,"line_end":770,"column_start":12,"column_end":30},"name":"shift_remove_index","qualname":"<IndexMap<K, V, S>>::shift_remove_index","value":"pub fn shift_remove_index(&mut Self, usize) -> Option<(K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair by index","sig":null,"attributes":[{"value":"/ Remove the key-value pair by index","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":42830,"byte_end":42868,"line_start":761,"line_end":761,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":42873,"byte_end":42876,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":42881,"byte_end":42928,"line_start":763,"line_end":763,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":42933,"byte_end":42936,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the pair is removed by shifting all of the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":42941,"byte_end":43007,"line_start":765,"line_end":765,"column_start":5,"column_end":71}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":43012,"byte_end":43073,"line_start":766,"line_end":766,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":43078,"byte_end":43135,"line_start":767,"line_end":767,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":43140,"byte_end":43143,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":43148,"byte_end":43188,"line_start":769,"line_end":769,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":43450,"byte_end":43462,"line_start":777,"line_end":777,"column_start":12,"column_end":24},"name":"swap_indices","qualname":"<IndexMap<K, V, S>>::swap_indices","value":"pub fn swap_indices(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Swaps the position of two key-value pairs in the map.","sig":null,"attributes":[{"value":"/ Swaps the position of two key-value pairs in the map.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":43319,"byte_end":43376,"line_start":774,"line_end":774,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":43381,"byte_end":43384,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if `a` or `b` are out of bounds.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":43389,"byte_end":43438,"line_start":776,"line_end":776,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":725},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":43799,"byte_end":43803,"line_start":789,"line_end":789,"column_start":12,"column_end":16},"name":"Keys","qualname":"::map::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":729}],"decl_id":null,"docs":" An iterator over the keys of a `IndexMap`.","sig":null,"attributes":[{"value":"/ An iterator over the keys of a `IndexMap`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":43542,"byte_end":43588,"line_start":782,"line_end":782,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":43589,"byte_end":43592,"line_start":783,"line_end":783,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`keys`] method on [`IndexMap`]. See its","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":43593,"byte_end":43669,"line_start":784,"line_end":784,"column_start":1,"column_end":77}},{"value":"/ documentation for more.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":43670,"byte_end":43697,"line_start":785,"line_end":785,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":43698,"byte_end":43701,"line_start":786,"line_end":786,"column_start":1,"column_end":4}},{"value":"/ [`keys`]: struct.IndexMap.html#method.keys","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":43702,"byte_end":43748,"line_start":787,"line_end":787,"column_start":1,"column_end":47}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":43749,"byte_end":43787,"line_start":788,"line_end":788,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":751},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":44897,"byte_end":44903,"line_start":833,"line_end":833,"column_start":12,"column_end":18},"name":"Values","qualname":"::map::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":755}],"decl_id":null,"docs":" An iterator over the values of a `IndexMap`.","sig":null,"attributes":[{"value":"/ An iterator over the values of a `IndexMap`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":44632,"byte_end":44680,"line_start":826,"line_end":826,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":44681,"byte_end":44684,"line_start":827,"line_end":827,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`values`] method on [`IndexMap`]. See its","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":44685,"byte_end":44763,"line_start":828,"line_end":828,"column_start":1,"column_end":79}},{"value":"/ documentation for more.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":44764,"byte_end":44791,"line_start":829,"line_end":829,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":44792,"byte_end":44795,"line_start":830,"line_end":830,"column_start":1,"column_end":4}},{"value":"/ [`values`]: struct.IndexMap.html#method.values","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":44796,"byte_end":44846,"line_start":831,"line_end":831,"column_start":1,"column_end":51}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":44847,"byte_end":44885,"line_start":832,"line_end":832,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":777},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":46021,"byte_end":46030,"line_start":877,"line_end":877,"column_start":12,"column_end":21},"name":"ValuesMut","qualname":"::map::ValuesMut","value":"ValuesMut {  }","parent":null,"children":[{"krate":0,"index":781}],"decl_id":null,"docs":" A mutable iterator over the values of a `IndexMap`.","sig":null,"attributes":[{"value":"/ A mutable iterator over the values of a `IndexMap`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":45737,"byte_end":45792,"line_start":870,"line_end":870,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":45793,"byte_end":45796,"line_start":871,"line_end":871,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`values_mut`] method on [`IndexMap`]. See its","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":45797,"byte_end":45879,"line_start":872,"line_end":872,"column_start":1,"column_end":83}},{"value":"/ documentation for more.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":45880,"byte_end":45907,"line_start":873,"line_end":873,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":45908,"byte_end":45911,"line_start":874,"line_end":874,"column_start":1,"column_end":4}},{"value":"/ [`values_mut`]: struct.IndexMap.html#method.values_mut","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":45912,"byte_end":45970,"line_start":875,"line_end":875,"column_start":1,"column_end":59}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":45971,"byte_end":46009,"line_start":876,"line_end":876,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":795},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":46759,"byte_end":46763,"line_start":906,"line_end":906,"column_start":12,"column_end":16},"name":"Iter","qualname":"::map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":799}],"decl_id":null,"docs":" An iterator over the entries of a `IndexMap`.","sig":null,"attributes":[{"value":"/ An iterator over the entries of a `IndexMap`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":46499,"byte_end":46548,"line_start":899,"line_end":899,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":46549,"byte_end":46552,"line_start":900,"line_end":900,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter`] method on [`IndexMap`]. See its","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":46553,"byte_end":46629,"line_start":901,"line_end":901,"column_start":1,"column_end":77}},{"value":"/ documentation for more.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":46630,"byte_end":46657,"line_start":902,"line_end":902,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":46658,"byte_end":46661,"line_start":903,"line_end":903,"column_start":1,"column_end":4}},{"value":"/ [`iter`]: struct.IndexMap.html#method.iter","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":46662,"byte_end":46708,"line_start":904,"line_end":904,"column_start":1,"column_end":47}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":46709,"byte_end":46747,"line_start":905,"line_end":905,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":821},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":47875,"byte_end":47882,"line_start":950,"line_end":950,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":825}],"decl_id":null,"docs":" A mutable iterator over the entries of a `IndexMap`.","sig":null,"attributes":[{"value":"/ A mutable iterator over the entries of a `IndexMap`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":47596,"byte_end":47652,"line_start":943,"line_end":943,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":47653,"byte_end":47656,"line_start":944,"line_end":944,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter_mut`] method on [`IndexMap`]. See its","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":47657,"byte_end":47737,"line_start":945,"line_end":945,"column_start":1,"column_end":81}},{"value":"/ documentation for more.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":47738,"byte_end":47765,"line_start":946,"line_end":946,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":47766,"byte_end":47769,"line_start":947,"line_end":947,"column_start":1,"column_end":4}},{"value":"/ [`iter_mut`]: struct.IndexMap.html#method.iter_mut","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":47770,"byte_end":47824,"line_start":948,"line_end":948,"column_start":1,"column_end":55}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":47825,"byte_end":47863,"line_start":949,"line_end":949,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":839},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":48671,"byte_end":48679,"line_start":979,"line_end":979,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::map::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":842}],"decl_id":null,"docs":" An owning iterator over the entries of a `IndexMap`.","sig":null,"attributes":[{"value":"/ An owning iterator over the entries of a `IndexMap`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":48350,"byte_end":48406,"line_start":972,"line_end":972,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":48407,"byte_end":48410,"line_start":973,"line_end":973,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_iter`] method on [`IndexMap`]","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":48411,"byte_end":48483,"line_start":974,"line_end":974,"column_start":1,"column_end":73}},{"value":"/ (provided by the `IntoIterator` trait). See its documentation for more.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":48484,"byte_end":48559,"line_start":975,"line_end":975,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":48560,"byte_end":48563,"line_start":976,"line_end":976,"column_start":1,"column_end":4}},{"value":"/ [`into_iter`]: struct.IndexMap.html#method.into_iter","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":48564,"byte_end":48620,"line_start":977,"line_end":977,"column_start":1,"column_end":57}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":48621,"byte_end":48659,"line_start":978,"line_end":978,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":859},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":49652,"byte_end":49657,"line_start":1015,"line_end":1015,"column_start":12,"column_end":17},"name":"Drain","qualname":"::map::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":863}],"decl_id":null,"docs":" A draining iterator over the entries of a `IndexMap`.","sig":null,"attributes":[{"value":"/ A draining iterator over the entries of a `IndexMap`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":49381,"byte_end":49438,"line_start":1008,"line_end":1008,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":49439,"byte_end":49442,"line_start":1009,"line_end":1009,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`drain`] method on [`IndexMap`]. See its","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":49443,"byte_end":49520,"line_start":1010,"line_end":1010,"column_start":1,"column_end":78}},{"value":"/ documentation for more.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":49521,"byte_end":49548,"line_start":1011,"line_end":1011,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":49549,"byte_end":49552,"line_start":1012,"line_end":1012,"column_start":1,"column_end":4}},{"value":"/ [`drain`]: struct.IndexMap.html#method.drain","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":49553,"byte_end":49601,"line_start":1013,"line_end":1013,"column_start":1,"column_end":49}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":49602,"byte_end":49640,"line_start":1014,"line_end":1014,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":957},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"set","qualname":"::set","value":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","parent":null,"children":[{"krate":0,"index":958},{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":965},{"krate":0,"index":968},{"krate":0,"index":971},{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":981},{"krate":0,"index":982},{"krate":0,"index":985},{"krate":0,"index":988},{"krate":0,"index":989},{"krate":0,"index":992},{"krate":0,"index":995},{"krate":0,"index":998},{"krate":0,"index":1001},{"krate":0,"index":1004},{"krate":0,"index":1007},{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1014},{"krate":0,"index":1017},{"krate":0,"index":1020},{"krate":0,"index":1022},{"krate":0,"index":1026},{"krate":0,"index":1031},{"krate":0,"index":1040},{"krate":0,"index":1044},{"krate":0,"index":1048},{"krate":0,"index":1063},{"krate":0,"index":1128},{"krate":0,"index":1139},{"krate":0,"index":1144},{"krate":0,"index":1147},{"krate":0,"index":1150},{"krate":0,"index":1153},{"krate":0,"index":1156},{"krate":0,"index":1159},{"krate":0,"index":1163},{"krate":0,"index":1167},{"krate":0,"index":1170},{"krate":0,"index":1173},{"krate":0,"index":1176},{"krate":0,"index":1179},{"krate":0,"index":1183},{"krate":0,"index":1186},{"krate":0,"index":1188},{"krate":0,"index":1195},{"krate":0,"index":1201},{"krate":0,"index":1207},{"krate":0,"index":1213},{"krate":0,"index":1219},{"krate":0,"index":1223},{"krate":0,"index":1228},{"krate":0,"index":1231},{"krate":0,"index":1243},{"krate":0,"index":1249},{"krate":0,"index":1256},{"krate":0,"index":1260},{"krate":0,"index":1264},{"krate":0,"index":1268},{"krate":0,"index":1274},{"krate":0,"index":1281},{"krate":0,"index":1285},{"krate":0,"index":1289},{"krate":0,"index":1293},{"krate":0,"index":1299},{"krate":0,"index":1310},{"krate":0,"index":1315},{"krate":0,"index":1320},{"krate":0,"index":1325},{"krate":0,"index":1330},{"krate":0,"index":1340},{"krate":0,"index":1344},{"krate":0,"index":1348},{"krate":0,"index":1352},{"krate":0,"index":1358},{"krate":0,"index":1364},{"krate":0,"index":1370}],"decl_id":null,"docs":" A hash set implemented using `IndexMap`\n","sig":null,"attributes":[{"value":"/ A hash set implemented using `IndexMap`","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":94623,"byte_end":94666,"line_start":1,"line_end":1,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":1022},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":96712,"byte_end":96720,"line_start":63,"line_end":63,"column_start":12,"column_end":20},"name":"IndexSet","qualname":"::set::IndexSet","value":"IndexSet {  }","parent":null,"children":[{"krate":0,"index":1025}],"decl_id":null,"docs":" A hash set where the iteration order of the values is independent of their\n hash values.","sig":null,"attributes":[{"value":"/ A hash set where the iteration order of the values is independent of their","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":95106,"byte_end":95184,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ hash values.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":95185,"byte_end":95201,"line_start":22,"line_end":22,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":95202,"byte_end":95205,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The interface is closely compatible with the standard `HashSet`, but also","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":95206,"byte_end":95283,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ has additional features.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":95284,"byte_end":95312,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":95313,"byte_end":95316,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Order","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":95317,"byte_end":95328,"line_start":27,"line_end":27,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":95329,"byte_end":95332,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The values have a consistent order that is determined by the sequence of","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":95333,"byte_end":95409,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ insertion and removal calls on the set. The order does not depend on the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":95410,"byte_end":95486,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ values or the hash function at all. Note that insertion order and value","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":95487,"byte_end":95562,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ are not affected if a re-insertion is attempted once an element is","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":95563,"byte_end":95633,"line_start":32,"line_end":32,"column_start":1,"column_end":71}},{"value":"/ already present.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":95634,"byte_end":95654,"line_start":33,"line_end":33,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":95655,"byte_end":95658,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ All iterators traverse the set *in order*.  Set operation iterators like","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":95659,"byte_end":95735,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/ `union` produce a concatenated order, as do their matching \"bitwise\"","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":95736,"byte_end":95808,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ operators.  See their documentation for specifics.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":95809,"byte_end":95863,"line_start":37,"line_end":37,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":95864,"byte_end":95867,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ The insertion order is preserved, with **notable exceptions** like the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":95868,"byte_end":95942,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"/ `.remove()` or `.swap_remove()` methods. Methods such as `.sort_by()` of","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":95943,"byte_end":96019,"line_start":40,"line_end":40,"column_start":1,"column_end":77}},{"value":"/ course result in a new order, depending on the sorting order.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":96020,"byte_end":96085,"line_start":41,"line_end":41,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":96086,"byte_end":96089,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ # Indices","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":96090,"byte_end":96103,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":96104,"byte_end":96107,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ The values are indexed in a compact range without holes in the range","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":96108,"byte_end":96180,"line_start":45,"line_end":45,"column_start":1,"column_end":73}},{"value":"/ `0..self.len()`. For example, the method `.get_full` looks up the index for","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":96181,"byte_end":96260,"line_start":46,"line_end":46,"column_start":1,"column_end":80}},{"value":"/ a value, and the method `.get_index` looks up the value by index.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":96261,"byte_end":96330,"line_start":47,"line_end":47,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":96331,"byte_end":96334,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":96335,"byte_end":96349,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":96350,"byte_end":96353,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":96354,"byte_end":96361,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/ use indexmap::IndexSet;","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":96362,"byte_end":96389,"line_start":52,"line_end":52,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":96390,"byte_end":96393,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ // Collects which letters appear in a sentence.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":96394,"byte_end":96445,"line_start":54,"line_end":54,"column_start":1,"column_end":52}},{"value":"/ let letters: IndexSet<_> = \"a short treatise on fungi\".chars().collect();","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":96446,"byte_end":96523,"line_start":55,"line_end":55,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":96524,"byte_end":96527,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ assert!(letters.contains(&'s'));","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":96528,"byte_end":96564,"line_start":57,"line_end":57,"column_start":1,"column_end":37}},{"value":"/ assert!(letters.contains(&'t'));","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":96565,"byte_end":96601,"line_start":58,"line_end":58,"column_start":1,"column_end":37}},{"value":"/ assert!(letters.contains(&'u'));","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":96602,"byte_end":96638,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"/ assert!(!letters.contains(&'y'));","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":96639,"byte_end":96676,"line_start":60,"line_end":60,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":96677,"byte_end":96684,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"cfg(has_std)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":96685,"byte_end":96700,"line_start":62,"line_end":62,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1046},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":98142,"byte_end":98145,"line_start":130,"line_end":130,"column_start":12,"column_end":15},"name":"new","qualname":"<IndexSet<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new set. (Does not allocate.)\n","sig":null,"attributes":[{"value":"/ Create a new set. (Does not allocate.)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":98088,"byte_end":98130,"line_start":129,"line_end":129,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1047},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":98383,"byte_end":98396,"line_start":140,"line_end":140,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<IndexSet<T>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new set with capacity for `n` elements.\n (Does not allocate if `n` is zero.)","sig":null,"attributes":[{"value":"/ Create a new set with capacity for `n` elements.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":98232,"byte_end":98284,"line_start":136,"line_end":136,"column_start":5,"column_end":57}},{"value":"/ (Does not allocate if `n` is zero.)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":98289,"byte_end":98328,"line_start":137,"line_end":137,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":98333,"byte_end":98336,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":98341,"byte_end":98371,"line_start":139,"line_end":139,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1051},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":98683,"byte_end":98707,"line_start":152,"line_end":152,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<IndexSet<T, S>>::with_capacity_and_hasher","value":"pub fn with_capacity_and_hasher(usize, S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new set with capacity for `n` elements.\n (Does not allocate if `n` is zero.)","sig":null,"attributes":[{"value":"/ Create a new set with capacity for `n` elements.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":98532,"byte_end":98584,"line_start":148,"line_end":148,"column_start":5,"column_end":57}},{"value":"/ (Does not allocate if `n` is zero.)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":98589,"byte_end":98628,"line_start":149,"line_end":149,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":98633,"byte_end":98636,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":98641,"byte_end":98671,"line_start":151,"line_end":151,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1052},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":98907,"byte_end":98918,"line_start":159,"line_end":159,"column_start":12,"column_end":23},"name":"with_hasher","qualname":"<IndexSet<T, S>>::with_hasher","value":"pub fn with_hasher(S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new set with `hash_builder`\n","sig":null,"attributes":[{"value":"/ Create a new set with `hash_builder`","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":98855,"byte_end":98895,"line_start":158,"line_end":158,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1053},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":99082,"byte_end":99090,"line_start":166,"line_end":166,"column_start":12,"column_end":20},"name":"capacity","qualname":"<IndexSet<T, S>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time.\n","sig":null,"attributes":[{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":99040,"byte_end":99070,"line_start":165,"line_end":165,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1054},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":99210,"byte_end":99216,"line_start":171,"line_end":171,"column_start":12,"column_end":18},"name":"hasher","qualname":"<IndexSet<T, S>>::hasher","value":"pub fn hasher(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the set's `BuildHasher`.\n","sig":null,"attributes":[{"value":"/ Return a reference to the set's `BuildHasher`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":99148,"byte_end":99198,"line_start":170,"line_end":170,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1055},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":99369,"byte_end":99372,"line_start":178,"line_end":178,"column_start":12,"column_end":15},"name":"len","qualname":"<IndexSet<T, S>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of elements in the set.","sig":null,"attributes":[{"value":"/ Return the number of elements in the set.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":99269,"byte_end":99314,"line_start":175,"line_end":175,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":99319,"byte_end":99322,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":99327,"byte_end":99357,"line_start":177,"line_end":177,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1056},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":99529,"byte_end":99537,"line_start":185,"line_end":185,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<IndexSet<T, S>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the set contains no elements.","sig":null,"attributes":[{"value":"/ Returns true if the set contains no elements.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":99425,"byte_end":99474,"line_start":182,"line_end":182,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":99479,"byte_end":99482,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":99487,"byte_end":99517,"line_start":184,"line_end":184,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1057},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":99671,"byte_end":99675,"line_start":190,"line_end":190,"column_start":12,"column_end":16},"name":"iter","qualname":"<IndexSet<T, S>>::iter","value":"pub fn iter(&Self) -> Iter<, T>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values of the set, in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over the values of the set, in their order","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":99594,"byte_end":99659,"line_start":189,"line_end":189,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1058},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":99897,"byte_end":99902,"line_start":199,"line_end":199,"column_start":12,"column_end":17},"name":"clear","qualname":"<IndexSet<T, S>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove all elements in the set, while preserving its capacity.","sig":null,"attributes":[{"value":"/ Remove all elements in the set, while preserving its capacity.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":99776,"byte_end":99842,"line_start":196,"line_end":196,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":99847,"byte_end":99850,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":99855,"byte_end":99885,"line_start":198,"line_end":198,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1059},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":100129,"byte_end":100137,"line_start":206,"line_end":206,"column_start":12,"column_end":20},"name":"truncate","qualname":"<IndexSet<T, S>>::truncate","value":"pub fn truncate(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Shortens the set, keeping the first `len` elements and dropping the rest.","sig":null,"attributes":[{"value":"/ Shortens the set, keeping the first `len` elements and dropping the rest.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":99953,"byte_end":100030,"line_start":203,"line_end":203,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":100035,"byte_end":100038,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ If `len` is greater than the set's current length, this has no effect.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":100043,"byte_end":100117,"line_start":205,"line_end":205,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1060},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":100879,"byte_end":100884,"line_start":223,"line_end":223,"column_start":12,"column_end":17},"name":"drain","qualname":"<IndexSet<T, S>>::drain","value":"pub fn drain<R>(&mut Self, R) -> Drain<, T> where R: RangeBounds<usize>","parent":null,"children":[],"decl_id":null,"docs":" Clears the `IndexSet` in the given index range, returning those values\n as a drain iterator.","sig":null,"attributes":[{"value":"/ Clears the `IndexSet` in the given index range, returning those values","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":100206,"byte_end":100280,"line_start":210,"line_end":210,"column_start":5,"column_end":79}},{"value":"/ as a drain iterator.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":100285,"byte_end":100309,"line_start":211,"line_end":211,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":100314,"byte_end":100317,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ The range may be any type that implements `RangeBounds<usize>`,","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":100322,"byte_end":100389,"line_start":213,"line_end":213,"column_start":5,"column_end":72}},{"value":"/ including all of the `std::ops::Range*` types, or even a tuple pair of","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":100394,"byte_end":100468,"line_start":214,"line_end":214,"column_start":5,"column_end":79}},{"value":"/ `Bound` start and end values. To drain the set entirely, use `RangeFull`","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":100473,"byte_end":100549,"line_start":215,"line_end":215,"column_start":5,"column_end":81}},{"value":"/ like `set.drain(..)`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":100554,"byte_end":100579,"line_start":216,"line_end":216,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":100584,"byte_end":100587,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ This shifts down all entries following the drained range to fill the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":100592,"byte_end":100664,"line_start":218,"line_end":218,"column_start":5,"column_end":77}},{"value":"/ gap, and keeps the allocated memory for reuse.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":100669,"byte_end":100719,"line_start":219,"line_end":219,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":100724,"byte_end":100727,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if the starting point is greater than the end point or if","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":100732,"byte_end":100806,"line_start":221,"line_end":221,"column_start":5,"column_end":79}},{"value":"/ the end point is greater than the length of the set.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":100811,"byte_end":100867,"line_start":222,"line_end":222,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1062},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":101395,"byte_end":101404,"line_start":239,"line_end":239,"column_start":12,"column_end":21},"name":"split_off","qualname":"<IndexSet<T, S>>::split_off","value":"pub fn split_off(&mut Self, usize) -> Self where S: Clone","parent":null,"children":[],"decl_id":null,"docs":" Splits the collection into two at the given index.","sig":null,"attributes":[{"value":"/ Splits the collection into two at the given index.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":101055,"byte_end":101109,"line_start":232,"line_end":232,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":101114,"byte_end":101117,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ Returns a newly allocated set containing the elements in the range","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":101122,"byte_end":101192,"line_start":234,"line_end":234,"column_start":5,"column_end":75}},{"value":"/ `[at, len)`. After the call, the original set will be left containing","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":101197,"byte_end":101270,"line_start":235,"line_end":235,"column_start":5,"column_end":78}},{"value":"/ the elements `[0, at)` with its previous capacity unchanged.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":101275,"byte_end":101339,"line_start":236,"line_end":236,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":101344,"byte_end":101347,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if `at > len`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":101352,"byte_end":101383,"line_start":238,"line_end":238,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1066},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":101725,"byte_end":101732,"line_start":257,"line_end":257,"column_start":12,"column_end":19},"name":"reserve","qualname":"<IndexSet<T, S>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserve capacity for `additional` more values.","sig":null,"attributes":[{"value":"/ Reserve capacity for `additional` more values.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":101620,"byte_end":101670,"line_start":254,"line_end":254,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":101675,"byte_end":101678,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":101683,"byte_end":101713,"line_start":256,"line_end":256,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1067},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":101924,"byte_end":101937,"line_start":264,"line_end":264,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<IndexSet<T, S>>::shrink_to_fit","value":"pub fn shrink_to_fit(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Shrink the capacity of the set as much as possible.","sig":null,"attributes":[{"value":"/ Shrink the capacity of the set as much as possible.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":101814,"byte_end":101869,"line_start":261,"line_end":261,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":101874,"byte_end":101877,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":101882,"byte_end":101912,"line_start":263,"line_end":263,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1068},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":102348,"byte_end":102354,"line_start":276,"line_end":276,"column_start":12,"column_end":18},"name":"insert","qualname":"<IndexSet<T, S>>::insert","value":"pub fn insert(&mut Self, T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Insert the value into the set.","sig":null,"attributes":[{"value":"/ Insert the value into the set.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":101996,"byte_end":102030,"line_start":268,"line_end":268,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":102035,"byte_end":102038,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ If an equivalent item already exists in the set, it returns","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":102043,"byte_end":102106,"line_start":270,"line_end":270,"column_start":5,"column_end":68}},{"value":"/ `false` leaving the original value in the set and without","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":102111,"byte_end":102172,"line_start":271,"line_end":271,"column_start":5,"column_end":66}},{"value":"/ altering its insertion order. Otherwise, it inserts the new","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":102177,"byte_end":102240,"line_start":272,"line_end":272,"column_start":5,"column_end":68}},{"value":"/ item and returns `true`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":102245,"byte_end":102273,"line_start":273,"line_end":273,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":102278,"byte_end":102281,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":102286,"byte_end":102336,"line_start":275,"line_end":275,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1069},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":102892,"byte_end":102903,"line_start":289,"line_end":289,"column_start":12,"column_end":23},"name":"insert_full","qualname":"<IndexSet<T, S>>::insert_full","value":"pub fn insert_full(&mut Self, T) -> (usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Insert the value into the set, and get its index.","sig":null,"attributes":[{"value":"/ Insert the value into the set, and get its index.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":102442,"byte_end":102495,"line_start":280,"line_end":280,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":102500,"byte_end":102503,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ If an equivalent item already exists in the set, it returns","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":102508,"byte_end":102571,"line_start":282,"line_end":282,"column_start":5,"column_end":68}},{"value":"/ the index of the existing item and `false`, leaving the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":102576,"byte_end":102635,"line_start":283,"line_end":283,"column_start":5,"column_end":64}},{"value":"/ original value in the set and without altering its insertion","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":102640,"byte_end":102704,"line_start":284,"line_end":284,"column_start":5,"column_end":69}},{"value":"/ order. Otherwise, it inserts the new item and returns the index","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":102709,"byte_end":102776,"line_start":285,"line_end":285,"column_start":5,"column_end":72}},{"value":"/ of the inserted item and `true`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":102781,"byte_end":102817,"line_start":286,"line_end":286,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":102822,"byte_end":102825,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":102830,"byte_end":102880,"line_start":288,"line_end":288,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1071},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":103393,"byte_end":103403,"line_start":305,"line_end":305,"column_start":12,"column_end":22},"name":"difference","qualname":"<IndexSet<T, S>>::difference","value":"pub fn difference<'a, S2>(&'a Self, &'a IndexSet<T, S2>) -> Difference where\nS2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values that are in `self` but not `other`.","sig":null,"attributes":[{"value":"/ Return an iterator over the values that are in `self` but not `other`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":103225,"byte_end":103299,"line_start":302,"line_end":302,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":103304,"byte_end":103307,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ Values are produced in the same order that they appear in `self`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":103312,"byte_end":103381,"line_start":304,"line_end":304,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1074},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":103852,"byte_end":103872,"line_start":320,"line_end":320,"column_start":12,"column_end":32},"name":"symmetric_difference","qualname":"<IndexSet<T, S>>::symmetric_difference","value":"pub fn symmetric_difference<'a, S2>(&'a Self, &'a IndexSet<T, S2>)\n-> SymmetricDifference where S2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values that are in `self` or `other`,\n but not in both.","sig":null,"attributes":[{"value":"/ Return an iterator over the values that are in `self` or `other`,","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":103608,"byte_end":103677,"line_start":315,"line_end":315,"column_start":5,"column_end":74}},{"value":"/ but not in both.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":103682,"byte_end":103702,"line_start":316,"line_end":316,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":103707,"byte_end":103710,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ Values from `self` are produced in their original order, followed by","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":103715,"byte_end":103787,"line_start":318,"line_end":318,"column_start":5,"column_end":77}},{"value":"/ values from `other` in their original order.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":103792,"byte_end":103840,"line_start":319,"line_end":319,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1077},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":104312,"byte_end":104324,"line_start":335,"line_end":335,"column_start":12,"column_end":24},"name":"intersection","qualname":"<IndexSet<T, S>>::intersection","value":"pub fn intersection<'a, S2>(&'a Self, &'a IndexSet<T, S2>) -> Intersection\nwhere S2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values that are in both `self` and `other`.","sig":null,"attributes":[{"value":"/ Return an iterator over the values that are in both `self` and `other`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":104143,"byte_end":104218,"line_start":332,"line_end":332,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":104223,"byte_end":104226,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ Values are produced in the same order that they appear in `self`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":104231,"byte_end":104300,"line_start":334,"line_end":334,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":104766,"byte_end":104771,"line_start":349,"line_end":349,"column_start":12,"column_end":17},"name":"union","qualname":"<IndexSet<T, S>>::union","value":"pub fn union<'a, S2>(&'a Self, &'a IndexSet<T, S2>) -> Union where\nS2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over all values that are in `self` or `other`.","sig":null,"attributes":[{"value":"/ Return an iterator over all values that are in `self` or `other`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":104533,"byte_end":104602,"line_start":345,"line_end":345,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":104607,"byte_end":104610,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ Values from `self` are produced in their original order, followed by","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":104615,"byte_end":104687,"line_start":347,"line_end":347,"column_start":5,"column_end":77}},{"value":"/ values that are unique to `other` in their original order.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":104692,"byte_end":104754,"line_start":348,"line_end":348,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1083},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":105105,"byte_end":105113,"line_start":361,"line_end":361,"column_start":12,"column_end":20},"name":"contains","qualname":"<IndexSet<T, S>>::contains","value":"pub fn contains<Q: ?Sized>(&Self, &Q) -> bool where Q: Hash + Equivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if an equivalent to `value` exists in the set.","sig":null,"attributes":[{"value":"/ Return `true` if an equivalent to `value` exists in the set.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":104976,"byte_end":105040,"line_start":358,"line_end":358,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":105045,"byte_end":105048,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":105053,"byte_end":105093,"line_start":360,"line_end":360,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1085},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":105406,"byte_end":105409,"line_start":372,"line_end":372,"column_start":12,"column_end":15},"name":"get","qualname":"<IndexSet<T, S>>::get","value":"pub fn get<Q: ?Sized>(&Self, &Q) -> Option<&T> where Q: Hash + Equivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the value stored in the set, if it is present,\n else `None`.","sig":null,"attributes":[{"value":"/ Return a reference to the value stored in the set, if it is present,","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":105248,"byte_end":105320,"line_start":368,"line_end":368,"column_start":5,"column_end":77}},{"value":"/ else `None`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":105325,"byte_end":105341,"line_start":369,"line_end":369,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":105346,"byte_end":105349,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":105354,"byte_end":105394,"line_start":371,"line_end":371,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1088},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":105612,"byte_end":105620,"line_start":380,"line_end":380,"column_start":12,"column_end":20},"name":"get_full","qualname":"<IndexSet<T, S>>::get_full","value":"pub fn get_full<Q: ?Sized>(&Self, &Q) -> Option<(usize, &T)> where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Return item index and value\n","sig":null,"attributes":[{"value":"/ Return item index and value","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":105569,"byte_end":105600,"line_start":379,"line_end":379,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1091},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":105850,"byte_end":105862,"line_start":388,"line_end":388,"column_start":12,"column_end":24},"name":"get_index_of","qualname":"<IndexSet<T, S>>::get_index_of","value":"pub fn get_index_of<Q: ?Sized>(&Self, &Q) -> Option<usize> where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Return item index, if it exists in the set\n","sig":null,"attributes":[{"value":"/ Return item index, if it exists in the set","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":105792,"byte_end":105838,"line_start":387,"line_end":387,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1093},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":106205,"byte_end":106212,"line_start":399,"line_end":399,"column_start":12,"column_end":19},"name":"replace","qualname":"<IndexSet<T, S>>::replace","value":"pub fn replace(&mut Self, T) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Adds a value to the set, replacing the existing value, if any, that is\n equal to the given one. Returns the replaced value.","sig":null,"attributes":[{"value":"/ Adds a value to the set, replacing the existing value, if any, that is","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":106006,"byte_end":106080,"line_start":395,"line_end":395,"column_start":5,"column_end":79}},{"value":"/ equal to the given one. Returns the replaced value.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":106085,"byte_end":106140,"line_start":396,"line_end":396,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":106145,"byte_end":106148,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":106153,"byte_end":106193,"line_start":398,"line_end":398,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1095},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":106788,"byte_end":106794,"line_start":417,"line_end":417,"column_start":12,"column_end":18},"name":"remove","qualname":"<IndexSet<T, S>>::remove","value":"pub fn remove<Q: ?Sized>(&mut Self, &Q) -> bool where Q: Hash + Equivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value from the set, and return `true` if it was present.","sig":null,"attributes":[{"value":"/ Remove the value from the set, and return `true` if it was present.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":106485,"byte_end":106556,"line_start":411,"line_end":411,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":106561,"byte_end":106564,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** This is equivalent to `.swap_remove(value)`, if you want","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":106569,"byte_end":106639,"line_start":413,"line_end":413,"column_start":5,"column_end":75}},{"value":"/ to preserve the order of the values in the set, use `.shift_remove(value)`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":106644,"byte_end":106723,"line_start":414,"line_end":414,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":106728,"byte_end":106731,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":106736,"byte_end":106776,"line_start":416,"line_end":416,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1097},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":107339,"byte_end":107350,"line_start":433,"line_end":433,"column_start":12,"column_end":23},"name":"swap_remove","qualname":"<IndexSet<T, S>>::swap_remove","value":"pub fn swap_remove<Q: ?Sized>(&mut Self, &Q) -> bool where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value from the set, and return `true` if it was present.","sig":null,"attributes":[{"value":"/ Remove the value from the set, and return `true` if it was present.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":106928,"byte_end":106999,"line_start":424,"line_end":424,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":107004,"byte_end":107007,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the value is removed by swapping it with the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":107012,"byte_end":107085,"line_start":426,"line_end":426,"column_start":5,"column_end":78}},{"value":"/ last element of the set and popping it off. **This perturbs","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":107090,"byte_end":107153,"line_start":427,"line_end":427,"column_start":5,"column_end":68}},{"value":"/ the postion of what used to be the last element!**","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":107158,"byte_end":107212,"line_start":428,"line_end":428,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":107217,"byte_end":107220,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ Return `false` if `value` was not in the set.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":107225,"byte_end":107274,"line_start":430,"line_end":430,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":107279,"byte_end":107282,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":107287,"byte_end":107327,"line_start":432,"line_end":432,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1099},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":107904,"byte_end":107916,"line_start":449,"line_end":449,"column_start":12,"column_end":24},"name":"shift_remove","qualname":"<IndexSet<T, S>>::shift_remove","value":"pub fn shift_remove<Q: ?Sized>(&mut Self, &Q) -> bool where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value from the set, and return `true` if it was present.","sig":null,"attributes":[{"value":"/ Remove the value from the set, and return `true` if it was present.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":107498,"byte_end":107569,"line_start":440,"line_end":440,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":107574,"byte_end":107577,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the value is removed by shifting all of the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":107582,"byte_end":107649,"line_start":442,"line_end":442,"column_start":5,"column_end":72}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":107654,"byte_end":107715,"line_start":443,"line_end":443,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":107720,"byte_end":107777,"line_start":444,"line_end":444,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":107782,"byte_end":107785,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ Return `false` if `value` was not in the set.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":107790,"byte_end":107839,"line_start":446,"line_end":446,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":107844,"byte_end":107847,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":107852,"byte_end":107892,"line_start":448,"line_end":448,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1101},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":108402,"byte_end":108406,"line_start":464,"line_end":464,"column_start":12,"column_end":16},"name":"take","qualname":"<IndexSet<T, S>>::take","value":"pub fn take<Q: ?Sized>(&mut Self, &Q) -> Option<T> where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the value in the set, if any, that is equal to the\n given one.","sig":null,"attributes":[{"value":"/ Removes and returns the value in the set, if any, that is equal to the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":108065,"byte_end":108139,"line_start":456,"line_end":456,"column_start":5,"column_end":79}},{"value":"/ given one.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":108144,"byte_end":108158,"line_start":457,"line_end":457,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":108163,"byte_end":108166,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** This is equivalent to `.swap_take(value)`, if you need to","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":108171,"byte_end":108242,"line_start":459,"line_end":459,"column_start":5,"column_end":76}},{"value":"/ preserve the order of the values in the set, use `.shift_take(value)`","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":108247,"byte_end":108320,"line_start":460,"line_end":460,"column_start":5,"column_end":78}},{"value":"/ instead.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":108325,"byte_end":108337,"line_start":461,"line_end":461,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":108342,"byte_end":108345,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":108350,"byte_end":108390,"line_start":463,"line_end":463,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1103},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":108975,"byte_end":108984,"line_start":481,"line_end":481,"column_start":12,"column_end":21},"name":"swap_take","qualname":"<IndexSet<T, S>>::swap_take","value":"pub fn swap_take<Q: ?Sized>(&mut Self, &Q) -> Option<T> where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the value in the set, if any, that is equal to the\n given one.","sig":null,"attributes":[{"value":"/ Removes and returns the value in the set, if any, that is equal to the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":108543,"byte_end":108617,"line_start":471,"line_end":471,"column_start":5,"column_end":79}},{"value":"/ given one.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":108622,"byte_end":108636,"line_start":472,"line_end":472,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":108641,"byte_end":108644,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the value is removed by swapping it with the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":108649,"byte_end":108722,"line_start":474,"line_end":474,"column_start":5,"column_end":78}},{"value":"/ last element of the set and popping it off. **This perturbs","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":108727,"byte_end":108790,"line_start":475,"line_end":475,"column_start":5,"column_end":68}},{"value":"/ the postion of what used to be the last element!**","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":108795,"byte_end":108849,"line_start":476,"line_end":476,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":108854,"byte_end":108857,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `value` was not in the set.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":108862,"byte_end":108910,"line_start":478,"line_end":478,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":108915,"byte_end":108918,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":108923,"byte_end":108963,"line_start":480,"line_end":480,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1106},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":109577,"byte_end":109587,"line_start":498,"line_end":498,"column_start":12,"column_end":22},"name":"shift_take","qualname":"<IndexSet<T, S>>::shift_take","value":"pub fn shift_take<Q: ?Sized>(&mut Self, &Q) -> Option<T> where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the value in the set, if any, that is equal to the\n given one.","sig":null,"attributes":[{"value":"/ Removes and returns the value in the set, if any, that is equal to the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":109150,"byte_end":109224,"line_start":488,"line_end":488,"column_start":5,"column_end":79}},{"value":"/ given one.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":109229,"byte_end":109243,"line_start":489,"line_end":489,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":109248,"byte_end":109251,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the value is removed by shifting all of the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":109256,"byte_end":109323,"line_start":491,"line_end":491,"column_start":5,"column_end":72}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":109328,"byte_end":109389,"line_start":492,"line_end":492,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":109394,"byte_end":109451,"line_start":493,"line_end":493,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":109456,"byte_end":109459,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `value` was not in the set.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":109464,"byte_end":109512,"line_start":495,"line_end":495,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":109517,"byte_end":109520,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":109525,"byte_end":109565,"line_start":497,"line_end":497,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1109},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":110105,"byte_end":110121,"line_start":512,"line_end":512,"column_start":12,"column_end":28},"name":"swap_remove_full","qualname":"<IndexSet<T, S>>::swap_remove_full","value":"pub fn swap_remove_full<Q: ?Sized>(&mut Self, &Q) -> Option<(usize, T)> where\nQ: Hash + Equivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value from the set return it and the index it had.","sig":null,"attributes":[{"value":"/ Remove the value from the set return it and the index it had.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":109754,"byte_end":109819,"line_start":505,"line_end":505,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":109824,"byte_end":109827,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the value is removed by swapping it with the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":109832,"byte_end":109905,"line_start":507,"line_end":507,"column_start":5,"column_end":78}},{"value":"/ last element of the set and popping it off. **This perturbs","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":109910,"byte_end":109973,"line_start":508,"line_end":508,"column_start":5,"column_end":68}},{"value":"/ the postion of what used to be the last element!**","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":109978,"byte_end":110032,"line_start":509,"line_end":509,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":110037,"byte_end":110040,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `value` was not in the set.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":110045,"byte_end":110093,"line_start":511,"line_end":511,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1112},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":110649,"byte_end":110666,"line_start":526,"line_end":526,"column_start":12,"column_end":29},"name":"shift_remove_full","qualname":"<IndexSet<T, S>>::shift_remove_full","value":"pub fn shift_remove_full<Q: ?Sized>(&mut Self, &Q) -> Option<(usize, T)> where\nQ: Hash + Equivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value from the set return it and the index it had.","sig":null,"attributes":[{"value":"/ Remove the value from the set return it and the index it had.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":110303,"byte_end":110368,"line_start":519,"line_end":519,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":110373,"byte_end":110376,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the value is removed by shifting all of the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":110381,"byte_end":110448,"line_start":521,"line_end":521,"column_start":5,"column_end":72}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":110453,"byte_end":110514,"line_start":522,"line_end":522,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":110519,"byte_end":110576,"line_start":523,"line_end":523,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":110581,"byte_end":110584,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `value` was not in the set.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":110589,"byte_end":110637,"line_start":525,"line_end":525,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1115},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":110939,"byte_end":110942,"line_start":536,"line_end":536,"column_start":12,"column_end":15},"name":"pop","qualname":"<IndexSet<T, S>>::pop","value":"pub fn pop(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the last value","sig":null,"attributes":[{"value":"/ Remove the last value","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":110849,"byte_end":110874,"line_start":533,"line_end":533,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":110879,"byte_end":110882,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":110887,"byte_end":110927,"line_start":535,"line_end":535,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1117},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":111287,"byte_end":111293,"line_start":547,"line_end":547,"column_start":12,"column_end":18},"name":"retain","qualname":"<IndexSet<T, S>>::retain","value":"pub fn retain<F>(&mut Self, F) where F: FnMut(&T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Scan through each value in the set and keep those where the\n closure `keep` returns `true`.","sig":null,"attributes":[{"value":"/ Scan through each value in the set and keep those where the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":111020,"byte_end":111083,"line_start":540,"line_end":540,"column_start":5,"column_end":68}},{"value":"/ closure `keep` returns `true`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":111088,"byte_end":111122,"line_start":541,"line_end":541,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":111127,"byte_end":111130,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ The elements are visited in order, and remaining elements keep their","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":111135,"byte_end":111207,"line_start":543,"line_end":543,"column_start":5,"column_end":77}},{"value":"/ order.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":111212,"byte_end":111222,"line_start":544,"line_end":544,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":111227,"byte_end":111230,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":111235,"byte_end":111275,"line_start":546,"line_end":546,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1120},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":111538,"byte_end":111542,"line_start":557,"line_end":557,"column_start":12,"column_end":16},"name":"sort","qualname":"<IndexSet<T, S>>::sort","value":"pub fn sort(&mut Self) where T: Ord","parent":null,"children":[],"decl_id":null,"docs":" Sort the set’s values by their default ordering.","sig":null,"attributes":[{"value":"/ Sort the set’s values by their default ordering.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":111429,"byte_end":111483,"line_start":554,"line_end":554,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":111488,"byte_end":111491,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ See `sort_by` for details.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":111496,"byte_end":111526,"line_start":556,"line_end":556,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1121},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":111803,"byte_end":111810,"line_start":567,"line_end":567,"column_start":12,"column_end":19},"name":"sort_by","qualname":"<IndexSet<T, S>>::sort_by","value":"pub fn sort_by<F>(&mut Self, F) where F: FnMut(&T, &T) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Sort the set’s values in place using the comparison function `compare`.","sig":null,"attributes":[{"value":"/ Sort the set’s values in place using the comparison function `compare`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":111626,"byte_end":111703,"line_start":564,"line_end":564,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":111708,"byte_end":111711,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n log n)** time and **O(n)** space. The sort is stable.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":111716,"byte_end":111791,"line_start":566,"line_end":566,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1124},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":112113,"byte_end":112122,"line_start":578,"line_end":578,"column_start":12,"column_end":21},"name":"sorted_by","qualname":"<IndexSet<T, S>>::sorted_by","value":"pub fn sorted_by<F>(Self, F) -> IntoIter<T> where F: FnMut(&T, &T) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Sort the values of the set and return a by value iterator of\n the values with the result.","sig":null,"attributes":[{"value":"/ Sort the values of the set and return a by value iterator of","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":111965,"byte_end":112029,"line_start":574,"line_end":574,"column_start":5,"column_end":69}},{"value":"/ the values with the result.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":112034,"byte_end":112065,"line_start":575,"line_end":575,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":112070,"byte_end":112073,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ The sort is stable.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":112078,"byte_end":112101,"line_start":577,"line_end":577,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1127},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":112457,"byte_end":112464,"line_start":590,"line_end":590,"column_start":12,"column_end":19},"name":"reverse","qualname":"<IndexSet<T, S>>::reverse","value":"pub fn reverse(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Reverses the order of the set’s values in place.","sig":null,"attributes":[{"value":"/ Reverses the order of the set’s values in place.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":112329,"byte_end":112383,"line_start":587,"line_end":587,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":112388,"byte_end":112391,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time and **O(1)** space.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":112396,"byte_end":112445,"line_start":589,"line_end":589,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1131},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":112685,"byte_end":112694,"line_start":601,"line_end":601,"column_start":12,"column_end":21},"name":"get_index","qualname":"<IndexSet<T, S>>::get_index","value":"pub fn get_index(&Self, usize) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Get a value by index","sig":null,"attributes":[{"value":"/ Get a value by index","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":112546,"byte_end":112570,"line_start":596,"line_end":596,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":112575,"byte_end":112578,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":112583,"byte_end":112630,"line_start":598,"line_end":598,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":112635,"byte_end":112638,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":112643,"byte_end":112673,"line_start":600,"line_end":600,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1132},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":112879,"byte_end":112884,"line_start":608,"line_end":608,"column_start":12,"column_end":17},"name":"first","qualname":"<IndexSet<T, S>>::first","value":"pub fn first(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Get the first value","sig":null,"attributes":[{"value":"/ Get the first value","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":112801,"byte_end":112824,"line_start":605,"line_end":605,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":112829,"byte_end":112832,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":112837,"byte_end":112867,"line_start":607,"line_end":607,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1133},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":113051,"byte_end":113055,"line_start":615,"line_end":615,"column_start":12,"column_end":16},"name":"last","qualname":"<IndexSet<T, S>>::last","value":"pub fn last(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Get the last value","sig":null,"attributes":[{"value":"/ Get the last value","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":112974,"byte_end":112996,"line_start":612,"line_end":612,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":113001,"byte_end":113004,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":113009,"byte_end":113039,"line_start":614,"line_end":614,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1134},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":113511,"byte_end":113528,"line_start":628,"line_end":628,"column_start":12,"column_end":29},"name":"swap_remove_index","qualname":"<IndexSet<T, S>>::swap_remove_index","value":"pub fn swap_remove_index(&mut Self, usize) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value by index","sig":null,"attributes":[{"value":"/ Remove the value by index","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":113144,"byte_end":113173,"line_start":619,"line_end":619,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":113178,"byte_end":113181,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":113186,"byte_end":113233,"line_start":621,"line_end":621,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":113238,"byte_end":113241,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the value is removed by swapping it with the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":113246,"byte_end":113319,"line_start":623,"line_end":623,"column_start":5,"column_end":78}},{"value":"/ last element of the set and popping it off. **This perturbs","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":113324,"byte_end":113387,"line_start":624,"line_end":624,"column_start":5,"column_end":68}},{"value":"/ the postion of what used to be the last element!**","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":113392,"byte_end":113446,"line_start":625,"line_end":625,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":113451,"byte_end":113454,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":113459,"byte_end":113499,"line_start":627,"line_end":627,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1136},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":114001,"byte_end":114019,"line_start":641,"line_end":641,"column_start":12,"column_end":30},"name":"shift_remove_index","qualname":"<IndexSet<T, S>>::shift_remove_index","value":"pub fn shift_remove_index(&mut Self, usize) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value by index","sig":null,"attributes":[{"value":"/ Remove the value by index","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":113639,"byte_end":113668,"line_start":632,"line_end":632,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":113673,"byte_end":113676,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":113681,"byte_end":113728,"line_start":634,"line_end":634,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":113733,"byte_end":113736,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the value is removed by shifting all of the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":113741,"byte_end":113808,"line_start":636,"line_end":636,"column_start":5,"column_end":72}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":113813,"byte_end":113874,"line_start":637,"line_end":637,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":113879,"byte_end":113936,"line_start":638,"line_end":638,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":113941,"byte_end":113944,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":113949,"byte_end":113989,"line_start":640,"line_end":640,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1138},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":114253,"byte_end":114265,"line_start":648,"line_end":648,"column_start":12,"column_end":24},"name":"swap_indices","qualname":"<IndexSet<T, S>>::swap_indices","value":"pub fn swap_indices(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Swaps the position of two values in the set.","sig":null,"attributes":[{"value":"/ Swaps the position of two values in the set.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":114131,"byte_end":114179,"line_start":645,"line_end":645,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":114184,"byte_end":114187,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if `a` or `b` are out of bounds.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":114192,"byte_end":114241,"line_start":647,"line_end":647,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":1144},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":115648,"byte_end":115656,"line_start":700,"line_end":700,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::set::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":1146}],"decl_id":null,"docs":" An owning iterator over the items of a `IndexSet`.","sig":null,"attributes":[{"value":"/ An owning iterator over the items of a `IndexSet`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":115329,"byte_end":115383,"line_start":693,"line_end":693,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":115384,"byte_end":115387,"line_start":694,"line_end":694,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_iter`] method on [`IndexSet`]","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":115388,"byte_end":115460,"line_start":695,"line_end":695,"column_start":1,"column_end":73}},{"value":"/ (provided by the `IntoIterator` trait). See its documentation for more.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":115461,"byte_end":115536,"line_start":696,"line_end":696,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":115537,"byte_end":115540,"line_start":697,"line_end":697,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":115541,"byte_end":115579,"line_start":698,"line_end":698,"column_start":1,"column_end":39}},{"value":"/ [`into_iter`]: struct.IndexSet.html#method.into_iter","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":115580,"byte_end":115636,"line_start":699,"line_end":699,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1159},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":116549,"byte_end":116553,"line_start":736,"line_end":736,"column_start":12,"column_end":16},"name":"Iter","qualname":"::set::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":1162}],"decl_id":null,"docs":" An iterator over the items of a `IndexSet`.","sig":null,"attributes":[{"value":"/ An iterator over the items of a `IndexSet`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":116291,"byte_end":116338,"line_start":729,"line_end":729,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":116339,"byte_end":116342,"line_start":730,"line_end":730,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter`] method on [`IndexSet`].","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":116343,"byte_end":116411,"line_start":731,"line_end":731,"column_start":1,"column_end":69}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":116412,"byte_end":116447,"line_start":732,"line_end":732,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":116448,"byte_end":116451,"line_start":733,"line_end":733,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":116452,"byte_end":116490,"line_start":734,"line_end":734,"column_start":1,"column_end":39}},{"value":"/ [`iter`]: struct.IndexSet.html#method.iter","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":116491,"byte_end":116537,"line_start":735,"line_end":735,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1179},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":117551,"byte_end":117556,"line_start":779,"line_end":779,"column_start":12,"column_end":17},"name":"Drain","qualname":"::set::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":1182}],"decl_id":null,"docs":" A draining iterator over the items of a `IndexSet`.","sig":null,"attributes":[{"value":"/ A draining iterator over the items of a `IndexSet`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":117282,"byte_end":117337,"line_start":772,"line_end":772,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":117338,"byte_end":117341,"line_start":773,"line_end":773,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`drain`] method on [`IndexSet`].","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":117342,"byte_end":117411,"line_start":774,"line_end":774,"column_start":1,"column_end":70}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":117412,"byte_end":117447,"line_start":775,"line_end":775,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":117448,"byte_end":117451,"line_start":776,"line_end":776,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":117452,"byte_end":117490,"line_start":777,"line_end":777,"column_start":1,"column_end":39}},{"value":"/ [`drain`]: struct.IndexSet.html#method.drain","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":117491,"byte_end":117539,"line_start":778,"line_end":778,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1234},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":119754,"byte_end":119765,"line_start":884,"line_end":884,"column_start":12,"column_end":23},"name":"is_disjoint","qualname":"<IndexSet<T, S>>::is_disjoint","value":"pub fn is_disjoint<S2>(&Self, &IndexSet<T, S2>) -> bool where S2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` has no elements in common with `other`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` has no elements in common with `other`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":119674,"byte_end":119742,"line_start":883,"line_end":883,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1238},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":120140,"byte_end":120149,"line_start":896,"line_end":896,"column_start":12,"column_end":21},"name":"is_subset","qualname":"<IndexSet<T, S>>::is_subset","value":"pub fn is_subset<S2>(&Self, &IndexSet<T, S2>) -> bool where S2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all elements of `self` are contained in `other`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if all elements of `self` are contained in `other`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":120058,"byte_end":120128,"line_start":895,"line_end":895,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1241},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":120417,"byte_end":120428,"line_start":904,"line_end":904,"column_start":12,"column_end":23},"name":"is_superset","qualname":"<IndexSet<T, S>>::is_superset","value":"pub fn is_superset<S2>(&Self, &IndexSet<T, S2>) -> bool where S2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all elements of `other` are contained in `self`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if all elements of `other` are contained in `self`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":120335,"byte_end":120405,"line_start":903,"line_end":903,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":1243},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":120854,"byte_end":120864,"line_start":919,"line_end":919,"column_start":12,"column_end":22},"name":"Difference","qualname":"::set::Difference","value":"Difference {  }","parent":null,"children":[{"krate":0,"index":1247},{"krate":0,"index":1248}],"decl_id":null,"docs":" A lazy iterator producing elements in the difference of `IndexSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the difference of `IndexSet`s.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":120553,"byte_end":120625,"line_start":912,"line_end":912,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":120626,"byte_end":120629,"line_start":913,"line_end":913,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`difference`] method on [`IndexSet`].","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":120630,"byte_end":120704,"line_start":914,"line_end":914,"column_start":1,"column_end":75}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":120705,"byte_end":120740,"line_start":915,"line_end":915,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":120741,"byte_end":120744,"line_start":916,"line_end":916,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":120745,"byte_end":120783,"line_start":917,"line_end":917,"column_start":1,"column_end":39}},{"value":"/ [`difference`]: struct.IndexSet.html#method.difference","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":120784,"byte_end":120842,"line_start":918,"line_end":918,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":1268},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":122417,"byte_end":122429,"line_start":986,"line_end":986,"column_start":12,"column_end":24},"name":"Intersection","qualname":"::set::Intersection","value":"Intersection {  }","parent":null,"children":[{"krate":0,"index":1272},{"krate":0,"index":1273}],"decl_id":null,"docs":" A lazy iterator producing elements in the intersection of `IndexSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the intersection of `IndexSet`s.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":122108,"byte_end":122182,"line_start":979,"line_end":979,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":122183,"byte_end":122186,"line_start":980,"line_end":980,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`intersection`] method on [`IndexSet`].","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":122187,"byte_end":122263,"line_start":981,"line_end":981,"column_start":1,"column_end":77}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":122264,"byte_end":122299,"line_start":982,"line_end":982,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":122300,"byte_end":122303,"line_start":983,"line_end":983,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":122304,"byte_end":122342,"line_start":984,"line_end":984,"column_start":1,"column_end":39}},{"value":"/ [`intersection`]: struct.IndexSet.html#method.intersection","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":122343,"byte_end":122405,"line_start":985,"line_end":985,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1293},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":124022,"byte_end":124041,"line_start":1053,"line_end":1053,"column_start":12,"column_end":31},"name":"SymmetricDifference","qualname":"::set::SymmetricDifference","value":"SymmetricDifference {  }","parent":null,"children":[{"krate":0,"index":1298}],"decl_id":null,"docs":" A lazy iterator producing elements in the symmetric difference of `IndexSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the symmetric difference of `IndexSet`s.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":123681,"byte_end":123763,"line_start":1046,"line_end":1046,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":123764,"byte_end":123767,"line_start":1047,"line_end":1047,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`symmetric_difference`] method on","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":123768,"byte_end":123838,"line_start":1048,"line_end":1048,"column_start":1,"column_end":71}},{"value":"/ [`IndexSet`]. See its documentation for more.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":123839,"byte_end":123888,"line_start":1049,"line_end":1049,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":123889,"byte_end":123892,"line_start":1050,"line_end":1050,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":123893,"byte_end":123931,"line_start":1051,"line_end":1051,"column_start":1,"column_end":39}},{"value":"/ [`symmetric_difference`]: struct.IndexSet.html#method.symmetric_difference","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":123932,"byte_end":124010,"line_start":1052,"line_end":1052,"column_start":1,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":1325},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":125559,"byte_end":125564,"line_start":1118,"line_end":1118,"column_start":12,"column_end":17},"name":"Union","qualname":"::set::Union","value":"Union {  }","parent":null,"children":[{"krate":0,"index":1329}],"decl_id":null,"docs":" A lazy iterator producing elements in the union of `IndexSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the union of `IndexSet`s.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":125278,"byte_end":125345,"line_start":1111,"line_end":1111,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":125346,"byte_end":125349,"line_start":1112,"line_end":1112,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`union`] method on [`IndexSet`].","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":125350,"byte_end":125419,"line_start":1113,"line_end":1113,"column_start":1,"column_end":70}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":125420,"byte_end":125455,"line_start":1114,"line_end":1114,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":125456,"byte_end":125459,"line_start":1115,"line_end":1115,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":125460,"byte_end":125498,"line_start":1116,"line_end":1116,"column_start":1,"column_end":39}},{"value":"/ [`union`]: struct.IndexSet.html#method.union","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":125499,"byte_end":125547,"line_start":1117,"line_end":1117,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1404},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":5206,"byte_end":5211,"line_start":185,"line_end":185,"column_start":10,"column_end":15},"name":"Entry","qualname":"::Entries::Entry","value":"type Entry;","parent":{"krate":0,"index":1403},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/equivalent.rs","byte_start":9263,"byte_end":9264,"line_start":18,"line_end":18,"column_start":46,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/mutable_keys.rs","byte_start":11092,"byte_end":11100,"line_start":51,"line_end":51,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde.rs","byte_start":12003,"byte_end":12011,"line_start":14,"line_end":14,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde.rs","byte_start":12345,"byte_end":12360,"line_start":30,"line_end":30,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde.rs","byte_start":13082,"byte_end":13090,"line_start":58,"line_end":58,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde.rs","byte_start":13438,"byte_end":13446,"line_start":72,"line_end":72,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde.rs","byte_start":13870,"byte_end":13878,"line_start":89,"line_end":89,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde.rs","byte_start":14187,"byte_end":14202,"line_start":104,"line_end":104,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde.rs","byte_start":14880,"byte_end":14888,"line_start":131,"line_end":131,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde.rs","byte_start":15205,"byte_end":15213,"line_start":144,"line_end":144,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":17301,"byte_end":17311,"line_start":61,"line_end":61,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core/raw.rs","byte_start":88920,"byte_end":88932,"line_start":13,"line_end":13,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core/raw.rs","byte_start":89232,"byte_end":89244,"line_start":21,"line_end":21,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":323},{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core/raw.rs","byte_start":92293,"byte_end":92306,"line_start":103,"line_end":103,"column_start":40,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core/raw.rs","byte_start":92421,"byte_end":92434,"line_start":106,"line_end":106,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":70341,"byte_end":70353,"line_start":58,"line_end":58,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":414},{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":71039,"byte_end":71051,"line_start":81,"line_end":81,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":71370,"byte_end":71382,"line_start":94,"line_end":94,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":71885,"byte_end":71897,"line_start":121,"line_end":121,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":83304,"byte_end":83309,"line_start":447,"line_end":447,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":483}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":85186,"byte_end":85191,"line_start":511,"line_end":511,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":487}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":85595,"byte_end":85608,"line_start":523,"line_end":523,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":87168,"byte_end":87181,"line_start":566,"line_end":566,"column_start":51,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":87660,"byte_end":87671,"line_start":585,"line_end":585,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":88123,"byte_end":88134,"line_start":605,"line_end":605,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":22196,"byte_end":22204,"line_start":81,"line_end":81,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":610},{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":22602,"byte_end":22610,"line_start":100,"line_end":100,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":23134,"byte_end":23142,"line_start":126,"line_end":126,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":23604,"byte_end":23612,"line_start":144,"line_end":144,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":630},{"krate":0,"index":631}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":24038,"byte_end":24046,"line_start":161,"line_end":161,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":28236,"byte_end":28244,"line_start":302,"line_end":302,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":665},{"krate":0,"index":667},{"krate":0,"index":669},{"krate":0,"index":671},{"krate":0,"index":673},{"krate":0,"index":675},{"krate":0,"index":677},{"krate":0,"index":679},{"krate":0,"index":681},{"krate":0,"index":683},{"krate":0,"index":685},{"krate":0,"index":687},{"krate":0,"index":689},{"krate":0,"index":691},{"krate":0,"index":693},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":699},{"krate":0,"index":701},{"krate":0,"index":704},{"krate":0,"index":708},{"krate":0,"index":711}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":40908,"byte_end":40916,"line_start":701,"line_end":701,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":43897,"byte_end":43901,"line_start":793,"line_end":793,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":734},{"krate":0,"index":1410},{"krate":0,"index":1411},{"krate":0,"index":1412},{"krate":0,"index":1413},{"krate":0,"index":1414},{"krate":0,"index":1415}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":44016,"byte_end":44020,"line_start":799,"line_end":799,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":738}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":44178,"byte_end":44182,"line_start":805,"line_end":805,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":742}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":44333,"byte_end":44337,"line_start":812,"line_end":812,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":746}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":44489,"byte_end":44493,"line_start":820,"line_end":820,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":750}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":44986,"byte_end":44992,"line_start":837,"line_end":837,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":760},{"krate":0,"index":1417},{"krate":0,"index":1418},{"krate":0,"index":1419},{"krate":0,"index":1420},{"krate":0,"index":1421},{"krate":0,"index":1422}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":45109,"byte_end":45115,"line_start":843,"line_end":843,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":764}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":45275,"byte_end":45281,"line_start":849,"line_end":849,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":45432,"byte_end":45438,"line_start":856,"line_end":856,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":772}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":45592,"byte_end":45598,"line_start":864,"line_end":864,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":776}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":46116,"byte_end":46125,"line_start":881,"line_end":881,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":786},{"krate":0,"index":1424},{"krate":0,"index":1425},{"krate":0,"index":1426},{"krate":0,"index":1427},{"krate":0,"index":1428},{"krate":0,"index":1429}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":46246,"byte_end":46255,"line_start":887,"line_end":887,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":790}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":46415,"byte_end":46424,"line_start":893,"line_end":893,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":46846,"byte_end":46850,"line_start":910,"line_end":910,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":804},{"krate":0,"index":1431},{"krate":0,"index":1432},{"krate":0,"index":1433},{"krate":0,"index":1434},{"krate":0,"index":1435},{"krate":0,"index":1436}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":46971,"byte_end":46975,"line_start":916,"line_end":916,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":808}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":47130,"byte_end":47134,"line_start":922,"line_end":922,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":47285,"byte_end":47289,"line_start":929,"line_end":929,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":816}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":47453,"byte_end":47457,"line_start":937,"line_end":937,"column_start":51,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":820}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":47968,"byte_end":47975,"line_start":954,"line_end":954,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":830},{"krate":0,"index":1438},{"krate":0,"index":1439},{"krate":0,"index":1440},{"krate":0,"index":1441},{"krate":0,"index":1442},{"krate":0,"index":1443}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":48103,"byte_end":48110,"line_start":960,"line_end":960,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":834}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":48268,"byte_end":48275,"line_start":966,"line_end":966,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":838}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":48765,"byte_end":48773,"line_start":983,"line_end":983,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":846},{"krate":0,"index":1445},{"krate":0,"index":1446},{"krate":0,"index":1447},{"krate":0,"index":1448},{"krate":0,"index":1449},{"krate":0,"index":1450}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":48887,"byte_end":48895,"line_start":989,"line_end":989,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":850}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":49051,"byte_end":49059,"line_start":995,"line_end":995,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":854}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":49180,"byte_end":49188,"line_start":1001,"line_end":1001,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":49748,"byte_end":49753,"line_start":1019,"line_end":1019,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":867},{"krate":0,"index":1452},{"krate":0,"index":1453},{"krate":0,"index":1454},{"krate":0,"index":1455},{"krate":0,"index":1456},{"krate":0,"index":1457}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":49871,"byte_end":49876,"line_start":1025,"line_end":1025,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1459}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":50391,"byte_end":50399,"line_start":1045,"line_end":1045,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":893}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":51183,"byte_end":51191,"line_start":1077,"line_end":1077,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":899},{"krate":0,"index":900}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":52359,"byte_end":52367,"line_start":1122,"line_end":1122,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":906}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":53444,"byte_end":53452,"line_start":1164,"line_end":1164,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":911},{"krate":0,"index":912}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":54546,"byte_end":54554,"line_start":1206,"line_end":1206,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":917}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":54902,"byte_end":54910,"line_start":1217,"line_end":1217,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":922}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":55494,"byte_end":55502,"line_start":1236,"line_end":1236,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":928}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":56801,"byte_end":56809,"line_start":1269,"line_end":1269,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":936}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":57205,"byte_end":57213,"line_start":1283,"line_end":1283,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":943}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":57433,"byte_end":57441,"line_start":1293,"line_end":1293,"column_start":60,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":950}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":57806,"byte_end":57814,"line_start":1310,"line_end":1310,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":96876,"byte_end":96884,"line_start":71,"line_end":71,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1029},{"krate":0,"index":1030}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":97146,"byte_end":97154,"line_start":87,"line_end":87,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":97665,"byte_end":97673,"line_start":113,"line_end":113,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1043}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":98070,"byte_end":98078,"line_start":128,"line_end":128,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1046},{"krate":0,"index":1047}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":98511,"byte_end":98519,"line_start":147,"line_end":147,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1053},{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1056},{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1062}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":101555,"byte_end":101563,"line_start":249,"line_end":249,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1066},{"krate":0,"index":1067},{"krate":0,"index":1068},{"krate":0,"index":1069},{"krate":0,"index":1071},{"krate":0,"index":1074},{"krate":0,"index":1077},{"krate":0,"index":1080},{"krate":0,"index":1083},{"krate":0,"index":1085},{"krate":0,"index":1088},{"krate":0,"index":1091},{"krate":0,"index":1093},{"krate":0,"index":1095},{"krate":0,"index":1097},{"krate":0,"index":1099},{"krate":0,"index":1101},{"krate":0,"index":1103},{"krate":0,"index":1106},{"krate":0,"index":1109},{"krate":0,"index":1112},{"krate":0,"index":1115},{"krate":0,"index":1117},{"krate":0,"index":1120},{"krate":0,"index":1121},{"krate":0,"index":1124},{"krate":0,"index":1127}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":112525,"byte_end":112533,"line_start":595,"line_end":595,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1131},{"krate":0,"index":1132},{"krate":0,"index":1133},{"krate":0,"index":1134},{"krate":0,"index":1136},{"krate":0,"index":1138}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":115032,"byte_end":115040,"line_start":681,"line_end":681,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1142},{"krate":0,"index":1143}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":115722,"byte_end":115730,"line_start":704,"line_end":704,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1149},{"krate":0,"index":1460},{"krate":0,"index":1461},{"krate":0,"index":1462},{"krate":0,"index":1463},{"krate":0,"index":1464},{"krate":0,"index":1465}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":115827,"byte_end":115835,"line_start":710,"line_end":710,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1152}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":115979,"byte_end":115987,"line_start":716,"line_end":716,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1155}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":116090,"byte_end":116098,"line_start":722,"line_end":722,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1158}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":116629,"byte_end":116633,"line_start":740,"line_end":740,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1166},{"krate":0,"index":1467},{"krate":0,"index":1468},{"krate":0,"index":1469},{"krate":0,"index":1470},{"krate":0,"index":1471},{"krate":0,"index":1472}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":116742,"byte_end":116746,"line_start":746,"line_end":746,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1169}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":116898,"byte_end":116902,"line_start":752,"line_end":752,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1172}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":116992,"byte_end":116996,"line_start":758,"line_end":758,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1175}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":117142,"byte_end":117146,"line_start":766,"line_end":766,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1178}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":117627,"byte_end":117632,"line_start":783,"line_end":783,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1185},{"krate":0,"index":1474},{"krate":0,"index":1475},{"krate":0,"index":1476},{"krate":0,"index":1477},{"krate":0,"index":1478},{"krate":0,"index":1479}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":117733,"byte_end":117738,"line_start":789,"line_end":789,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1481}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":118010,"byte_end":118018,"line_start":802,"line_end":802,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1198},{"krate":0,"index":1199},{"krate":0,"index":1200}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":118237,"byte_end":118245,"line_start":813,"line_end":813,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1204}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":118540,"byte_end":118548,"line_start":826,"line_end":826,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1210}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":118799,"byte_end":118807,"line_start":837,"line_end":837,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1217}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":119088,"byte_end":119096,"line_start":848,"line_end":848,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1222}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":119312,"byte_end":119320,"line_start":860,"line_end":860,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1227}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":119534,"byte_end":119542,"line_start":871,"line_end":871,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":119609,"byte_end":119617,"line_start":878,"line_end":878,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1234},{"krate":0,"index":1238},{"krate":0,"index":1241}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":120962,"byte_end":120972,"line_start":924,"line_end":924,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1253},{"krate":0,"index":1254},{"krate":0,"index":1255}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":121406,"byte_end":121416,"line_start":945,"line_end":945,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1259}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":121726,"byte_end":121736,"line_start":960,"line_end":960,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1263}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":121902,"byte_end":121912,"line_start":969,"line_end":969,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1267}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":122527,"byte_end":122539,"line_start":991,"line_end":991,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1280}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":122972,"byte_end":122984,"line_start":1012,"line_end":1012,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1284}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":123293,"byte_end":123305,"line_start":1027,"line_end":1027,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1288}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":123473,"byte_end":123485,"line_start":1036,"line_end":1036,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1292}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":124158,"byte_end":124177,"line_start":1057,"line_end":1057,"column_start":34,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1304},{"krate":0,"index":1305},{"krate":0,"index":1306},{"krate":0,"index":1307}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":124632,"byte_end":124651,"line_start":1081,"line_end":1081,"column_start":41,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1314}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":124852,"byte_end":124871,"line_start":1092,"line_end":1092,"column_start":27,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1319}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":125036,"byte_end":125055,"line_start":1100,"line_end":1100,"column_start":32,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1324}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":125660,"byte_end":125665,"line_start":1122,"line_end":1122,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1334},{"krate":0,"index":1335},{"krate":0,"index":1336},{"krate":0,"index":1337}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":126088,"byte_end":126093,"line_start":1145,"line_end":1145,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1343}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":126262,"byte_end":126267,"line_start":1155,"line_end":1155,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1347}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":126408,"byte_end":126413,"line_start":1163,"line_end":1163,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1351}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":3933,"byte_end":3942,"line_start":122,"line_end":122,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1386}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":4140,"byte_end":4146,"line_start":136,"line_end":136,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1390},{"krate":0,"index":1391}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":4539,"byte_end":4545,"line_start":156,"line_end":156,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1395},{"krate":0,"index":1396},{"krate":0,"index":1397},{"krate":0,"index":1398},{"krate":0,"index":1399},{"krate":0,"index":1400},{"krate":0,"index":1401},{"krate":0,"index":1402}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":3420,"byte_end":3429,"line_start":100,"line_end":100,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":190}},{"kind":"Mod","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":3450,"byte_end":3453,"line_start":103,"line_end":103,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":279}},{"kind":"Mod","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":3463,"byte_end":3466,"line_start":104,"line_end":104,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":957}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/equivalent.rs","byte_start":9263,"byte_end":9264,"line_start":18,"line_end":18,"column_start":46,"column_end":47},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":25},"to":{"krate":0,"index":21}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/mutable_keys.rs","byte_start":11092,"byte_end":11100,"line_start":51,"line_end":51,"column_start":31,"column_end":39},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":600},"to":{"krate":0,"index":44}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde.rs","byte_start":12003,"byte_end":12011,"line_start":14,"line_end":14,"column_start":29,"column_end":37},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":600},"to":{"krate":18,"index":2015}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde.rs","byte_start":12345,"byte_end":12360,"line_start":30,"line_end":30,"column_start":37,"column_end":52},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":126},"to":{"krate":18,"index":1555}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde.rs","byte_start":13082,"byte_end":13090,"line_start":58,"line_end":58,"column_start":41,"column_end":49},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":600},"to":{"krate":18,"index":1471}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde.rs","byte_start":13438,"byte_end":13446,"line_start":72,"line_end":72,"column_start":52,"column_end":60},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":600},"to":{"krate":18,"index":1687}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde.rs","byte_start":13870,"byte_end":13878,"line_start":89,"line_end":89,"column_start":26,"column_end":34},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1022},"to":{"krate":18,"index":2015}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde.rs","byte_start":14187,"byte_end":14202,"line_start":104,"line_end":104,"column_start":34,"column_end":49},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":164},"to":{"krate":18,"index":1555}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde.rs","byte_start":14880,"byte_end":14888,"line_start":131,"line_end":131,"column_start":38,"column_end":46},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1022},"to":{"krate":18,"index":1471}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde.rs","byte_start":15205,"byte_end":15213,"line_start":144,"line_end":144,"column_start":49,"column_end":57},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1022},"to":{"krate":18,"index":1687}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/serde_seq.rs","byte_start":17301,"byte_end":17311,"line_start":61,"line_end":61,"column_start":37,"column_end":47},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":236},"to":{"krate":18,"index":1555}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core/raw.rs","byte_start":88920,"byte_end":88932,"line_start":13,"line_end":13,"column_start":21,"column_end":33},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":308},"to":{"krate":1,"index":9597}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core/raw.rs","byte_start":89232,"byte_end":89244,"line_start":21,"line_end":21,"column_start":12,"column_end":24},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":390},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core/raw.rs","byte_start":92293,"byte_end":92306,"line_start":103,"line_end":103,"column_start":40,"column_end":53},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":326},"to":{"krate":1,"index":3036}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core/raw.rs","byte_start":92421,"byte_end":92434,"line_start":106,"line_end":106,"column_start":16,"column_end":29},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":326},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":70341,"byte_end":70353,"line_start":58,"line_end":58,"column_start":22,"column_end":34},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":390},"to":{"krate":1,"index":2645}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":71039,"byte_end":71051,"line_start":81,"line_end":81,"column_start":27,"column_end":39},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":390},"to":{"krate":1,"index":9597}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":71370,"byte_end":71382,"line_start":94,"line_end":94,"column_start":24,"column_end":36},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":390},"to":{"krate":0,"index":1403}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":71885,"byte_end":71897,"line_start":121,"line_end":121,"column_start":12,"column_end":24},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":390},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":83304,"byte_end":83309,"line_start":447,"line_end":447,"column_start":16,"column_end":21},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":462},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":85186,"byte_end":85191,"line_start":511,"line_end":511,"column_start":51,"column_end":56},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":462},"to":{"krate":1,"index":9597}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":85595,"byte_end":85608,"line_start":523,"line_end":523,"column_start":12,"column_end":25},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":326},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":87168,"byte_end":87181,"line_start":566,"line_end":566,"column_start":51,"column_end":64},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":326},"to":{"krate":1,"index":9597}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":87660,"byte_end":87671,"line_start":585,"line_end":585,"column_start":16,"column_end":27},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":503},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map/core.rs","byte_start":88123,"byte_end":88134,"line_start":605,"line_end":605,"column_start":39,"column_end":50},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":503},"to":{"krate":1,"index":9597}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":22196,"byte_end":22204,"line_start":81,"line_end":81,"column_start":25,"column_end":33},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":600},"to":{"krate":1,"index":2645}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":22602,"byte_end":22610,"line_start":100,"line_end":100,"column_start":27,"column_end":35},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":600},"to":{"krate":0,"index":1403}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":23134,"byte_end":23142,"line_start":126,"line_end":126,"column_start":30,"column_end":38},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":600},"to":{"krate":1,"index":9597}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":23604,"byte_end":23612,"line_start":144,"line_end":144,"column_start":12,"column_end":20},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":600},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":24038,"byte_end":24046,"line_start":161,"line_end":161,"column_start":15,"column_end":23},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":600},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":28236,"byte_end":28244,"line_start":302,"line_end":302,"column_start":15,"column_end":23},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":600},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":40908,"byte_end":40916,"line_start":701,"line_end":701,"column_start":15,"column_end":23},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":600},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":43897,"byte_end":43901,"line_start":793,"line_end":793,"column_start":29,"column_end":33},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":725},"to":{"krate":1,"index":7907}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":44016,"byte_end":44020,"line_start":799,"line_end":799,"column_start":36,"column_end":40},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":725},"to":{"krate":1,"index":7759}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":44178,"byte_end":44182,"line_start":805,"line_end":805,"column_start":34,"column_end":38},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":725},"to":{"krate":1,"index":7784}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":44333,"byte_end":44337,"line_start":812,"line_end":812,"column_start":22,"column_end":26},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":725},"to":{"krate":1,"index":2645}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":44489,"byte_end":44493,"line_start":820,"line_end":820,"column_start":39,"column_end":43},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":725},"to":{"krate":1,"index":9597}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":44986,"byte_end":44992,"line_start":837,"line_end":837,"column_start":29,"column_end":35},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":751},"to":{"krate":1,"index":7907}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":45109,"byte_end":45115,"line_start":843,"line_end":843,"column_start":36,"column_end":42},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":751},"to":{"krate":1,"index":7759}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":45275,"byte_end":45281,"line_start":849,"line_end":849,"column_start":34,"column_end":40},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":751},"to":{"krate":1,"index":7784}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":45432,"byte_end":45438,"line_start":856,"line_end":856,"column_start":22,"column_end":28},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":751},"to":{"krate":1,"index":2645}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":45592,"byte_end":45598,"line_start":864,"line_end":864,"column_start":39,"column_end":45},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":751},"to":{"krate":1,"index":9597}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":46116,"byte_end":46125,"line_start":881,"line_end":881,"column_start":29,"column_end":38},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":777},"to":{"krate":1,"index":7907}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":46246,"byte_end":46255,"line_start":887,"line_end":887,"column_start":36,"column_end":45},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":777},"to":{"krate":1,"index":7759}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":46415,"byte_end":46424,"line_start":893,"line_end":893,"column_start":34,"column_end":43},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":777},"to":{"krate":1,"index":7784}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":46846,"byte_end":46850,"line_start":910,"line_end":910,"column_start":29,"column_end":33},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":795},"to":{"krate":1,"index":7907}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":46971,"byte_end":46975,"line_start":916,"line_end":916,"column_start":36,"column_end":40},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":795},"to":{"krate":1,"index":7759}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":47130,"byte_end":47134,"line_start":922,"line_end":922,"column_start":34,"column_end":38},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":795},"to":{"krate":1,"index":7784}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":47285,"byte_end":47289,"line_start":929,"line_end":929,"column_start":22,"column_end":26},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":795},"to":{"krate":1,"index":2645}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":47453,"byte_end":47457,"line_start":937,"line_end":937,"column_start":51,"column_end":55},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":795},"to":{"krate":1,"index":9597}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":47968,"byte_end":47975,"line_start":954,"line_end":954,"column_start":29,"column_end":36},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":821},"to":{"krate":1,"index":7907}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":48103,"byte_end":48110,"line_start":960,"line_end":960,"column_start":36,"column_end":43},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":821},"to":{"krate":1,"index":7759}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":48268,"byte_end":48275,"line_start":966,"line_end":966,"column_start":34,"column_end":41},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":821},"to":{"krate":1,"index":7784}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":48765,"byte_end":48773,"line_start":983,"line_end":983,"column_start":25,"column_end":33},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":839},"to":{"krate":1,"index":7907}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":48887,"byte_end":48895,"line_start":989,"line_end":989,"column_start":36,"column_end":44},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":839},"to":{"krate":1,"index":7759}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":49051,"byte_end":49059,"line_start":995,"line_end":995,"column_start":34,"column_end":42},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":839},"to":{"krate":1,"index":7784}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":49180,"byte_end":49188,"line_start":1001,"line_end":1001,"column_start":51,"column_end":59},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":839},"to":{"krate":1,"index":9597}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":49748,"byte_end":49753,"line_start":1019,"line_end":1019,"column_start":25,"column_end":30},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":859},"to":{"krate":1,"index":7907}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":49871,"byte_end":49876,"line_start":1025,"line_end":1025,"column_start":36,"column_end":41},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":859},"to":{"krate":1,"index":7759}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":50391,"byte_end":50399,"line_start":1045,"line_end":1045,"column_start":32,"column_end":40},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":600},"to":{"krate":1,"index":7715}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":51183,"byte_end":51191,"line_start":1077,"line_end":1077,"column_start":40,"column_end":48},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":600},"to":{"krate":1,"index":3327}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":52359,"byte_end":52367,"line_start":1122,"line_end":1122,"column_start":43,"column_end":51},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":600},"to":{"krate":1,"index":3331}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":53444,"byte_end":53452,"line_start":1164,"line_end":1164,"column_start":32,"column_end":40},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":600},"to":{"krate":1,"index":3327}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":54546,"byte_end":54554,"line_start":1206,"line_end":1206,"column_start":35,"column_end":43},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":600},"to":{"krate":1,"index":3331}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":54902,"byte_end":54910,"line_start":1217,"line_end":1217,"column_start":40,"column_end":48},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":600},"to":{"krate":1,"index":7711}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":55494,"byte_end":55502,"line_start":1236,"line_end":1236,"column_start":34,"column_end":42},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":600},"to":{"krate":1,"index":7724}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":56801,"byte_end":56809,"line_start":1269,"line_end":1269,"column_start":46,"column_end":54},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":600},"to":{"krate":1,"index":7724}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":57205,"byte_end":57213,"line_start":1283,"line_end":1283,"column_start":27,"column_end":35},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":600},"to":{"krate":1,"index":3002}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":57433,"byte_end":57441,"line_start":1293,"line_end":1293,"column_start":60,"column_end":68},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":600},"to":{"krate":1,"index":2675}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/map.rs","byte_start":57806,"byte_end":57814,"line_start":1310,"line_end":1310,"column_start":22,"column_end":30},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":600},"to":{"krate":1,"index":2680}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":96876,"byte_end":96884,"line_start":71,"line_end":71,"column_start":22,"column_end":30},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1022},"to":{"krate":1,"index":2645}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":97146,"byte_end":97154,"line_start":87,"line_end":87,"column_start":24,"column_end":32},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1022},"to":{"krate":0,"index":1403}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":97665,"byte_end":97673,"line_start":113,"line_end":113,"column_start":27,"column_end":35},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1022},"to":{"krate":1,"index":9597}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":98070,"byte_end":98078,"line_start":128,"line_end":128,"column_start":9,"column_end":17},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1022},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":98511,"byte_end":98519,"line_start":147,"line_end":147,"column_start":12,"column_end":20},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1022},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":101555,"byte_end":101563,"line_start":249,"line_end":249,"column_start":12,"column_end":20},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1022},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":112525,"byte_end":112533,"line_start":595,"line_end":595,"column_start":12,"column_end":20},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1022},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":115032,"byte_end":115040,"line_start":681,"line_end":681,"column_start":29,"column_end":37},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1022},"to":{"krate":1,"index":3327}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":115722,"byte_end":115730,"line_start":704,"line_end":704,"column_start":22,"column_end":30},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1144},"to":{"krate":1,"index":7907}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":115827,"byte_end":115835,"line_start":710,"line_end":710,"column_start":33,"column_end":41},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1144},"to":{"krate":1,"index":7759}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":115979,"byte_end":115987,"line_start":716,"line_end":716,"column_start":31,"column_end":39},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1144},"to":{"krate":1,"index":7784}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":116090,"byte_end":116098,"line_start":722,"line_end":722,"column_start":36,"column_end":44},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1144},"to":{"krate":1,"index":9597}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":116629,"byte_end":116633,"line_start":740,"line_end":740,"column_start":26,"column_end":30},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1159},"to":{"krate":1,"index":7907}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":116742,"byte_end":116746,"line_start":746,"line_end":746,"column_start":33,"column_end":37},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1159},"to":{"krate":1,"index":7759}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":116898,"byte_end":116902,"line_start":752,"line_end":752,"column_start":31,"column_end":35},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1159},"to":{"krate":1,"index":7784}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":116992,"byte_end":116996,"line_start":758,"line_end":758,"column_start":19,"column_end":23},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1159},"to":{"krate":1,"index":2645}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":117142,"byte_end":117146,"line_start":766,"line_end":766,"column_start":36,"column_end":40},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1159},"to":{"krate":1,"index":9597}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":117627,"byte_end":117632,"line_start":783,"line_end":783,"column_start":22,"column_end":27},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1179},"to":{"krate":1,"index":7907}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":117733,"byte_end":117738,"line_start":789,"line_end":789,"column_start":33,"column_end":38},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1179},"to":{"krate":1,"index":7759}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":118010,"byte_end":118018,"line_start":802,"line_end":802,"column_start":29,"column_end":37},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1022},"to":{"krate":1,"index":7715}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":118237,"byte_end":118245,"line_start":813,"line_end":813,"column_start":32,"column_end":40},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1022},"to":{"krate":1,"index":7711}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":118540,"byte_end":118548,"line_start":826,"line_end":826,"column_start":26,"column_end":34},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1022},"to":{"krate":1,"index":7724}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":118799,"byte_end":118807,"line_start":837,"line_end":837,"column_start":34,"column_end":42},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1022},"to":{"krate":1,"index":7724}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":119088,"byte_end":119096,"line_start":848,"line_end":848,"column_start":24,"column_end":32},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1022},"to":{"krate":1,"index":3002}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":119312,"byte_end":119320,"line_start":860,"line_end":860,"column_start":48,"column_end":56},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1022},"to":{"krate":1,"index":2675}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":119534,"byte_end":119542,"line_start":871,"line_end":871,"column_start":19,"column_end":27},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1022},"to":{"krate":1,"index":2680}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":119609,"byte_end":119617,"line_start":878,"line_end":878,"column_start":12,"column_end":20},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1022},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":120962,"byte_end":120972,"line_start":924,"line_end":924,"column_start":29,"column_end":39},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1243},"to":{"krate":1,"index":7907}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":121406,"byte_end":121416,"line_start":945,"line_end":945,"column_start":36,"column_end":46},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1243},"to":{"krate":1,"index":7759}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":121726,"byte_end":121736,"line_start":960,"line_end":960,"column_start":22,"column_end":32},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1243},"to":{"krate":1,"index":2645}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":121902,"byte_end":121912,"line_start":969,"line_end":969,"column_start":27,"column_end":37},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1243},"to":{"krate":1,"index":9597}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":122527,"byte_end":122539,"line_start":991,"line_end":991,"column_start":29,"column_end":41},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1268},"to":{"krate":1,"index":7907}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":122972,"byte_end":122984,"line_start":1012,"line_end":1012,"column_start":36,"column_end":48},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1268},"to":{"krate":1,"index":7759}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":123293,"byte_end":123305,"line_start":1027,"line_end":1027,"column_start":22,"column_end":34},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1268},"to":{"krate":1,"index":2645}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":123473,"byte_end":123485,"line_start":1036,"line_end":1036,"column_start":27,"column_end":39},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1268},"to":{"krate":1,"index":9597}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":124158,"byte_end":124177,"line_start":1057,"line_end":1057,"column_start":34,"column_end":53},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1293},"to":{"krate":1,"index":7907}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":124632,"byte_end":124651,"line_start":1081,"line_end":1081,"column_start":41,"column_end":60},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1293},"to":{"krate":1,"index":7759}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":124852,"byte_end":124871,"line_start":1092,"line_end":1092,"column_start":27,"column_end":46},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1293},"to":{"krate":1,"index":2645}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":125036,"byte_end":125055,"line_start":1100,"line_end":1100,"column_start":32,"column_end":51},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1293},"to":{"krate":1,"index":9597}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":125660,"byte_end":125665,"line_start":1122,"line_end":1122,"column_start":29,"column_end":34},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1325},"to":{"krate":1,"index":7907}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":126088,"byte_end":126093,"line_start":1145,"line_end":1145,"column_start":36,"column_end":41},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1325},"to":{"krate":1,"index":7759}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":126262,"byte_end":126267,"line_start":1155,"line_end":1155,"column_start":22,"column_end":27},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1325},"to":{"krate":1,"index":2645}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/set.rs","byte_start":126408,"byte_end":126413,"line_start":1163,"line_end":1163,"column_start":27,"column_end":32},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1325},"to":{"krate":1,"index":9597}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":3933,"byte_end":3942,"line_start":122,"line_end":122,"column_start":6,"column_end":15},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":4140,"byte_end":4146,"line_start":136,"line_end":136,"column_start":22,"column_end":28},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1494},"to":{"krate":1,"index":2645}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.1/src/lib.rs","byte_start":4539,"byte_end":4545,"line_start":156,"line_end":156,"column_start":12,"column_end":18},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1494},"to":{"krate":4294967295,"index":4294967295}}]}