{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0","program":"/Users/doviethoang/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","wast","--edition=2018","/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"wasm-module\"","-C","metadata=0f52c206000d7574","-C","extra-filename=-0f52c206000d7574","--out-dir","/Users/doviethoang/Desktop/github/cw-contracts/contracts/voting/target/rls/debug/deps","-L","dependency=/Users/doviethoang/Desktop/github/cw-contracts/contracts/voting/target/rls/debug/deps","--extern","leb128=/Users/doviethoang/Desktop/github/cw-contracts/contracts/voting/target/rls/debug/deps/libleb128-68e6d9eca3d8ed2e.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/doviethoang/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/doviethoang/Desktop/github/cw-contracts/contracts/voting/target/rls/debug/deps/libwast-0f52c206000d7574.rmeta"},"prelude":{"crate_id":{"name":"wast","disambiguator":[16864263601839837338,0]},"crate_root":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src","external_crates":[{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8736441298905945133,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14793976659495462539,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3402831840469434398,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10266006331935790141,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3256146445313423250,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[17904618012795691138,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9322387616446168443,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3101585505833515335,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[9998121223216013160,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[13604153592636442655,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[4682215639508348019,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[681692869457277629,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[14282542057858629160,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[14550073586256240635,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[6281633846692226065,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[17361906875064838028,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[16875744454975590306,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","num":18,"id":{"name":"leb128","disambiguator":[802418969874501809,0]}}],"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":0,"byte_end":7428,"line_start":1,"line_end":235,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":874},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13566153,"byte_end":13566158,"line_start":4,"line_end":4,"column_start":25,"column_end":30},"alias_span":null,"name":"Names","value":"","parent":{"krate":0,"index":1702}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":2490,"byte_end":2491,"line_start":59,"line_end":59,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"AssertExpression, V128Pattern, Span, NanPattern","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":0,"byte_end":7428,"line_start":1,"line_end":235,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":227},{"krate":0,"index":492},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":590},{"krate":0,"index":8360},{"krate":0,"index":8362},{"krate":0,"index":8364},{"krate":0,"index":8369},{"krate":0,"index":8371},{"krate":0,"index":8375},{"krate":0,"index":8377},{"krate":0,"index":8384},{"krate":0,"index":730},{"krate":0,"index":739},{"krate":0,"index":742},{"krate":0,"index":743}],"decl_id":null,"docs":" A crate for low-level parsing of the WebAssembly text formats: WAT and WAST.","sig":null,"attributes":[{"value":"/ A crate for low-level parsing of the WebAssembly text formats: WAT and WAST.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":0,"byte_end":80,"line_start":1,"line_end":1,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":81,"byte_end":84,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate is intended to be a low-level detail of the `wat` crate,","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":85,"byte_end":156,"line_start":3,"line_end":3,"column_start":1,"column_end":72}},{"value":"/ providing a low-level parsing API for parsing WebAssembly text format","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":157,"byte_end":230,"line_start":4,"line_end":4,"column_start":1,"column_end":74}},{"value":"/ structures. The API provided by this crate is very similar to","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":231,"byte_end":296,"line_start":5,"line_end":5,"column_start":1,"column_end":66}},{"value":"/ [`syn`](https://docs.rs/syn) and provides the ability to write customized","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":297,"byte_end":374,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ parsers which may be an extension to the core WebAssembly text format. For","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":375,"byte_end":453,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ more documentation see the [`parser`] module.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":454,"byte_end":503,"line_start":8,"line_end":8,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":504,"byte_end":507,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # High-level Overview","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":508,"byte_end":533,"line_start":10,"line_end":10,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":534,"byte_end":537,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This crate provides a few major pieces of functionality","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":538,"byte_end":597,"line_start":12,"line_end":12,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":598,"byte_end":601,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ * [`lexer`] - this is a raw lexer for the wasm text format. This is not","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":602,"byte_end":677,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/   customizable, but if you'd like to iterate over raw tokens this is the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":678,"byte_end":754,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/   module for you. You likely won't use this much.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":755,"byte_end":808,"line_start":16,"line_end":16,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":809,"byte_end":812,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * [`parser`] - this is the workhorse of this crate. The [`parser`] module","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":813,"byte_end":890,"line_start":18,"line_end":18,"column_start":1,"column_end":78}},{"value":"/   provides the [`Parse`][] trait primarily and utilities","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":891,"byte_end":951,"line_start":19,"line_end":19,"column_start":1,"column_end":61}},{"value":"/   around working with a [`Parser`](`parser::Parser`) to parse streams of","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":952,"byte_end":1028,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/   tokens.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":1029,"byte_end":1042,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":1043,"byte_end":1046,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * [`Module`] - this contains an Abstract Syntax Tree (AST) of the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":1047,"byte_end":1116,"line_start":23,"line_end":23,"column_start":1,"column_end":70}},{"value":"/   WebAssembly Text format (WAT) as well as the unofficial WAST format. This","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":1117,"byte_end":1196,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/   also has a [`Module::encode`] method to emit a module in its binary form.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":1197,"byte_end":1276,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":1277,"byte_end":1280,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Stability and WebAssembly Features","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":1281,"byte_end":1321,"line_start":27,"line_end":27,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":1322,"byte_end":1325,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This crate provides support for many in-progress WebAssembly features such","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":1326,"byte_end":1404,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/ as reference types, multi-value, etc. Be sure to check out the documentation","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":1405,"byte_end":1485,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ of the [`wast` crate](https://docs.rs/wast) for policy information on crate","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":1486,"byte_end":1565,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ stability vs WebAssembly Features. The tl;dr; version is that this crate","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":1566,"byte_end":1642,"line_start":32,"line_end":32,"column_start":1,"column_end":77}},{"value":"/ will issue semver-non-breaking releases which will break the parsing of the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":1643,"byte_end":1722,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ text format. This crate, unlike `wast`, is expected to have numerous Rust","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":1723,"byte_end":1800,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/ public API changes, all of which will be accompanied with a semver-breaking","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":1801,"byte_end":1880,"line_start":35,"line_end":35,"column_start":1,"column_end":80}},{"value":"/ release.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":1881,"byte_end":1893,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":1894,"byte_end":1897,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Compile-time Cargo features","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":1898,"byte_end":1931,"line_start":38,"line_end":38,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":1932,"byte_end":1935,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ This crate has a `wasm-module` feature which is turned on by default which","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":1936,"byte_end":2014,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"/ includes all necessary support to parse full WebAssembly modules. If you","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":2015,"byte_end":2091,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"/ don't need this (for example you're parsing your own s-expression format)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":2092,"byte_end":2169,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ then this feature can be disabled.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":2170,"byte_end":2208,"line_start":43,"line_end":43,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":2209,"byte_end":2212,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ [`Parse`]: parser::Parse","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":2213,"byte_end":2241,"line_start":45,"line_end":45,"column_start":1,"column_end":29}},{"value":"/ [`LexError`]: lexer::LexError","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":2242,"byte_end":2275,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"deny(missing_docs, broken_intra_doc_links)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":2277,"byte_end":2323,"line_start":48,"line_end":48,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":426},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/types.rs","byte_start":114960,"byte_end":114963,"line_start":273,"line_end":273,"column_start":10,"column_end":13},"name":"Key","qualname":"::resolve::types::TypeReference::Key","value":"type Key: TypeKey<'a>;","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":874},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/mod.rs","byte_start":43522,"byte_end":43527,"line_start":89,"line_end":89,"column_start":12,"column_end":17},"name":"Names","qualname":"::resolve::Names","value":"Names {  }","parent":null,"children":[{"krate":0,"index":876}],"decl_id":null,"docs":" Representation of the results of name resolution for a module.","sig":null,"attributes":[{"value":"/ Representation of the results of name resolution for a module.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/mod.rs","byte_start":43252,"byte_end":43318,"line_start":83,"line_end":83,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/mod.rs","byte_start":43319,"byte_end":43322,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ This structure is returned from the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/mod.rs","byte_start":43323,"byte_end":43362,"line_start":85,"line_end":85,"column_start":1,"column_end":40}},{"value":"/ [`Module::resolve`](crate::Module::resolve) function and can be used to","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/mod.rs","byte_start":43363,"byte_end":43438,"line_start":86,"line_end":86,"column_start":1,"column_end":76}},{"value":"/ resolve your own name arguments if you have any.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/mod.rs","byte_start":43439,"byte_end":43491,"line_start":87,"line_end":87,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/mod.rs","byte_start":43883,"byte_end":43895,"line_start":99,"line_end":99,"column_start":12,"column_end":24},"name":"resolve_func","qualname":"<Names>::resolve_func","value":"pub fn resolve_func(&Self, &mut Index) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Resolves `idx` within the function namespace.","sig":null,"attributes":[{"value":"/ Resolves `idx` within the function namespace.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/mod.rs","byte_start":43597,"byte_end":43646,"line_start":94,"line_end":94,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/mod.rs","byte_start":43651,"byte_end":43654,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ If `idx` is a `Num`, it is ignored, but if it's an `Id` then it will be","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/mod.rs","byte_start":43659,"byte_end":43734,"line_start":96,"line_end":96,"column_start":5,"column_end":80}},{"value":"/ looked up in the function namespace and converted to a `Num`. If the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/mod.rs","byte_start":43739,"byte_end":43811,"line_start":97,"line_end":97,"column_start":5,"column_end":77}},{"value":"/ `Id` is not defined then an error will be returned.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/mod.rs","byte_start":43816,"byte_end":43871,"line_start":98,"line_end":98,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/mod.rs","byte_start":44302,"byte_end":44316,"line_start":109,"line_end":109,"column_start":12,"column_end":26},"name":"resolve_memory","qualname":"<Names>::resolve_memory","value":"pub fn resolve_memory(&Self, &mut Index) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Resolves `idx` within the memory namespace.","sig":null,"attributes":[{"value":"/ Resolves `idx` within the memory namespace.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/mod.rs","byte_start":44020,"byte_end":44067,"line_start":104,"line_end":104,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/mod.rs","byte_start":44072,"byte_end":44075,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ If `idx` is a `Num`, it is ignored, but if it's an `Id` then it will be","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/mod.rs","byte_start":44080,"byte_end":44155,"line_start":106,"line_end":106,"column_start":5,"column_end":80}},{"value":"/ looked up in the memory namespace and converted to a `Num`. If the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/mod.rs","byte_start":44160,"byte_end":44230,"line_start":107,"line_end":107,"column_start":5,"column_end":75}},{"value":"/ `Id` is not defined then an error will be returned.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/mod.rs","byte_start":44235,"byte_end":44290,"line_start":108,"line_end":108,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/mod.rs","byte_start":44723,"byte_end":44736,"line_start":119,"line_end":119,"column_start":12,"column_end":25},"name":"resolve_table","qualname":"<Names>::resolve_table","value":"pub fn resolve_table(&Self, &mut Index) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Resolves `idx` within the table namespace.","sig":null,"attributes":[{"value":"/ Resolves `idx` within the table namespace.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/mod.rs","byte_start":44443,"byte_end":44489,"line_start":114,"line_end":114,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/mod.rs","byte_start":44494,"byte_end":44497,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ If `idx` is a `Num`, it is ignored, but if it's an `Id` then it will be","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/mod.rs","byte_start":44502,"byte_end":44577,"line_start":116,"line_end":116,"column_start":5,"column_end":80}},{"value":"/ looked up in the table namespace and converted to a `Num`. If the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/mod.rs","byte_start":44582,"byte_end":44651,"line_start":117,"line_end":117,"column_start":5,"column_end":74}},{"value":"/ `Id` is not defined then an error will be returned.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/mod.rs","byte_start":44656,"byte_end":44711,"line_start":118,"line_end":118,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/mod.rs","byte_start":45144,"byte_end":45158,"line_start":129,"line_end":129,"column_start":12,"column_end":26},"name":"resolve_global","qualname":"<Names>::resolve_global","value":"pub fn resolve_global(&Self, &mut Index) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Resolves `idx` within the global namespace.","sig":null,"attributes":[{"value":"/ Resolves `idx` within the global namespace.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/mod.rs","byte_start":44862,"byte_end":44909,"line_start":124,"line_end":124,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/mod.rs","byte_start":44914,"byte_end":44917,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ If `idx` is a `Num`, it is ignored, but if it's an `Id` then it will be","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/mod.rs","byte_start":44922,"byte_end":44997,"line_start":126,"line_end":126,"column_start":5,"column_end":80}},{"value":"/ looked up in the global namespace and converted to a `Num`. If the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/mod.rs","byte_start":45002,"byte_end":45072,"line_start":127,"line_end":127,"column_start":5,"column_end":75}},{"value":"/ `Id` is not defined then an error will be returned.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/mod.rs","byte_start":45077,"byte_end":45132,"line_start":128,"line_end":128,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":8386},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13431104,"byte_end":13431108,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Span","qualname":"::ast::token::Span","value":"Span {  }","parent":null,"children":[{"krate":0,"index":8387}],"decl_id":null,"docs":" A position in the original source stream, used to render errors.\n","sig":null,"attributes":[{"value":"/ A position in the original source stream, used to render errors.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13430956,"byte_end":13431024,"line_start":8,"line_end":8,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":921},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13431233,"byte_end":13431244,"line_start":16,"line_end":16,"column_start":12,"column_end":23},"name":"from_offset","qualname":"<Span>::from_offset","value":"pub fn from_offset(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a `Span` from a byte offset in the source file.\n","sig":null,"attributes":[{"value":"/ Construct a `Span` from a byte offset in the source file.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13431160,"byte_end":13431221,"line_start":15,"line_end":15,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13431563,"byte_end":13431573,"line_start":24,"line_end":24,"column_start":12,"column_end":22},"name":"linecol_in","qualname":"<Span>::linecol_in","value":"pub fn linecol_in(&Self, &str) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Returns the line/column information of this span within `text`.\n Line and column numbers are 0-indexed. User presentation is typically\n 1-indexed, but 0-indexing is appropriate for internal use with\n iterators and slices.\n","sig":null,"attributes":[{"value":"/ Returns the line/column information of this span within `text`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13431305,"byte_end":13431372,"line_start":20,"line_end":20,"column_start":5,"column_end":72}},{"value":"/ Line and column numbers are 0-indexed. User presentation is typically","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13431377,"byte_end":13431450,"line_start":21,"line_end":21,"column_start":5,"column_end":78}},{"value":"/ 1-indexed, but 0-indexing is appropriate for internal use with","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13431455,"byte_end":13431521,"line_start":22,"line_end":22,"column_start":5,"column_end":71}},{"value":"/ iterators and slices.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13431526,"byte_end":13431551,"line_start":23,"line_end":23,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":1021},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13432330,"byte_end":13432332,"line_start":45,"line_end":45,"column_start":12,"column_end":14},"name":"Id","qualname":"::ast::token::Id","value":"Id {  }","parent":null,"children":[{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025}],"decl_id":null,"docs":" An identifier in a WebAssembly module, prefixed by `$` in the textual\n format.","sig":null,"attributes":[{"value":"/ An identifier in a WebAssembly module, prefixed by `$` in the textual","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13432091,"byte_end":13432164,"line_start":39,"line_end":39,"column_start":1,"column_end":74}},{"value":"/ format.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13432165,"byte_end":13432176,"line_start":40,"line_end":40,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13432177,"byte_end":13432180,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ An identifier is used to symbolically refer to items in a a wasm module,","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13432181,"byte_end":13432257,"line_start":42,"line_end":42,"column_start":1,"column_end":77}},{"value":"/ typically via the [`Index`] type.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13432258,"byte_end":13432295,"line_start":43,"line_end":43,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13432787,"byte_end":13432791,"line_start":67,"line_end":67,"column_start":12,"column_end":16},"name":"name","qualname":"<Id>::name","value":"pub fn name(&Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying name of this identifier.","sig":null,"attributes":[{"value":"/ Returns the underlying name of this identifier.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13432656,"byte_end":13432707,"line_start":64,"line_end":64,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13432712,"byte_end":13432715,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ The name returned does not contain the leading `$`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13432720,"byte_end":13432775,"line_start":66,"line_end":66,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13432911,"byte_end":13432915,"line_start":72,"line_end":72,"column_start":12,"column_end":16},"name":"span","qualname":"<Id>::span","value":"pub fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns span of this identifier in the original source\n","sig":null,"attributes":[{"value":"/ Returns span of this identifier in the original source","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13432841,"byte_end":13432899,"line_start":71,"line_end":71,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1033},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13434645,"byte_end":13434648,"line_start":139,"line_end":139,"column_start":5,"column_end":8},"name":"Num","qualname":"::ast::token::Index::Num","value":"Index::Num(u32, Span)","parent":{"krate":0,"index":1031},"children":[],"decl_id":null,"docs":" A numerical index that this references. The index space this is\n referencing is implicit based on where this [`Index`] is stored.\n","sig":null,"attributes":[{"value":"/ A numerical index that this references. The index space this is","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13434500,"byte_end":13434567,"line_start":137,"line_end":137,"column_start":5,"column_end":72}},{"value":"/ referencing is implicit based on where this [`Index`] is stored.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13434572,"byte_end":13434640,"line_start":138,"line_end":138,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1037},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13434802,"byte_end":13434804,"line_start":142,"line_end":142,"column_start":5,"column_end":7},"name":"Id","qualname":"::ast::token::Index::Id","value":"Index::Id(Id)","parent":{"krate":0,"index":1031},"children":[],"decl_id":null,"docs":" A human-readable identifier this references. Like `Num`, the namespace\n this references is based on where this is stored.\n","sig":null,"attributes":[{"value":"/ A human-readable identifier this references. Like `Num`, the namespace","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13434665,"byte_end":13434739,"line_start":140,"line_end":140,"column_start":5,"column_end":79}},{"value":"/ this references is based on where this is stored.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13434744,"byte_end":13434797,"line_start":141,"line_end":141,"column_start":5,"column_end":58}}]},{"kind":"Enum","id":{"krate":0,"index":1031},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13434484,"byte_end":13434489,"line_start":136,"line_end":136,"column_start":10,"column_end":15},"name":"Index","qualname":"::ast::token::Index","value":"pub enum Index<'a> { Num(u32, Span), Id(Id), }","parent":null,"children":[{"krate":0,"index":1033},{"krate":0,"index":1037}],"decl_id":null,"docs":" A reference to another item in a wasm module.","sig":null,"attributes":[{"value":"/ A reference to another item in a wasm module.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13434076,"byte_end":13434125,"line_start":127,"line_end":127,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13434126,"byte_end":13434129,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ This type is used for items referring to other items (such as `call $foo`","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13434130,"byte_end":13434207,"line_start":129,"line_end":129,"column_start":1,"column_end":78}},{"value":"/ referencing function `$foo`). References can be either an index (u32) or an","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13434208,"byte_end":13434287,"line_start":130,"line_end":130,"column_start":1,"column_end":80}},{"value":"/ [`Id`] in the textual format.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13434288,"byte_end":13434321,"line_start":131,"line_end":131,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13434322,"byte_end":13434325,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ The emission phase of a module will ensure that `Index::Id` is never used","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13434326,"byte_end":13434403,"line_start":133,"line_end":133,"column_start":1,"column_end":78}},{"value":"/ and switch them all to `Index::Num`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13434404,"byte_end":13434444,"line_start":134,"line_end":134,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":949},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13434913,"byte_end":13434917,"line_start":147,"line_end":147,"column_start":12,"column_end":16},"name":"span","qualname":"<Index>::span","value":"pub fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the source location where this `Index` was defined.\n","sig":null,"attributes":[{"value":"/ Returns the source location where this `Index` was defined.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13434838,"byte_end":13434901,"line_start":146,"line_end":146,"column_start":5,"column_end":68}}]},{"kind":"StructVariant","id":{"krate":0,"index":1051},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13436704,"byte_end":13436709,"line_start":226,"line_end":226,"column_start":5,"column_end":10},"name":"Outer","qualname":"::ast::token::ItemRef::Outer","value":"ItemRef::Outer { kind, module, idx }","parent":{"krate":0,"index":1048},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1055},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13436791,"byte_end":13436795,"line_start":231,"line_end":231,"column_start":5,"column_end":9},"name":"Item","qualname":"::ast::token::ItemRef::Item","value":"ItemRef::Item { kind, idx, exports }","parent":{"krate":0,"index":1048},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1048},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13436683,"byte_end":13436690,"line_start":225,"line_end":225,"column_start":10,"column_end":17},"name":"ItemRef","qualname":"::ast::token::ItemRef","value":"pub enum ItemRef<'a, K> {\n    Outer {\n            kind: K,\n            module: Index,\n            idx: Index,\n        },\n    Item {\n            kind: K,\n            idx: Index,\n            exports: Vec<&'a str>,\n        },\n}","parent":null,"children":[{"krate":0,"index":1051},{"krate":0,"index":1055}],"decl_id":null,"docs":" Parses `(func $foo)`","sig":null,"attributes":[{"value":"/ Parses `(func $foo)`","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13436502,"byte_end":13436526,"line_start":219,"line_end":219,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13436527,"byte_end":13436530,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ Optionally includes export strings for module-linking sugar syntax for alias","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13436531,"byte_end":13436611,"line_start":221,"line_end":221,"column_start":1,"column_end":81}},{"value":"/ injection.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13436612,"byte_end":13436626,"line_start":222,"line_end":222,"column_start":1,"column_end":15}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13436651,"byte_end":13436673,"line_start":224,"line_end":224,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":969},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13437080,"byte_end":13437092,"line_start":243,"line_end":243,"column_start":12,"column_end":24},"name":"unwrap_index","qualname":"<ItemRef>::unwrap_index","value":"pub fn unwrap_index(&Self) -> &Index","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the underlying `Index` for `ItemRef::Item`.","sig":null,"attributes":[{"value":"/ Unwraps the underlying `Index` for `ItemRef::Item`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13436913,"byte_end":13436968,"line_start":239,"line_end":239,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13436973,"byte_end":13436976,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ Panics if this is `ItemRef::Outer` or if exports haven't been expanded","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13436981,"byte_end":13437055,"line_start":241,"line_end":241,"column_start":5,"column_end":79}},{"value":"/ yet.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13437060,"byte_end":13437068,"line_start":242,"line_end":242,"column_start":5,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":1067},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13438479,"byte_end":13438489,"line_start":290,"line_end":290,"column_start":12,"column_end":22},"name":"IndexOrRef","qualname":"::ast::token::IndexOrRef","value":"","parent":null,"children":[],"decl_id":null,"docs":" Convenience structure to parse `$f` or `(item $f)`.\n","sig":null,"attributes":[{"value":"/ Convenience structure to parse `$f` or `(item $f)`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13438388,"byte_end":13438443,"line_start":288,"line_end":288,"column_start":1,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1071},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13438497,"byte_end":13438515,"line_start":290,"line_end":290,"column_start":30,"column_end":48},"name":"0","qualname":"::ast::token::IndexOrRef::0","value":"ast::token::ItemRef<'a, K>","parent":{"krate":0,"index":1067},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1080},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13439290,"byte_end":13439304,"line_start":321,"line_end":321,"column_start":12,"column_end":26},"name":"NameAnnotation","qualname":"::ast::token::NameAnnotation","value":"NameAnnotation { name }","parent":null,"children":[{"krate":0,"index":1082}],"decl_id":null,"docs":" An `@name` annotation in source, currently of the form `@name \"foo\"`\n","sig":null,"attributes":[{"value":"/ An `@name` annotation in source, currently of the form `@name \"foo\"`","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13439165,"byte_end":13439237,"line_start":319,"line_end":319,"column_start":1,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":1082},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13439359,"byte_end":13439363,"line_start":323,"line_end":323,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::token::NameAnnotation::name","value":"&'a str","parent":{"krate":0,"index":1080},"children":[],"decl_id":null,"docs":" The name specified for the item\n","sig":null,"attributes":[{"value":"/ The name specified for the item","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13439315,"byte_end":13439350,"line_start":322,"line_end":322,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1209},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13452671,"byte_end":13452678,"line_start":681,"line_end":681,"column_start":5,"column_end":12},"name":"Float32","qualname":"::ast::token::Float32","value":"Float32 { bits }","parent":null,"children":[{"krate":0,"index":1210}],"decl_id":null,"docs":" A parsed floating-point type\n","sig":null,"attributes":[{"value":"/ A parsed floating-point type","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13442593,"byte_end":13442625,"line_start":443,"line_end":443,"column_start":9,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1213},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13452781,"byte_end":13452788,"line_start":687,"line_end":687,"column_start":5,"column_end":12},"name":"Float64","qualname":"::ast::token::Float64","value":"Float64 { bits }","parent":null,"children":[{"krate":0,"index":1214}],"decl_id":null,"docs":" A parsed floating-point type\n","sig":null,"attributes":[{"value":"/ A parsed floating-point type","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13442593,"byte_end":13442625,"line_start":443,"line_end":443,"column_start":9,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1015},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13453195,"byte_end":13453201,"line_start":705,"line_end":705,"column_start":12,"column_end":18},"name":"LParen","qualname":"::ast::token::LParen","value":"LParen {  }","parent":null,"children":[{"krate":0,"index":1016}],"decl_id":null,"docs":" A convenience type to use with [`Parser::peek`](crate::parser::Parser::peek)\n to see if the next token is an s-expression.\n","sig":null,"attributes":[{"value":"/ A convenience type to use with [`Parser::peek`](crate::parser::Parser::peek)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13453054,"byte_end":13453134,"line_start":703,"line_end":703,"column_start":1,"column_end":81}},{"value":"/ to see if the next token is an s-expression.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13453135,"byte_end":13453183,"line_start":704,"line_end":704,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":2121},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/alias.rs","byte_start":13455121,"byte_end":13455126,"line_start":6,"line_end":6,"column_start":12,"column_end":17},"name":"Alias","qualname":"::ast::alias::Alias","value":"Alias { span, id, name, kind }","parent":null,"children":[{"krate":0,"index":2123},{"krate":0,"index":2124},{"krate":0,"index":2125},{"krate":0,"index":2126}],"decl_id":null,"docs":" An `alias` statement used to juggle indices with nested modules.\n","sig":null,"attributes":[{"value":"/ An `alias` statement used to juggle indices with nested modules.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/alias.rs","byte_start":13455024,"byte_end":13455092,"line_start":4,"line_end":4,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":2123},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/alias.rs","byte_start":13455181,"byte_end":13455185,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::alias::Alias::span","value":"ast::token::Span","parent":{"krate":0,"index":2121},"children":[],"decl_id":null,"docs":" Where this `alias` was defined.\n","sig":null,"attributes":[{"value":"/ Where this `alias` was defined.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/alias.rs","byte_start":13455137,"byte_end":13455172,"line_start":7,"line_end":7,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":2124},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/alias.rs","byte_start":13455303,"byte_end":13455305,"line_start":11,"line_end":11,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::alias::Alias::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":2121},"children":[],"decl_id":null,"docs":" An identifier that this alias is resolved with (optionally) for name\n resolution.\n","sig":null,"attributes":[{"value":"/ An identifier that this alias is resolved with (optionally) for name","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/alias.rs","byte_start":13455202,"byte_end":13455274,"line_start":9,"line_end":9,"column_start":5,"column_end":77}},{"value":"/ resolution.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/alias.rs","byte_start":13455279,"byte_end":13455294,"line_start":10,"line_end":10,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":2125},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/alias.rs","byte_start":13455413,"byte_end":13455417,"line_start":13,"line_end":13,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::alias::Alias::name","value":"std::option::Option<ast::token::NameAnnotation<'a>>","parent":{"krate":0,"index":2121},"children":[],"decl_id":null,"docs":" An optional name for this alias stored in the custom `name` section.\n","sig":null,"attributes":[{"value":"/ An optional name for this alias stored in the custom `name` section.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/alias.rs","byte_start":13455332,"byte_end":13455404,"line_start":12,"line_end":12,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":2126},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/alias.rs","byte_start":13455521,"byte_end":13455525,"line_start":15,"line_end":15,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::alias::Alias::kind","value":"ast::alias::AliasKind<'a>","parent":{"krate":0,"index":2121},"children":[],"decl_id":null,"docs":" The item in the parent instance that we're aliasing.\n","sig":null,"attributes":[{"value":"/ The item in the parent instance that we're aliasing.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/alias.rs","byte_start":13455456,"byte_end":13455512,"line_start":14,"line_end":14,"column_start":5,"column_end":61}}]},{"kind":"StructVariant","id":{"krate":0,"index":2132},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/alias.rs","byte_start":13455614,"byte_end":13455628,"line_start":21,"line_end":21,"column_start":5,"column_end":19},"name":"InstanceExport","qualname":"::ast::alias::AliasKind::InstanceExport","value":"AliasKind::InstanceExport { instance, export, kind }","parent":{"krate":0,"index":2130},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2136},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/alias.rs","byte_start":13455748,"byte_end":13455753,"line_start":26,"line_end":26,"column_start":5,"column_end":10},"name":"Outer","qualname":"::ast::alias::AliasKind::Outer","value":"AliasKind::Outer { module, index, kind }","parent":{"krate":0,"index":2130},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2130},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/alias.rs","byte_start":13455594,"byte_end":13455603,"line_start":20,"line_end":20,"column_start":10,"column_end":19},"name":"AliasKind","qualname":"::ast::alias::AliasKind","value":"pub enum AliasKind<'a> {\n    InstanceExport {\n            instance: ast::ItemRef,\n            export: &'a str,\n            kind: ast::ExportKind,\n        },\n    Outer {\n            module: ast::Index,\n            index: ast::Index,\n            kind: ast::ExportKind,\n        },\n}","parent":null,"children":[{"krate":0,"index":2132},{"krate":0,"index":2136}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/alias.rs","byte_start":13455562,"byte_end":13455584,"line_start":19,"line_end":19,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1236},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/alias.rs","byte_start":13456164,"byte_end":13456173,"line_start":39,"line_end":39,"column_start":12,"column_end":21},"name":"item_kind","qualname":"<Alias>::item_kind","value":"pub fn item_kind(&Self) -> ast::ExportKind","parent":null,"children":[],"decl_id":null,"docs":" Returns the kind of item defined by this alias.\n","sig":null,"attributes":[{"value":"/ Returns the kind of item defined by this alias.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/alias.rs","byte_start":13456101,"byte_end":13456152,"line_start":38,"line_end":38,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2145},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/assert_expr.rs","byte_start":13457884,"byte_end":13457887,"line_start":14,"line_end":14,"column_start":5,"column_end":8},"name":"I32","qualname":"::ast::assert_expr::AssertExpression::I32","value":"AssertExpression::I32(i32)","parent":{"krate":0,"index":2143},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2148},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/assert_expr.rs","byte_start":13457898,"byte_end":13457901,"line_start":15,"line_end":15,"column_start":5,"column_end":8},"name":"I64","qualname":"::ast::assert_expr::AssertExpression::I64","value":"AssertExpression::I64(i64)","parent":{"krate":0,"index":2143},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2151},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/assert_expr.rs","byte_start":13457912,"byte_end":13457915,"line_start":16,"line_end":16,"column_start":5,"column_end":8},"name":"F32","qualname":"::ast::assert_expr::AssertExpression::F32","value":"AssertExpression::F32(NanPattern<Float32>)","parent":{"krate":0,"index":2143},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2154},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/assert_expr.rs","byte_start":13457942,"byte_end":13457945,"line_start":17,"line_end":17,"column_start":5,"column_end":8},"name":"F64","qualname":"::ast::assert_expr::AssertExpression::F64","value":"AssertExpression::F64(NanPattern<Float64>)","parent":{"krate":0,"index":2143},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2157},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/assert_expr.rs","byte_start":13457972,"byte_end":13457976,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"V128","qualname":"::ast::assert_expr::AssertExpression::V128","value":"AssertExpression::V128(V128Pattern)","parent":{"krate":0,"index":2143},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2160},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/assert_expr.rs","byte_start":13457996,"byte_end":13458003,"line_start":20,"line_end":20,"column_start":5,"column_end":12},"name":"RefNull","qualname":"::ast::assert_expr::AssertExpression::RefNull","value":"AssertExpression::RefNull(Option<HeapType>)","parent":{"krate":0,"index":2143},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2163},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/assert_expr.rs","byte_start":13458031,"byte_end":13458040,"line_start":21,"line_end":21,"column_start":5,"column_end":14},"name":"RefExtern","qualname":"::ast::assert_expr::AssertExpression::RefExtern","value":"AssertExpression::RefExtern(u32)","parent":{"krate":0,"index":2143},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2166},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/assert_expr.rs","byte_start":13458051,"byte_end":13458058,"line_start":22,"line_end":22,"column_start":5,"column_end":12},"name":"RefFunc","qualname":"::ast::assert_expr::AssertExpression::RefFunc","value":"AssertExpression::RefFunc(Option<Index>)","parent":{"krate":0,"index":2143},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2169},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/assert_expr.rs","byte_start":13458150,"byte_end":13458169,"line_start":25,"line_end":25,"column_start":5,"column_end":24},"name":"LegacyArithmeticNaN","qualname":"::ast::assert_expr::AssertExpression::LegacyArithmeticNaN","value":"AssertExpression::LegacyArithmeticNaN","parent":{"krate":0,"index":2143},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2171},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/assert_expr.rs","byte_start":13458239,"byte_end":13458257,"line_start":27,"line_end":27,"column_start":5,"column_end":23},"name":"LegacyCanonicalNaN","qualname":"::ast::assert_expr::AssertExpression::LegacyCanonicalNaN","value":"AssertExpression::LegacyCanonicalNaN","parent":{"krate":0,"index":2143},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2143},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/assert_expr.rs","byte_start":13457857,"byte_end":13457873,"line_start":13,"line_end":13,"column_start":10,"column_end":26},"name":"AssertExpression","qualname":"::ast::assert_expr::AssertExpression","value":"pub enum AssertExpression<'a> {\n    I32(i32),\n    I64(i64),\n    F32(NanPattern<Float32>),\n    F64(NanPattern<Float64>),\n    V128(V128Pattern),\n    RefNull(Option<HeapType>),\n    RefExtern(u32),\n    RefFunc(Option<Index>),\n    LegacyArithmeticNaN,\n    LegacyCanonicalNaN,\n}","parent":null,"children":[{"krate":0,"index":2145},{"krate":0,"index":2148},{"krate":0,"index":2151},{"krate":0,"index":2154},{"krate":0,"index":2157},{"krate":0,"index":2160},{"krate":0,"index":2163},{"krate":0,"index":2166},{"krate":0,"index":2169},{"krate":0,"index":2171}],"decl_id":null,"docs":" An expression that is valid inside an `assert_return` directive.","sig":null,"attributes":[{"value":"/ An expression that is valid inside an `assert_return` directive.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/assert_expr.rs","byte_start":13457339,"byte_end":13457407,"line_start":4,"line_end":4,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/assert_expr.rs","byte_start":13457408,"byte_end":13457411,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ As of https://github.com/WebAssembly/spec/pull/1104, spec tests may include `assert_return`","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/assert_expr.rs","byte_start":13457412,"byte_end":13457507,"line_start":6,"line_end":6,"column_start":1,"column_end":96}},{"value":"/ directives that allow NaN patterns (`\"nan:canonical\"`, `\"nan:arithmetic\"`). Parsing an","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/assert_expr.rs","byte_start":13457508,"byte_end":13457598,"line_start":7,"line_end":7,"column_start":1,"column_end":91}},{"value":"/ `AssertExpression` means that:","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/assert_expr.rs","byte_start":13457599,"byte_end":13457633,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"/ - only constant values (e.g. `i32.const 4`) are used in the `assert_return` directive","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/assert_expr.rs","byte_start":13457634,"byte_end":13457723,"line_start":9,"line_end":9,"column_start":1,"column_end":90}},{"value":"/ - the NaN patterns are allowed (they are not allowed in regular `Expression`s).","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/assert_expr.rs","byte_start":13457724,"byte_end":13457807,"line_start":10,"line_end":10,"column_start":1,"column_end":84}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/assert_expr.rs","byte_start":13457825,"byte_end":13457847,"line_start":12,"line_end":12,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2178},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/assert_expr.rs","byte_start":13459388,"byte_end":13459400,"line_start":55,"line_end":55,"column_start":5,"column_end":17},"name":"CanonicalNan","qualname":"::ast::assert_expr::NanPattern::CanonicalNan","value":"NanPattern::CanonicalNan","parent":{"krate":0,"index":2176},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2180},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/assert_expr.rs","byte_start":13459406,"byte_end":13459419,"line_start":56,"line_end":56,"column_start":5,"column_end":18},"name":"ArithmeticNan","qualname":"::ast::assert_expr::NanPattern::ArithmeticNan","value":"NanPattern::ArithmeticNan","parent":{"krate":0,"index":2176},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2182},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/assert_expr.rs","byte_start":13459425,"byte_end":13459430,"line_start":57,"line_end":57,"column_start":5,"column_end":10},"name":"Value","qualname":"::ast::assert_expr::NanPattern::Value","value":"NanPattern::Value(T)","parent":{"krate":0,"index":2176},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2176},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/assert_expr.rs","byte_start":13459368,"byte_end":13459378,"line_start":54,"line_end":54,"column_start":10,"column_end":20},"name":"NanPattern","qualname":"::ast::assert_expr::NanPattern","value":"pub enum NanPattern<T> { CanonicalNan, ArithmeticNan, Value(T), }","parent":null,"children":[{"krate":0,"index":2178},{"krate":0,"index":2180},{"krate":0,"index":2182}],"decl_id":null,"docs":" Either a NaN pattern (`nan:canonical`, `nan:arithmetic`) or a value of type `T`.\n","sig":null,"attributes":[{"value":"/ Either a NaN pattern (`nan:canonical`, `nan:arithmetic`) or a value of type `T`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/assert_expr.rs","byte_start":13459223,"byte_end":13459307,"line_start":51,"line_end":51,"column_start":1,"column_end":85}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/assert_expr.rs","byte_start":13459336,"byte_end":13459358,"line_start":53,"line_end":53,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2195},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/assert_expr.rs","byte_start":13460246,"byte_end":13460251,"line_start":85,"line_end":85,"column_start":5,"column_end":10},"name":"I8x16","qualname":"::ast::assert_expr::V128Pattern::I8x16","value":"V128Pattern::I8x16([i8; ])","parent":{"krate":0,"index":2194},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2199},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/assert_expr.rs","byte_start":13460267,"byte_end":13460272,"line_start":86,"line_end":86,"column_start":5,"column_end":10},"name":"I16x8","qualname":"::ast::assert_expr::V128Pattern::I16x8","value":"V128Pattern::I16x8([i16; ])","parent":{"krate":0,"index":2194},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2203},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/assert_expr.rs","byte_start":13460288,"byte_end":13460293,"line_start":87,"line_end":87,"column_start":5,"column_end":10},"name":"I32x4","qualname":"::ast::assert_expr::V128Pattern::I32x4","value":"V128Pattern::I32x4([i32; ])","parent":{"krate":0,"index":2194},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2207},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/assert_expr.rs","byte_start":13460309,"byte_end":13460314,"line_start":88,"line_end":88,"column_start":5,"column_end":10},"name":"I64x2","qualname":"::ast::assert_expr::V128Pattern::I64x2","value":"V128Pattern::I64x2([i64; ])","parent":{"krate":0,"index":2194},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2211},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/assert_expr.rs","byte_start":13460330,"byte_end":13460335,"line_start":89,"line_end":89,"column_start":5,"column_end":10},"name":"F32x4","qualname":"::ast::assert_expr::V128Pattern::F32x4","value":"V128Pattern::F32x4([NanPattern<Float32>; ])","parent":{"krate":0,"index":2194},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2215},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/assert_expr.rs","byte_start":13460367,"byte_end":13460372,"line_start":90,"line_end":90,"column_start":5,"column_end":10},"name":"F64x2","qualname":"::ast::assert_expr::V128Pattern::F64x2","value":"V128Pattern::F64x2([NanPattern<Float64>; ])","parent":{"krate":0,"index":2194},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2194},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/assert_expr.rs","byte_start":13460228,"byte_end":13460239,"line_start":84,"line_end":84,"column_start":10,"column_end":21},"name":"V128Pattern","qualname":"::ast::assert_expr::V128Pattern","value":"pub enum V128Pattern {\n    I8x16([i8; ]),\n    I16x8([i16; ]),\n    I32x4([i32; ]),\n    I64x2([i64; ]),\n    F32x4([NanPattern<Float32>; ]),\n    F64x2([NanPattern<Float64>; ]),\n}","parent":null,"children":[{"krate":0,"index":2195},{"krate":0,"index":2199},{"krate":0,"index":2203},{"krate":0,"index":2207},{"krate":0,"index":2211},{"krate":0,"index":2215}],"decl_id":null,"docs":" A version of `V128Const` that allows `NanPattern`s.","sig":null,"attributes":[{"value":"/ A version of `V128Const` that allows `NanPattern`s.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/assert_expr.rs","byte_start":13459957,"byte_end":13460012,"line_start":78,"line_end":78,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/assert_expr.rs","byte_start":13460013,"byte_end":13460016,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ This implementation is necessary because only float types can include NaN patterns; otherwise","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/assert_expr.rs","byte_start":13460017,"byte_end":13460114,"line_start":80,"line_end":80,"column_start":1,"column_end":98}},{"value":"/ it is largely similar to the implementation of `V128Const`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/assert_expr.rs","byte_start":13460115,"byte_end":13460178,"line_start":81,"line_end":81,"column_start":1,"column_end":64}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/assert_expr.rs","byte_start":13460196,"byte_end":13460218,"line_start":83,"line_end":83,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":2221},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/custom.rs","byte_start":13462654,"byte_end":13462660,"line_start":6,"line_end":6,"column_start":12,"column_end":18},"name":"Custom","qualname":"::ast::custom::Custom","value":"Custom { span, name, place, data }","parent":null,"children":[{"krate":0,"index":2223},{"krate":0,"index":2224},{"krate":0,"index":2225},{"krate":0,"index":2226}],"decl_id":null,"docs":" A wasm custom section within a module.\n","sig":null,"attributes":[{"value":"/ A wasm custom section within a module.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/custom.rs","byte_start":13462583,"byte_end":13462625,"line_start":4,"line_end":4,"column_start":1,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":2223},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/custom.rs","byte_start":13462717,"byte_end":13462721,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::custom::Custom::span","value":"ast::token::Span","parent":{"krate":0,"index":2221},"children":[],"decl_id":null,"docs":" Where this `@custom` was defined.\n","sig":null,"attributes":[{"value":"/ Where this `@custom` was defined.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/custom.rs","byte_start":13462671,"byte_end":13462708,"line_start":7,"line_end":7,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":2224},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/custom.rs","byte_start":13462779,"byte_end":13462783,"line_start":11,"line_end":11,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::custom::Custom::name","value":"&'a str","parent":{"krate":0,"index":2221},"children":[],"decl_id":null,"docs":" Name of the custom section.\n","sig":null,"attributes":[{"value":"/ Name of the custom section.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/custom.rs","byte_start":13462739,"byte_end":13462770,"line_start":10,"line_end":10,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":2225},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/custom.rs","byte_start":13462853,"byte_end":13462858,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"place","qualname":"::ast::custom::Custom::place","value":"ast::custom::CustomPlace","parent":{"krate":0,"index":2221},"children":[],"decl_id":null,"docs":" Where the custom section is being placed,\n","sig":null,"attributes":[{"value":"/ Where the custom section is being placed,","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/custom.rs","byte_start":13462799,"byte_end":13462844,"line_start":13,"line_end":13,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":2226},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/custom.rs","byte_start":13462922,"byte_end":13462926,"line_start":17,"line_end":17,"column_start":9,"column_end":13},"name":"data","qualname":"::ast::custom::Custom::data","value":"std::vec::Vec<&'a [u8]>","parent":{"krate":0,"index":2221},"children":[],"decl_id":null,"docs":" Payload of this custom section.\n","sig":null,"attributes":[{"value":"/ Payload of this custom section.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/custom.rs","byte_start":13462878,"byte_end":13462913,"line_start":16,"line_end":16,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2231},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/custom.rs","byte_start":13463160,"byte_end":13463171,"line_start":24,"line_end":24,"column_start":5,"column_end":16},"name":"BeforeFirst","qualname":"::ast::custom::CustomPlace::BeforeFirst","value":"CustomPlace::BeforeFirst","parent":{"krate":0,"index":2230},"children":[],"decl_id":null,"docs":" This custom section will appear before the first section in the module.\n","sig":null,"attributes":[{"value":"/ This custom section will appear before the first section in the module.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/custom.rs","byte_start":13463080,"byte_end":13463155,"line_start":23,"line_end":23,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2233},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/custom.rs","byte_start":13463249,"byte_end":13463255,"line_start":26,"line_end":26,"column_start":5,"column_end":11},"name":"Before","qualname":"::ast::custom::CustomPlace::Before","value":"CustomPlace::Before(CustomPlaceAnchor)","parent":{"krate":0,"index":2230},"children":[],"decl_id":null,"docs":" This custom section will be placed just before a known section.\n","sig":null,"attributes":[{"value":"/ This custom section will be placed just before a known section.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/custom.rs","byte_start":13463177,"byte_end":13463244,"line_start":25,"line_end":25,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2236},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/custom.rs","byte_start":13463351,"byte_end":13463356,"line_start":28,"line_end":28,"column_start":5,"column_end":10},"name":"After","qualname":"::ast::custom::CustomPlace::After","value":"CustomPlace::After(CustomPlaceAnchor)","parent":{"krate":0,"index":2230},"children":[],"decl_id":null,"docs":" This custom section will be placed just after a known section.\n","sig":null,"attributes":[{"value":"/ This custom section will be placed just after a known section.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/custom.rs","byte_start":13463280,"byte_end":13463346,"line_start":27,"line_end":27,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2239},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/custom.rs","byte_start":13463459,"byte_end":13463468,"line_start":30,"line_end":30,"column_start":5,"column_end":14},"name":"AfterLast","qualname":"::ast::custom::CustomPlace::AfterLast","value":"CustomPlace::AfterLast","parent":{"krate":0,"index":2230},"children":[],"decl_id":null,"docs":" This custom section will appear after the last section in the module.\n","sig":null,"attributes":[{"value":"/ This custom section will appear after the last section in the module.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/custom.rs","byte_start":13463381,"byte_end":13463454,"line_start":29,"line_end":29,"column_start":5,"column_end":78}}]},{"kind":"Enum","id":{"krate":0,"index":2230},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/custom.rs","byte_start":13463062,"byte_end":13463073,"line_start":22,"line_end":22,"column_start":10,"column_end":21},"name":"CustomPlace","qualname":"::ast::custom::CustomPlace","value":"pub enum CustomPlace {\n    BeforeFirst,\n    Before(CustomPlaceAnchor),\n    After(CustomPlaceAnchor),\n    AfterLast,\n}","parent":null,"children":[{"krate":0,"index":2231},{"krate":0,"index":2233},{"krate":0,"index":2236},{"krate":0,"index":2239}],"decl_id":null,"docs":" Possible locations to place a custom section within a module.\n","sig":null,"attributes":[{"value":"/ Possible locations to place a custom section within a module.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/custom.rs","byte_start":13462946,"byte_end":13463011,"line_start":20,"line_end":20,"column_start":1,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2251},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/custom.rs","byte_start":13463637,"byte_end":13463641,"line_start":37,"line_end":37,"column_start":5,"column_end":9},"name":"Type","qualname":"::ast::custom::CustomPlaceAnchor::Type","value":"CustomPlaceAnchor::Type","parent":{"krate":0,"index":2250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2253},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/custom.rs","byte_start":13463647,"byte_end":13463653,"line_start":38,"line_end":38,"column_start":5,"column_end":11},"name":"Import","qualname":"::ast::custom::CustomPlaceAnchor::Import","value":"CustomPlaceAnchor::Import","parent":{"krate":0,"index":2250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2255},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/custom.rs","byte_start":13463659,"byte_end":13463665,"line_start":39,"line_end":39,"column_start":5,"column_end":11},"name":"Module","qualname":"::ast::custom::CustomPlaceAnchor::Module","value":"CustomPlaceAnchor::Module","parent":{"krate":0,"index":2250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2257},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/custom.rs","byte_start":13463671,"byte_end":13463679,"line_start":40,"line_end":40,"column_start":5,"column_end":13},"name":"Instance","qualname":"::ast::custom::CustomPlaceAnchor::Instance","value":"CustomPlaceAnchor::Instance","parent":{"krate":0,"index":2250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2259},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/custom.rs","byte_start":13463685,"byte_end":13463690,"line_start":41,"line_end":41,"column_start":5,"column_end":10},"name":"Alias","qualname":"::ast::custom::CustomPlaceAnchor::Alias","value":"CustomPlaceAnchor::Alias","parent":{"krate":0,"index":2250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2261},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/custom.rs","byte_start":13463696,"byte_end":13463700,"line_start":42,"line_end":42,"column_start":5,"column_end":9},"name":"Func","qualname":"::ast::custom::CustomPlaceAnchor::Func","value":"CustomPlaceAnchor::Func","parent":{"krate":0,"index":2250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2263},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/custom.rs","byte_start":13463706,"byte_end":13463711,"line_start":43,"line_end":43,"column_start":5,"column_end":10},"name":"Table","qualname":"::ast::custom::CustomPlaceAnchor::Table","value":"CustomPlaceAnchor::Table","parent":{"krate":0,"index":2250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2265},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/custom.rs","byte_start":13463717,"byte_end":13463723,"line_start":44,"line_end":44,"column_start":5,"column_end":11},"name":"Memory","qualname":"::ast::custom::CustomPlaceAnchor::Memory","value":"CustomPlaceAnchor::Memory","parent":{"krate":0,"index":2250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2267},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/custom.rs","byte_start":13463729,"byte_end":13463735,"line_start":45,"line_end":45,"column_start":5,"column_end":11},"name":"Global","qualname":"::ast::custom::CustomPlaceAnchor::Global","value":"CustomPlaceAnchor::Global","parent":{"krate":0,"index":2250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2269},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/custom.rs","byte_start":13463741,"byte_end":13463747,"line_start":46,"line_end":46,"column_start":5,"column_end":11},"name":"Export","qualname":"::ast::custom::CustomPlaceAnchor::Export","value":"CustomPlaceAnchor::Export","parent":{"krate":0,"index":2250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2271},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/custom.rs","byte_start":13463753,"byte_end":13463758,"line_start":47,"line_end":47,"column_start":5,"column_end":10},"name":"Start","qualname":"::ast::custom::CustomPlaceAnchor::Start","value":"CustomPlaceAnchor::Start","parent":{"krate":0,"index":2250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2273},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/custom.rs","byte_start":13463764,"byte_end":13463768,"line_start":48,"line_end":48,"column_start":5,"column_end":9},"name":"Elem","qualname":"::ast::custom::CustomPlaceAnchor::Elem","value":"CustomPlaceAnchor::Elem","parent":{"krate":0,"index":2250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2275},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/custom.rs","byte_start":13463774,"byte_end":13463778,"line_start":49,"line_end":49,"column_start":5,"column_end":9},"name":"Code","qualname":"::ast::custom::CustomPlaceAnchor::Code","value":"CustomPlaceAnchor::Code","parent":{"krate":0,"index":2250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2277},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/custom.rs","byte_start":13463784,"byte_end":13463788,"line_start":50,"line_end":50,"column_start":5,"column_end":9},"name":"Data","qualname":"::ast::custom::CustomPlaceAnchor::Data","value":"CustomPlaceAnchor::Data","parent":{"krate":0,"index":2250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2279},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/custom.rs","byte_start":13463794,"byte_end":13463799,"line_start":51,"line_end":51,"column_start":5,"column_end":10},"name":"Event","qualname":"::ast::custom::CustomPlaceAnchor::Event","value":"CustomPlaceAnchor::Event","parent":{"krate":0,"index":2250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2250},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/custom.rs","byte_start":13463613,"byte_end":13463630,"line_start":36,"line_end":36,"column_start":10,"column_end":27},"name":"CustomPlaceAnchor","qualname":"::ast::custom::CustomPlaceAnchor","value":"pub enum CustomPlaceAnchor {\n    Type,\n    Import,\n    Module,\n    Instance,\n    Alias,\n    Func,\n    Table,\n    Memory,\n    Global,\n    Export,\n    Start,\n    Elem,\n    Code,\n    Data,\n    Event,\n}","parent":null,"children":[{"krate":0,"index":2251},{"krate":0,"index":2253},{"krate":0,"index":2255},{"krate":0,"index":2257},{"krate":0,"index":2259},{"krate":0,"index":2261},{"krate":0,"index":2263},{"krate":0,"index":2265},{"krate":0,"index":2267},{"krate":0,"index":2269},{"krate":0,"index":2271},{"krate":0,"index":2273},{"krate":0,"index":2275},{"krate":0,"index":2277},{"krate":0,"index":2279}],"decl_id":null,"docs":" Known sections that custom sections can be placed relative to.\n","sig":null,"attributes":[{"value":"/ Known sections that custom sections can be placed relative to.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/custom.rs","byte_start":13463473,"byte_end":13463539,"line_start":33,"line_end":33,"column_start":1,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/custom.rs","byte_start":13463581,"byte_end":13463603,"line_start":35,"line_end":35,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":2289},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/event.rs","byte_start":13467649,"byte_end":13467654,"line_start":6,"line_end":6,"column_start":12,"column_end":17},"name":"Event","qualname":"::ast::event::Event","value":"Event { span, id, exports, ty }","parent":null,"children":[{"krate":0,"index":2291},{"krate":0,"index":2292},{"krate":0,"index":2293},{"krate":0,"index":2294}],"decl_id":null,"docs":" A WebAssembly event directive, part of the exception handling proposal.\n","sig":null,"attributes":[{"value":"/ A WebAssembly event directive, part of the exception handling proposal.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/event.rs","byte_start":13467545,"byte_end":13467620,"line_start":4,"line_end":4,"column_start":1,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":2291},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/event.rs","byte_start":13467706,"byte_end":13467710,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::event::Event::span","value":"ast::token::Span","parent":{"krate":0,"index":2289},"children":[],"decl_id":null,"docs":" Where this event was defined\n","sig":null,"attributes":[{"value":"/ Where this event was defined","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/event.rs","byte_start":13467665,"byte_end":13467697,"line_start":7,"line_end":7,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":2292},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/event.rs","byte_start":13467808,"byte_end":13467810,"line_start":10,"line_end":10,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::event::Event::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":2289},"children":[],"decl_id":null,"docs":" An optional name by which to refer to this event in name resolution.\n","sig":null,"attributes":[{"value":"/ An optional name by which to refer to this event in name resolution.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/event.rs","byte_start":13467727,"byte_end":13467799,"line_start":9,"line_end":9,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":2293},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/event.rs","byte_start":13467892,"byte_end":13467899,"line_start":12,"line_end":12,"column_start":9,"column_end":16},"name":"exports","qualname":"::ast::event::Event::exports","value":"ast::export::InlineExport<'a>","parent":{"krate":0,"index":2289},"children":[],"decl_id":null,"docs":" Optional export directives for this event.\n","sig":null,"attributes":[{"value":"/ Optional export directives for this event.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/event.rs","byte_start":13467837,"byte_end":13467883,"line_start":11,"line_end":11,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":2294},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/event.rs","byte_start":13467975,"byte_end":13467977,"line_start":14,"line_end":14,"column_start":9,"column_end":11},"name":"ty","qualname":"::ast::event::Event::ty","value":"ast::event::EventType<'a>","parent":{"krate":0,"index":2289},"children":[],"decl_id":null,"docs":" The type of event that is defined.\n","sig":null,"attributes":[{"value":"/ The type of event that is defined.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/event.rs","byte_start":13467928,"byte_end":13467966,"line_start":13,"line_end":13,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2300},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/event.rs","byte_start":13468247,"byte_end":13468256,"line_start":22,"line_end":22,"column_start":5,"column_end":14},"name":"Exception","qualname":"::ast::event::EventType::Exception","value":"EventType::Exception(ast::TypeUse)","parent":{"krate":0,"index":2298},"children":[],"decl_id":null,"docs":" An exception event, where the payload is the type signature of the event\n (constructor parameters, etc).\n","sig":null,"attributes":[{"value":"/ An exception event, where the payload is the type signature of the event","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/event.rs","byte_start":13468127,"byte_end":13468203,"line_start":20,"line_end":20,"column_start":5,"column_end":81}},{"value":"/ (constructor parameters, etc).","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/event.rs","byte_start":13468208,"byte_end":13468242,"line_start":21,"line_end":21,"column_start":5,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":2298},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/event.rs","byte_start":13468107,"byte_end":13468116,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"name":"EventType","qualname":"::ast::event::EventType","value":"pub enum EventType<'a> { Exception(ast::TypeUse), }","parent":null,"children":[{"krate":0,"index":2300}],"decl_id":null,"docs":" Listing of various types of events that can be defined in a wasm module.\n","sig":null,"attributes":[{"value":"/ Listing of various types of events that can be defined in a wasm module.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/event.rs","byte_start":13467997,"byte_end":13468073,"line_start":17,"line_end":17,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":2309},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/export.rs","byte_start":13468974,"byte_end":13468980,"line_start":6,"line_end":6,"column_start":12,"column_end":18},"name":"Export","qualname":"::ast::export::Export","value":"Export { span, name, index }","parent":null,"children":[{"krate":0,"index":2311},{"krate":0,"index":2312},{"krate":0,"index":2313}],"decl_id":null,"docs":" A entry in a WebAssembly module's export section.\n","sig":null,"attributes":[{"value":"/ A entry in a WebAssembly module's export section.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/export.rs","byte_start":13468892,"byte_end":13468945,"line_start":4,"line_end":4,"column_start":1,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2311},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/export.rs","byte_start":13469034,"byte_end":13469038,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::export::Export::span","value":"ast::token::Span","parent":{"krate":0,"index":2309},"children":[],"decl_id":null,"docs":" Where this export was defined.\n","sig":null,"attributes":[{"value":"/ Where this export was defined.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/export.rs","byte_start":13468991,"byte_end":13469025,"line_start":7,"line_end":7,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":2312},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/export.rs","byte_start":13469108,"byte_end":13469112,"line_start":10,"line_end":10,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::export::Export::name","value":"&'a str","parent":{"krate":0,"index":2309},"children":[],"decl_id":null,"docs":" The name of this export from the module.\n","sig":null,"attributes":[{"value":"/ The name of this export from the module.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/export.rs","byte_start":13469055,"byte_end":13469099,"line_start":9,"line_end":9,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":2313},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/export.rs","byte_start":13469178,"byte_end":13469183,"line_start":12,"line_end":12,"column_start":9,"column_end":14},"name":"index","qualname":"::ast::export::Export::index","value":"ast::token::ItemRef<'a, ast::export::ExportKind>","parent":{"krate":0,"index":2309},"children":[],"decl_id":null,"docs":" What's being exported from the module.\n","sig":null,"attributes":[{"value":"/ What's being exported from the module.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/export.rs","byte_start":13469127,"byte_end":13469169,"line_start":11,"line_end":11,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2318},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/export.rs","byte_start":13469430,"byte_end":13469434,"line_start":20,"line_end":20,"column_start":5,"column_end":9},"name":"Func","qualname":"::ast::export::ExportKind::Func","value":"ExportKind::Func","parent":{"krate":0,"index":2317},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2320},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/export.rs","byte_start":13469440,"byte_end":13469445,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"name":"Table","qualname":"::ast::export::ExportKind::Table","value":"ExportKind::Table","parent":{"krate":0,"index":2317},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2322},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/export.rs","byte_start":13469451,"byte_end":13469457,"line_start":22,"line_end":22,"column_start":5,"column_end":11},"name":"Memory","qualname":"::ast::export::ExportKind::Memory","value":"ExportKind::Memory","parent":{"krate":0,"index":2317},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2324},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/export.rs","byte_start":13469463,"byte_end":13469469,"line_start":23,"line_end":23,"column_start":5,"column_end":11},"name":"Global","qualname":"::ast::export::ExportKind::Global","value":"ExportKind::Global","parent":{"krate":0,"index":2317},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2326},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/export.rs","byte_start":13469475,"byte_end":13469480,"line_start":24,"line_end":24,"column_start":5,"column_end":10},"name":"Event","qualname":"::ast::export::ExportKind::Event","value":"ExportKind::Event","parent":{"krate":0,"index":2317},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2328},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/export.rs","byte_start":13469486,"byte_end":13469492,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"Module","qualname":"::ast::export::ExportKind::Module","value":"ExportKind::Module","parent":{"krate":0,"index":2317},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2330},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/export.rs","byte_start":13469498,"byte_end":13469506,"line_start":26,"line_end":26,"column_start":5,"column_end":13},"name":"Instance","qualname":"::ast::export::ExportKind::Instance","value":"ExportKind::Instance","parent":{"krate":0,"index":2317},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2332},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/export.rs","byte_start":13469512,"byte_end":13469516,"line_start":27,"line_end":27,"column_start":5,"column_end":9},"name":"Type","qualname":"::ast::export::ExportKind::Type","value":"ExportKind::Type","parent":{"krate":0,"index":2317},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2317},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/export.rs","byte_start":13469413,"byte_end":13469423,"line_start":19,"line_end":19,"column_start":10,"column_end":20},"name":"ExportKind","qualname":"::ast::export::ExportKind","value":"pub enum ExportKind {\n    Func,\n    Table,\n    Memory,\n    Global,\n    Event,\n    Module,\n    Instance,\n    Type,\n}","parent":null,"children":[{"krate":0,"index":2318},{"krate":0,"index":2320},{"krate":0,"index":2322},{"krate":0,"index":2324},{"krate":0,"index":2326},{"krate":0,"index":2328},{"krate":0,"index":2330},{"krate":0,"index":2332}],"decl_id":null,"docs":" Different kinds of elements that can be exported from a WebAssembly module,\n contained in an [`Export`].\n","sig":null,"attributes":[{"value":"/ Different kinds of elements that can be exported from a WebAssembly module,","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/export.rs","byte_start":13469218,"byte_end":13469297,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ contained in an [`Export`].","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/export.rs","byte_start":13469298,"byte_end":13469329,"line_start":16,"line_end":16,"column_start":1,"column_end":32}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/export.rs","byte_start":13469381,"byte_end":13469403,"line_start":18,"line_end":18,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":2380},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/export.rs","byte_start":13471609,"byte_end":13471621,"line_start":103,"line_end":103,"column_start":12,"column_end":24},"name":"InlineExport","qualname":"::ast::export::InlineExport","value":"InlineExport { names }","parent":null,"children":[{"krate":0,"index":2382}],"decl_id":null,"docs":" A listing of inline `(export \"foo\")` statements on a WebAssembly item in\n its textual format.\n","sig":null,"attributes":[{"value":"/ A listing of inline `(export \"foo\")` statements on a WebAssembly item in","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/export.rs","byte_start":13471480,"byte_end":13471556,"line_start":100,"line_end":100,"column_start":1,"column_end":77}},{"value":"/ its textual format.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/export.rs","byte_start":13471557,"byte_end":13471580,"line_start":101,"line_end":101,"column_start":1,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":2382},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/export.rs","byte_start":13471690,"byte_end":13471695,"line_start":105,"line_end":105,"column_start":9,"column_end":14},"name":"names","qualname":"::ast::export::InlineExport::names","value":"std::vec::Vec<&'a str>","parent":{"krate":0,"index":2380},"children":[],"decl_id":null,"docs":" The extra names to export an item as, if any.\n","sig":null,"attributes":[{"value":"/ The extra names to export an item as, if any.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/export.rs","byte_start":13471632,"byte_end":13471681,"line_start":104,"line_end":104,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":2386},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13473110,"byte_end":13473120,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"Expression","qualname":"::ast::expr::Expression","value":"Expression { instrs }","parent":null,"children":[{"krate":0,"index":2388}],"decl_id":null,"docs":" An expression, or a list of instructions, in the WebAssembly text format.","sig":null,"attributes":[{"value":"/ An expression, or a list of instructions, in the WebAssembly text format.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13472746,"byte_end":13472823,"line_start":5,"line_end":5,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13472824,"byte_end":13472827,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This expression type will parse s-expression-folded instructions into a flat","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13472828,"byte_end":13472908,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ list of instructions for emission later on. The implicit `end` instruction","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13472909,"byte_end":13472987,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ at the end of an expression is not included in the `instrs` field.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13472988,"byte_end":13473058,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13473076,"byte_end":13473098,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":2388},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13473135,"byte_end":13473141,"line_start":13,"line_end":13,"column_start":9,"column_end":15},"name":"instrs","qualname":"::ast::expr::Expression::instrs","value":"std::boxed::Box<[ast::expr::Instruction<'a>]>","parent":{"krate":0,"index":2386},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5744},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13524216,"byte_end":13524225,"line_start":1099,"line_end":1099,"column_start":12,"column_end":21},"name":"BlockType","qualname":"::ast::expr::BlockType","value":"BlockType { label, ty }","parent":null,"children":[{"krate":0,"index":5746},{"krate":0,"index":5747}],"decl_id":null,"docs":" Extra information associated with block-related instructions.","sig":null,"attributes":[{"value":"/ Extra information associated with block-related instructions.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13524001,"byte_end":13524066,"line_start":1093,"line_end":1093,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13524067,"byte_end":13524070,"line_start":1094,"line_end":1094,"column_start":1,"column_end":4}},{"value":"/ This is used to label blocks and also annotate what types are expected for","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13524071,"byte_end":13524149,"line_start":1095,"line_end":1095,"column_start":1,"column_end":79}},{"value":"/ the block.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13524150,"byte_end":13524164,"line_start":1096,"line_end":1096,"column_start":1,"column_end":15}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13524182,"byte_end":13524204,"line_start":1098,"line_end":1098,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":5746},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13524240,"byte_end":13524245,"line_start":1100,"line_end":1100,"column_start":9,"column_end":14},"name":"label","qualname":"::ast::expr::BlockType::label","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":5744},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5747},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13524276,"byte_end":13524278,"line_start":1101,"line_end":1101,"column_start":9,"column_end":11},"name":"ty","qualname":"::ast::expr::BlockType::ty","value":"ast::types::TypeUse<'a, ast::types::FunctionType<'a>>","parent":{"krate":0,"index":5744},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5751},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13524733,"byte_end":13524745,"line_start":1118,"line_end":1118,"column_start":12,"column_end":24},"name":"FuncBindType","qualname":"::ast::expr::FuncBindType","value":"FuncBindType { ty }","parent":null,"children":[{"krate":0,"index":5753}],"decl_id":null,"docs":" Extra information associated with the func.bind instruction.\n","sig":null,"attributes":[{"value":"/ Extra information associated with the func.bind instruction.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13524617,"byte_end":13524681,"line_start":1115,"line_end":1115,"column_start":1,"column_end":65}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13524699,"byte_end":13524721,"line_start":1117,"line_end":1117,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":5753},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13524760,"byte_end":13524762,"line_start":1119,"line_end":1119,"column_start":9,"column_end":11},"name":"ty","qualname":"::ast::expr::FuncBindType::ty","value":"ast::types::TypeUse<'a, ast::types::FunctionType<'a>>","parent":{"krate":0,"index":5751},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5757},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13525181,"byte_end":13525188,"line_start":1135,"line_end":1135,"column_start":12,"column_end":19},"name":"LetType","qualname":"::ast::expr::LetType","value":"LetType { block, locals }","parent":null,"children":[{"krate":0,"index":5759},{"krate":0,"index":5760}],"decl_id":null,"docs":" Extra information associated with the let instruction.\n","sig":null,"attributes":[{"value":"/ Extra information associated with the let instruction.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13525071,"byte_end":13525129,"line_start":1132,"line_end":1132,"column_start":1,"column_end":59}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13525147,"byte_end":13525169,"line_start":1134,"line_end":1134,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":5759},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13525203,"byte_end":13525208,"line_start":1136,"line_end":1136,"column_start":9,"column_end":14},"name":"block","qualname":"::ast::expr::LetType::block","value":"ast::expr::BlockType<'a>","parent":{"krate":0,"index":5757},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5760},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13525233,"byte_end":13525239,"line_start":1137,"line_end":1137,"column_start":9,"column_end":15},"name":"locals","qualname":"::ast::expr::LetType::locals","value":"std::vec::Vec<ast::func::Local<'a>>","parent":{"krate":0,"index":5757},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5764},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13525605,"byte_end":13525619,"line_start":1152,"line_end":1152,"column_start":12,"column_end":26},"name":"BrTableIndices","qualname":"::ast::expr::BrTableIndices","value":"BrTableIndices { labels, default }","parent":null,"children":[{"krate":0,"index":5766},{"krate":0,"index":5767}],"decl_id":null,"docs":" Extra information associated with the `br_table` instruction.\n","sig":null,"attributes":[{"value":"/ Extra information associated with the `br_table` instruction.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13525488,"byte_end":13525553,"line_start":1149,"line_end":1149,"column_start":1,"column_end":66}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13525554,"byte_end":13525576,"line_start":1150,"line_end":1150,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":5766},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13525634,"byte_end":13525640,"line_start":1153,"line_end":1153,"column_start":9,"column_end":15},"name":"labels","qualname":"::ast::expr::BrTableIndices::labels","value":"std::vec::Vec<ast::token::Index<'a>>","parent":{"krate":0,"index":5764},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5767},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13525671,"byte_end":13525678,"line_start":1154,"line_end":1154,"column_start":9,"column_end":16},"name":"default","qualname":"::ast::expr::BrTableIndices::default","value":"ast::token::Index<'a>","parent":{"krate":0,"index":5764},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5771},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13526164,"byte_end":13526171,"line_start":1171,"line_end":1171,"column_start":12,"column_end":19},"name":"LaneArg","qualname":"::ast::expr::LaneArg","value":"LaneArg { lane }","parent":null,"children":[{"krate":0,"index":5772}],"decl_id":null,"docs":" Payload for lane-related instructions. Unsigned with no + prefix.\n","sig":null,"attributes":[{"value":"/ Payload for lane-related instructions. Unsigned with no + prefix.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13526066,"byte_end":13526135,"line_start":1169,"line_end":1169,"column_start":1,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":5772},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13526209,"byte_end":13526213,"line_start":1173,"line_end":1173,"column_start":9,"column_end":13},"name":"lane","qualname":"::ast::expr::LaneArg::lane","value":"u8","parent":{"krate":0,"index":5771},"children":[],"decl_id":null,"docs":" The lane argument.\n","sig":null,"attributes":[{"value":"/ The lane argument.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13526178,"byte_end":13526200,"line_start":1172,"line_end":1172,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":5775},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13527009,"byte_end":13527015,"line_start":1199,"line_end":1199,"column_start":12,"column_end":18},"name":"MemArg","qualname":"::ast::expr::MemArg","value":"MemArg { align, offset, memory }","parent":null,"children":[{"krate":0,"index":5777},{"krate":0,"index":5778},{"krate":0,"index":5779}],"decl_id":null,"docs":" Payload for memory-related instructions indicating offset/alignment of\n memory accesses.\n","sig":null,"attributes":[{"value":"/ Payload for memory-related instructions indicating offset/alignment of","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13526885,"byte_end":13526959,"line_start":1196,"line_end":1196,"column_start":1,"column_end":75}},{"value":"/ memory accesses.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13526960,"byte_end":13526980,"line_start":1197,"line_end":1197,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":5777},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13527174,"byte_end":13527179,"line_start":1204,"line_end":1204,"column_start":9,"column_end":14},"name":"align","qualname":"::ast::expr::MemArg::align","value":"u32","parent":{"krate":0,"index":5775},"children":[],"decl_id":null,"docs":" The alignment of this access.","sig":null,"attributes":[{"value":"/ The alignment of this access.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13527026,"byte_end":13527059,"line_start":1200,"line_end":1200,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13527064,"byte_end":13527067,"line_start":1201,"line_end":1201,"column_start":5,"column_end":8}},{"value":"/ This is not stored as a log, this is the actual alignment (e.g. 1, 2, 4,","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13527072,"byte_end":13527148,"line_start":1202,"line_end":1202,"column_start":5,"column_end":81}},{"value":"/ 8, etc).","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13527153,"byte_end":13527165,"line_start":1203,"line_end":1203,"column_start":5,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":5778},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13527239,"byte_end":13527245,"line_start":1206,"line_end":1206,"column_start":9,"column_end":15},"name":"offset","qualname":"::ast::expr::MemArg::offset","value":"u32","parent":{"krate":0,"index":5775},"children":[],"decl_id":null,"docs":" The offset, in bytes of this access.\n","sig":null,"attributes":[{"value":"/ The offset, in bytes of this access.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13527190,"byte_end":13527230,"line_start":1205,"line_end":1205,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":5779},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13527301,"byte_end":13527307,"line_start":1208,"line_end":1208,"column_start":9,"column_end":15},"name":"memory","qualname":"::ast::expr::MemArg::memory","value":"ast::token::ItemRef<'a, ast::kw::memory>","parent":{"krate":0,"index":5775},"children":[],"decl_id":null,"docs":" The memory index we're accessing\n","sig":null,"attributes":[{"value":"/ The memory index we're accessing","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13527256,"byte_end":13527292,"line_start":1207,"line_end":1207,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":5783},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13529440,"byte_end":13529455,"line_start":1271,"line_end":1271,"column_start":12,"column_end":27},"name":"LoadOrStoreLane","qualname":"::ast::expr::LoadOrStoreLane","value":"LoadOrStoreLane { memarg, lane }","parent":null,"children":[{"krate":0,"index":5785},{"krate":0,"index":5786}],"decl_id":null,"docs":" Extra data associated with the `loadN_lane` and `storeN_lane` instructions.\n","sig":null,"attributes":[{"value":"/ Extra data associated with the `loadN_lane` and `storeN_lane` instructions.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13529332,"byte_end":13529411,"line_start":1269,"line_end":1269,"column_start":1,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":5785},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13529520,"byte_end":13529526,"line_start":1273,"line_end":1273,"column_start":9,"column_end":15},"name":"memarg","qualname":"::ast::expr::LoadOrStoreLane::memarg","value":"ast::expr::MemArg<'a>","parent":{"krate":0,"index":5783},"children":[],"decl_id":null,"docs":" The memory argument for this instruction.\n","sig":null,"attributes":[{"value":"/ The memory argument for this instruction.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13529466,"byte_end":13529511,"line_start":1272,"line_end":1272,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":5786},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13529596,"byte_end":13529600,"line_start":1275,"line_end":1275,"column_start":9,"column_end":13},"name":"lane","qualname":"::ast::expr::LoadOrStoreLane::lane","value":"ast::expr::LaneArg","parent":{"krate":0,"index":5783},"children":[],"decl_id":null,"docs":" The lane argument for this instruction.\n","sig":null,"attributes":[{"value":"/ The lane argument for this instruction.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13529544,"byte_end":13529587,"line_start":1274,"line_end":1274,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":5790},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13529957,"byte_end":13529969,"line_start":1289,"line_end":1289,"column_start":12,"column_end":24},"name":"CallIndirect","qualname":"::ast::expr::CallIndirect","value":"CallIndirect { table, ty }","parent":null,"children":[{"krate":0,"index":5792},{"krate":0,"index":5793}],"decl_id":null,"docs":" Extra data associated with the `call_indirect` instruction.\n","sig":null,"attributes":[{"value":"/ Extra data associated with the `call_indirect` instruction.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13529865,"byte_end":13529928,"line_start":1287,"line_end":1287,"column_start":1,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":5792},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13530042,"byte_end":13530047,"line_start":1291,"line_end":1291,"column_start":9,"column_end":14},"name":"table","qualname":"::ast::expr::CallIndirect::table","value":"ast::token::ItemRef<'a, ast::kw::table>","parent":{"krate":0,"index":5790},"children":[],"decl_id":null,"docs":" The table that this call is going to be indexing.\n","sig":null,"attributes":[{"value":"/ The table that this call is going to be indexing.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13529980,"byte_end":13530033,"line_start":1290,"line_end":1290,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":5793},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13530162,"byte_end":13530164,"line_start":1293,"line_end":1293,"column_start":9,"column_end":11},"name":"ty","qualname":"::ast::expr::CallIndirect::ty","value":"ast::types::TypeUse<'a, ast::types::FunctionType<'a>>","parent":{"krate":0,"index":5790},"children":[],"decl_id":null,"docs":" Type type signature that this `call_indirect` instruction is using.\n","sig":null,"attributes":[{"value":"/ Type type signature that this `call_indirect` instruction is using.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13530082,"byte_end":13530153,"line_start":1292,"line_end":1292,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5797},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13531023,"byte_end":13531032,"line_start":1316,"line_end":1316,"column_start":12,"column_end":21},"name":"TableInit","qualname":"::ast::expr::TableInit","value":"TableInit { table, elem }","parent":null,"children":[{"krate":0,"index":5799},{"krate":0,"index":5800}],"decl_id":null,"docs":" Extra data associated with the `table.init` instruction\n","sig":null,"attributes":[{"value":"/ Extra data associated with the `table.init` instruction","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13530935,"byte_end":13530994,"line_start":1314,"line_end":1314,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":5799},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13531098,"byte_end":13531103,"line_start":1318,"line_end":1318,"column_start":9,"column_end":14},"name":"table","qualname":"::ast::expr::TableInit::table","value":"ast::token::ItemRef<'a, ast::kw::table>","parent":{"krate":0,"index":5797},"children":[],"decl_id":null,"docs":" The index of the table we're copying into.\n","sig":null,"attributes":[{"value":"/ The index of the table we're copying into.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13531043,"byte_end":13531089,"line_start":1317,"line_end":1317,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":5800},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13531211,"byte_end":13531215,"line_start":1320,"line_end":1320,"column_start":9,"column_end":13},"name":"elem","qualname":"::ast::expr::TableInit::elem","value":"ast::token::Index<'a>","parent":{"krate":0,"index":5797},"children":[],"decl_id":null,"docs":" The index of the element segment we're copying into a table.\n","sig":null,"attributes":[{"value":"/ The index of the element segment we're copying into a table.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13531138,"byte_end":13531202,"line_start":1319,"line_end":1319,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":5804},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13531836,"byte_end":13531845,"line_start":1339,"line_end":1339,"column_start":12,"column_end":21},"name":"TableCopy","qualname":"::ast::expr::TableCopy","value":"TableCopy { dst, src }","parent":null,"children":[{"krate":0,"index":5806},{"krate":0,"index":5807}],"decl_id":null,"docs":" Extra data associated with the `table.copy` instruction.\n","sig":null,"attributes":[{"value":"/ Extra data associated with the `table.copy` instruction.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13531747,"byte_end":13531807,"line_start":1337,"line_end":1337,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":5806},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13531917,"byte_end":13531920,"line_start":1341,"line_end":1341,"column_start":9,"column_end":12},"name":"dst","qualname":"::ast::expr::TableCopy::dst","value":"ast::token::ItemRef<'a, ast::kw::table>","parent":{"krate":0,"index":5804},"children":[],"decl_id":null,"docs":" The index of the destination table to copy into.\n","sig":null,"attributes":[{"value":"/ The index of the destination table to copy into.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13531856,"byte_end":13531908,"line_start":1340,"line_end":1340,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":5807},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13532011,"byte_end":13532014,"line_start":1343,"line_end":1343,"column_start":9,"column_end":12},"name":"src","qualname":"::ast::expr::TableCopy::src","value":"ast::token::ItemRef<'a, ast::kw::table>","parent":{"krate":0,"index":5804},"children":[],"decl_id":null,"docs":" The index of the source table to copy from.\n","sig":null,"attributes":[{"value":"/ The index of the source table to copy from.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13531955,"byte_end":13532002,"line_start":1342,"line_end":1342,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":5811},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13532583,"byte_end":13532591,"line_start":1361,"line_end":1361,"column_start":12,"column_end":20},"name":"TableArg","qualname":"::ast::expr::TableArg","value":"TableArg { dst }","parent":null,"children":[{"krate":0,"index":5813}],"decl_id":null,"docs":" Extra data associated with unary table instructions.\n","sig":null,"attributes":[{"value":"/ Extra data associated with unary table instructions.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13532498,"byte_end":13532554,"line_start":1359,"line_end":1359,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":5813},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13532647,"byte_end":13532650,"line_start":1363,"line_end":1363,"column_start":9,"column_end":12},"name":"dst","qualname":"::ast::expr::TableArg::dst","value":"ast::token::ItemRef<'a, ast::kw::table>","parent":{"krate":0,"index":5811},"children":[],"decl_id":null,"docs":" The index of the table argument.\n","sig":null,"attributes":[{"value":"/ The index of the table argument.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13532602,"byte_end":13532638,"line_start":1362,"line_end":1362,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":5817},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13533080,"byte_end":13533089,"line_start":1379,"line_end":1379,"column_start":12,"column_end":21},"name":"MemoryArg","qualname":"::ast::expr::MemoryArg","value":"MemoryArg { mem }","parent":null,"children":[{"krate":0,"index":5819}],"decl_id":null,"docs":" Extra data associated with unary memory instructions.\n","sig":null,"attributes":[{"value":"/ Extra data associated with unary memory instructions.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13532994,"byte_end":13533051,"line_start":1377,"line_end":1377,"column_start":1,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":5819},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13533143,"byte_end":13533146,"line_start":1381,"line_end":1381,"column_start":9,"column_end":12},"name":"mem","qualname":"::ast::expr::MemoryArg::mem","value":"ast::token::ItemRef<'a, ast::kw::memory>","parent":{"krate":0,"index":5817},"children":[],"decl_id":null,"docs":" The index of the memory space.\n","sig":null,"attributes":[{"value":"/ The index of the memory space.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13533100,"byte_end":13533134,"line_start":1380,"line_end":1380,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":5823},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13533583,"byte_end":13533593,"line_start":1397,"line_end":1397,"column_start":12,"column_end":22},"name":"MemoryInit","qualname":"::ast::expr::MemoryInit","value":"MemoryInit { data, mem }","parent":null,"children":[{"krate":0,"index":5825},{"krate":0,"index":5826}],"decl_id":null,"docs":" Extra data associated with the `memory.init` instruction\n","sig":null,"attributes":[{"value":"/ Extra data associated with the `memory.init` instruction","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13533494,"byte_end":13533554,"line_start":1395,"line_end":1395,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":5825},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13533673,"byte_end":13533677,"line_start":1399,"line_end":1399,"column_start":9,"column_end":13},"name":"data","qualname":"::ast::expr::MemoryInit::data","value":"ast::token::Index<'a>","parent":{"krate":0,"index":5823},"children":[],"decl_id":null,"docs":" The index of the data segment we're copying into memory.\n","sig":null,"attributes":[{"value":"/ The index of the data segment we're copying into memory.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13533604,"byte_end":13533664,"line_start":1398,"line_end":1398,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":5826},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13533755,"byte_end":13533758,"line_start":1401,"line_end":1401,"column_start":9,"column_end":12},"name":"mem","qualname":"::ast::expr::MemoryInit::mem","value":"ast::token::ItemRef<'a, ast::kw::memory>","parent":{"krate":0,"index":5823},"children":[],"decl_id":null,"docs":" The index of the memory we're copying into,\n","sig":null,"attributes":[{"value":"/ The index of the memory we're copying into,","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13533699,"byte_end":13533746,"line_start":1400,"line_end":1400,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":5830},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13534224,"byte_end":13534234,"line_start":1417,"line_end":1417,"column_start":12,"column_end":22},"name":"MemoryCopy","qualname":"::ast::expr::MemoryCopy","value":"MemoryCopy { src, dst }","parent":null,"children":[{"krate":0,"index":5832},{"krate":0,"index":5833}],"decl_id":null,"docs":" Extra data associated with the `memory.copy` instruction\n","sig":null,"attributes":[{"value":"/ Extra data associated with the `memory.copy` instruction","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13534135,"byte_end":13534195,"line_start":1415,"line_end":1415,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":5832},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13534301,"byte_end":13534304,"line_start":1419,"line_end":1419,"column_start":9,"column_end":12},"name":"src","qualname":"::ast::expr::MemoryCopy::src","value":"ast::token::ItemRef<'a, ast::kw::memory>","parent":{"krate":0,"index":5830},"children":[],"decl_id":null,"docs":" The index of the memory we're copying from.\n","sig":null,"attributes":[{"value":"/ The index of the memory we're copying from.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13534245,"byte_end":13534292,"line_start":1418,"line_end":1418,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":5833},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13534394,"byte_end":13534397,"line_start":1421,"line_end":1421,"column_start":9,"column_end":12},"name":"dst","qualname":"::ast::expr::MemoryCopy::dst","value":"ast::token::ItemRef<'a, ast::kw::memory>","parent":{"krate":0,"index":5830},"children":[],"decl_id":null,"docs":" The index of the memory we're copying to.\n","sig":null,"attributes":[{"value":"/ The index of the memory we're copying to.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13534340,"byte_end":13534385,"line_start":1420,"line_end":1420,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":5837},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13534979,"byte_end":13534991,"line_start":1439,"line_end":1439,"column_start":12,"column_end":24},"name":"StructAccess","qualname":"::ast::expr::StructAccess","value":"StructAccess { r#struct, field }","parent":null,"children":[{"krate":0,"index":5839},{"krate":0,"index":5840}],"decl_id":null,"docs":" Extra data associated with the `struct.get/set` instructions\n","sig":null,"attributes":[{"value":"/ Extra data associated with the `struct.get/set` instructions","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13534886,"byte_end":13534950,"line_start":1437,"line_end":1437,"column_start":1,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":5839},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13535060,"byte_end":13535068,"line_start":1441,"line_end":1441,"column_start":9,"column_end":17},"name":"r#struct","qualname":"::ast::expr::StructAccess::r#struct","value":"ast::token::Index<'a>","parent":{"krate":0,"index":5837},"children":[],"decl_id":null,"docs":" The index of the struct type we're accessing.\n","sig":null,"attributes":[{"value":"/ The index of the struct type we're accessing.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13535002,"byte_end":13535051,"line_start":1440,"line_end":1440,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":5840},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13535155,"byte_end":13535160,"line_start":1443,"line_end":1443,"column_start":9,"column_end":14},"name":"field","qualname":"::ast::expr::StructAccess::field","value":"ast::token::Index<'a>","parent":{"krate":0,"index":5837},"children":[],"decl_id":null,"docs":" The index of the field of the struct we're accessing\n","sig":null,"attributes":[{"value":"/ The index of the field of the struct we're accessing","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13535090,"byte_end":13535146,"line_start":1442,"line_end":1442,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":5844},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13535486,"byte_end":13535498,"line_start":1457,"line_end":1457,"column_start":12,"column_end":24},"name":"StructNarrow","qualname":"::ast::expr::StructNarrow","value":"StructNarrow { from, to }","parent":null,"children":[{"krate":0,"index":5846},{"krate":0,"index":5847}],"decl_id":null,"docs":" Extra data associated with the `struct.narrow` instruction\n","sig":null,"attributes":[{"value":"/ Extra data associated with the `struct.narrow` instruction","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13535395,"byte_end":13535457,"line_start":1455,"line_end":1455,"column_start":1,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":5846},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13535563,"byte_end":13535567,"line_start":1459,"line_end":1459,"column_start":9,"column_end":13},"name":"from","qualname":"::ast::expr::StructNarrow::from","value":"ast::types::ValType<'a>","parent":{"krate":0,"index":5844},"children":[],"decl_id":null,"docs":" The type of the struct we're casting from\n","sig":null,"attributes":[{"value":"/ The type of the struct we're casting from","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13535509,"byte_end":13535554,"line_start":1458,"line_end":1458,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":5847},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13535643,"byte_end":13535645,"line_start":1461,"line_end":1461,"column_start":9,"column_end":11},"name":"to","qualname":"::ast::expr::StructNarrow::to","value":"ast::types::ValType<'a>","parent":{"krate":0,"index":5844},"children":[],"decl_id":null,"docs":" The type of the struct we're casting to\n","sig":null,"attributes":[{"value":"/ The type of the struct we're casting to","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13535591,"byte_end":13535634,"line_start":1460,"line_end":1460,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5854},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13536014,"byte_end":13536019,"line_start":1478,"line_end":1478,"column_start":5,"column_end":10},"name":"I8x16","qualname":"::ast::expr::V128Const::I8x16","value":"V128Const::I8x16([i8; ])","parent":{"krate":0,"index":5853},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5858},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13536035,"byte_end":13536040,"line_start":1479,"line_end":1479,"column_start":5,"column_end":10},"name":"I16x8","qualname":"::ast::expr::V128Const::I16x8","value":"V128Const::I16x8([i16; ])","parent":{"krate":0,"index":5853},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5862},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13536056,"byte_end":13536061,"line_start":1480,"line_end":1480,"column_start":5,"column_end":10},"name":"I32x4","qualname":"::ast::expr::V128Const::I32x4","value":"V128Const::I32x4([i32; ])","parent":{"krate":0,"index":5853},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5866},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13536077,"byte_end":13536082,"line_start":1481,"line_end":1481,"column_start":5,"column_end":10},"name":"I64x2","qualname":"::ast::expr::V128Const::I64x2","value":"V128Const::I64x2([i64; ])","parent":{"krate":0,"index":5853},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5870},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13536098,"byte_end":13536103,"line_start":1482,"line_end":1482,"column_start":5,"column_end":10},"name":"F32x4","qualname":"::ast::expr::V128Const::F32x4","value":"V128Const::F32x4([ast::Float32; ])","parent":{"krate":0,"index":5853},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5874},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13536128,"byte_end":13536133,"line_start":1483,"line_end":1483,"column_start":5,"column_end":10},"name":"F64x2","qualname":"::ast::expr::V128Const::F64x2","value":"V128Const::F64x2([ast::Float64; ])","parent":{"krate":0,"index":5853},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5853},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13535998,"byte_end":13536007,"line_start":1477,"line_end":1477,"column_start":10,"column_end":19},"name":"V128Const","qualname":"::ast::expr::V128Const","value":"pub enum V128Const {\n    I8x16([i8; ]),\n    I16x8([i16; ]),\n    I32x4([i32; ]),\n    I64x2([i64; ]),\n    F32x4([ast::Float32; ]),\n    F64x2([ast::Float64; ]),\n}","parent":null,"children":[{"krate":0,"index":5854},{"krate":0,"index":5858},{"krate":0,"index":5862},{"krate":0,"index":5866},{"krate":0,"index":5870},{"krate":0,"index":5874}],"decl_id":null,"docs":" Different ways to specify a `v128.const` instruction\n","sig":null,"attributes":[{"value":"/ Different ways to specify a `v128.const` instruction","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13535875,"byte_end":13535931,"line_start":1473,"line_end":1473,"column_start":1,"column_end":57}},{"value":"rustfmt::skip","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13535949,"byte_end":13535965,"line_start":1475,"line_end":1475,"column_start":1,"column_end":17}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13535966,"byte_end":13535988,"line_start":1476,"line_end":1476,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":5878},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13536417,"byte_end":13536428,"line_start":1493,"line_end":1493,"column_start":12,"column_end":23},"name":"to_le_bytes","qualname":"<V128Const>::to_le_bytes","value":"pub fn to_le_bytes(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns the raw little-ended byte sequence used to represent this\n `v128` constant`","sig":null,"attributes":[{"value":"/ Returns the raw little-ended byte sequence used to represent this","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13536178,"byte_end":13536247,"line_start":1487,"line_end":1487,"column_start":5,"column_end":74}},{"value":"/ `v128` constant`","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13536252,"byte_end":13536272,"line_start":1488,"line_end":1488,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13536277,"byte_end":13536280,"line_start":1489,"line_end":1489,"column_start":5,"column_end":8}},{"value":"/ This is typically suitable for encoding as the payload of the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13536285,"byte_end":13536350,"line_start":1490,"line_end":1490,"column_start":5,"column_end":70}},{"value":"/ `v128.const` instruction.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13536355,"byte_end":13536384,"line_start":1491,"line_end":1491,"column_start":5,"column_end":34}},{"value":"rustfmt::skip","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13536389,"byte_end":13536405,"line_start":1492,"line_end":1492,"column_start":5,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":5880},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13541574,"byte_end":13541586,"line_start":1642,"line_end":1642,"column_start":12,"column_end":24},"name":"I8x16Shuffle","qualname":"::ast::expr::I8x16Shuffle","value":"I8x16Shuffle { lanes }","parent":null,"children":[{"krate":0,"index":5881}],"decl_id":null,"docs":" Lanes being shuffled in the `i8x16.shuffle` instruction\n","sig":null,"attributes":[{"value":"/ Lanes being shuffled in the `i8x16.shuffle` instruction","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13541486,"byte_end":13541545,"line_start":1640,"line_end":1640,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":5881},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13541624,"byte_end":13541629,"line_start":1644,"line_end":1644,"column_start":9,"column_end":14},"name":"lanes","qualname":"::ast::expr::I8x16Shuffle::lanes","value":"[u8; 16]","parent":{"krate":0,"index":5880},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13541593,"byte_end":13541615,"line_start":1643,"line_end":1643,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":5885},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13542412,"byte_end":13542423,"line_start":1674,"line_end":1674,"column_start":12,"column_end":23},"name":"SelectTypes","qualname":"::ast::expr::SelectTypes","value":"SelectTypes { tys }","parent":null,"children":[{"krate":0,"index":5887}],"decl_id":null,"docs":" Payload of the `select` instructions\n","sig":null,"attributes":[{"value":"/ Payload of the `select` instructions","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13542343,"byte_end":13542383,"line_start":1672,"line_end":1672,"column_start":1,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":5887},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13542465,"byte_end":13542468,"line_start":1676,"line_end":1676,"column_start":9,"column_end":12},"name":"tys","qualname":"::ast::expr::SelectTypes::tys","value":"std::option::Option<std::vec::Vec<ast::types::ValType<'a>>>","parent":{"krate":0,"index":5885},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13542434,"byte_end":13542456,"line_start":1675,"line_end":1675,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":5891},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13543096,"byte_end":13543103,"line_start":1700,"line_end":1700,"column_start":12,"column_end":19},"name":"BrOnExn","qualname":"::ast::expr::BrOnExn","value":"BrOnExn { label, exn }","parent":null,"children":[{"krate":0,"index":5893},{"krate":0,"index":5894}],"decl_id":null,"docs":" Payload of the `br_on_exn` instruction\n","sig":null,"attributes":[{"value":"/ Payload of the `br_on_exn` instruction","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13543002,"byte_end":13543044,"line_start":1697,"line_end":1697,"column_start":1,"column_end":43}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13543062,"byte_end":13543084,"line_start":1699,"line_end":1699,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":5893},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13543118,"byte_end":13543123,"line_start":1701,"line_end":1701,"column_start":9,"column_end":14},"name":"label","qualname":"::ast::expr::BrOnExn::label","value":"ast::token::Index<'a>","parent":{"krate":0,"index":5891},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5894},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13543149,"byte_end":13543152,"line_start":1702,"line_end":1702,"column_start":9,"column_end":12},"name":"exn","qualname":"::ast::expr::BrOnExn::exn","value":"ast::token::Index<'a>","parent":{"krate":0,"index":5891},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5898},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13543472,"byte_end":13543480,"line_start":1716,"line_end":1716,"column_start":12,"column_end":20},"name":"BrOnCast","qualname":"::ast::expr::BrOnCast","value":"BrOnCast { label, val, rtt }","parent":null,"children":[{"krate":0,"index":5900},{"krate":0,"index":5901},{"krate":0,"index":5902}],"decl_id":null,"docs":" Payload of the `br_on_cast` instruction\n","sig":null,"attributes":[{"value":"/ Payload of the `br_on_cast` instruction","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13543377,"byte_end":13543420,"line_start":1713,"line_end":1713,"column_start":1,"column_end":44}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13543438,"byte_end":13543460,"line_start":1715,"line_end":1715,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":5900},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13543495,"byte_end":13543500,"line_start":1717,"line_end":1717,"column_start":9,"column_end":14},"name":"label","qualname":"::ast::expr::BrOnCast::label","value":"ast::token::Index<'a>","parent":{"krate":0,"index":5898},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5901},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13543526,"byte_end":13543529,"line_start":1718,"line_end":1718,"column_start":9,"column_end":12},"name":"val","qualname":"::ast::expr::BrOnCast::val","value":"ast::types::HeapType<'a>","parent":{"krate":0,"index":5898},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5902},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13543553,"byte_end":13543556,"line_start":1719,"line_end":1719,"column_start":9,"column_end":12},"name":"rtt","qualname":"::ast::expr::BrOnCast::rtt","value":"ast::types::HeapType<'a>","parent":{"krate":0,"index":5898},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5906},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13543913,"byte_end":13543919,"line_start":1734,"line_end":1734,"column_start":12,"column_end":18},"name":"RTTSub","qualname":"::ast::expr::RTTSub","value":"RTTSub { depth, input_rtt, output_rtt }","parent":null,"children":[{"krate":0,"index":5908},{"krate":0,"index":5909},{"krate":0,"index":5910}],"decl_id":null,"docs":" Payload of the `rtt.sub` instruction\n","sig":null,"attributes":[{"value":"/ Payload of the `rtt.sub` instruction","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13543821,"byte_end":13543861,"line_start":1731,"line_end":1731,"column_start":1,"column_end":41}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13543879,"byte_end":13543901,"line_start":1733,"line_end":1733,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":5908},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13543934,"byte_end":13543939,"line_start":1735,"line_end":1735,"column_start":9,"column_end":14},"name":"depth","qualname":"::ast::expr::RTTSub::depth","value":"u32","parent":{"krate":0,"index":5906},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5909},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13543954,"byte_end":13543963,"line_start":1736,"line_end":1736,"column_start":9,"column_end":18},"name":"input_rtt","qualname":"::ast::expr::RTTSub::input_rtt","value":"ast::types::HeapType<'a>","parent":{"krate":0,"index":5906},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5910},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13543987,"byte_end":13543997,"line_start":1737,"line_end":1737,"column_start":9,"column_end":19},"name":"output_rtt","qualname":"::ast::expr::RTTSub::output_rtt","value":"ast::types::HeapType<'a>","parent":{"krate":0,"index":5906},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5914},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13544427,"byte_end":13544434,"line_start":1756,"line_end":1756,"column_start":12,"column_end":19},"name":"RefTest","qualname":"::ast::expr::RefTest","value":"RefTest { val, rtt }","parent":null,"children":[{"krate":0,"index":5916},{"krate":0,"index":5917}],"decl_id":null,"docs":" Payload of the `ref.test/cast` instruction\n","sig":null,"attributes":[{"value":"/ Payload of the `ref.test/cast` instruction","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13544329,"byte_end":13544375,"line_start":1753,"line_end":1753,"column_start":1,"column_end":47}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13544393,"byte_end":13544415,"line_start":1755,"line_end":1755,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":5916},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13544449,"byte_end":13544452,"line_start":1757,"line_end":1757,"column_start":9,"column_end":12},"name":"val","qualname":"::ast::expr::RefTest::val","value":"ast::types::HeapType<'a>","parent":{"krate":0,"index":5914},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5917},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13544476,"byte_end":13544479,"line_start":1758,"line_end":1758,"column_start":9,"column_end":12},"name":"rtt","qualname":"::ast::expr::RefTest::rtt","value":"ast::types::HeapType<'a>","parent":{"krate":0,"index":5914},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5921},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/func.rs","byte_start":13544921,"byte_end":13544925,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Func","qualname":"::ast::func::Func","value":"Func { span, id, name, exports, kind, ty }","parent":null,"children":[{"krate":0,"index":5923},{"krate":0,"index":5924},{"krate":0,"index":5925},{"krate":0,"index":5926},{"krate":0,"index":5927},{"krate":0,"index":5928}],"decl_id":null,"docs":" A WebAssembly function to be inserted into a module.","sig":null,"attributes":[{"value":"/ A WebAssembly function to be inserted into a module.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/func.rs","byte_start":13544771,"byte_end":13544827,"line_start":4,"line_end":4,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/func.rs","byte_start":13544828,"byte_end":13544831,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This is a member of both the function and code sections.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/func.rs","byte_start":13544832,"byte_end":13544892,"line_start":6,"line_end":6,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":5923},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/func.rs","byte_start":13544979,"byte_end":13544983,"line_start":10,"line_end":10,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::func::Func::span","value":"ast::token::Span","parent":{"krate":0,"index":5921},"children":[],"decl_id":null,"docs":" Where this `func` was defined.\n","sig":null,"attributes":[{"value":"/ Where this `func` was defined.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/func.rs","byte_start":13544936,"byte_end":13544970,"line_start":9,"line_end":9,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":5924},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/func.rs","byte_start":13545104,"byte_end":13545106,"line_start":13,"line_end":13,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::func::Func::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":5921},"children":[],"decl_id":null,"docs":" An identifier that this function is resolved with (optionally) for name\n resolution.\n","sig":null,"attributes":[{"value":"/ An identifier that this function is resolved with (optionally) for name","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/func.rs","byte_start":13545000,"byte_end":13545075,"line_start":11,"line_end":11,"column_start":5,"column_end":80}},{"value":"/ resolution.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/func.rs","byte_start":13545080,"byte_end":13545095,"line_start":12,"line_end":12,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":5925},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/func.rs","byte_start":13545217,"byte_end":13545221,"line_start":15,"line_end":15,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::func::Func::name","value":"std::option::Option<ast::token::NameAnnotation<'a>>","parent":{"krate":0,"index":5921},"children":[],"decl_id":null,"docs":" An optional name for this function stored in the custom `name` section.\n","sig":null,"attributes":[{"value":"/ An optional name for this function stored in the custom `name` section.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/func.rs","byte_start":13545133,"byte_end":13545208,"line_start":14,"line_end":14,"column_start":5,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":5926},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/func.rs","byte_start":13545381,"byte_end":13545388,"line_start":18,"line_end":18,"column_start":9,"column_end":16},"name":"exports","qualname":"::ast::func::Func::exports","value":"ast::export::InlineExport<'a>","parent":{"krate":0,"index":5921},"children":[],"decl_id":null,"docs":" If present, inline export annotations which indicate names this\n definition should be exported under.\n","sig":null,"attributes":[{"value":"/ If present, inline export annotations which indicate names this","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/func.rs","byte_start":13545260,"byte_end":13545327,"line_start":16,"line_end":16,"column_start":5,"column_end":72}},{"value":"/ definition should be exported under.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/func.rs","byte_start":13545332,"byte_end":13545372,"line_start":17,"line_end":17,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":5927},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/func.rs","byte_start":13545514,"byte_end":13545518,"line_start":21,"line_end":21,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::func::Func::kind","value":"ast::func::FuncKind<'a>","parent":{"krate":0,"index":5921},"children":[],"decl_id":null,"docs":" What kind of function this is, be it an inline-defined or imported\n function.\n","sig":null,"attributes":[{"value":"/ What kind of function this is, be it an inline-defined or imported","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/func.rs","byte_start":13545417,"byte_end":13545487,"line_start":19,"line_end":19,"column_start":5,"column_end":75}},{"value":"/ function.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/func.rs","byte_start":13545492,"byte_end":13545505,"line_start":20,"line_end":20,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":5928},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/func.rs","byte_start":13545589,"byte_end":13545591,"line_start":23,"line_end":23,"column_start":9,"column_end":11},"name":"ty","qualname":"::ast::func::Func::ty","value":"ast::types::TypeUse<'a, ast::types::FunctionType<'a>>","parent":{"krate":0,"index":5921},"children":[],"decl_id":null,"docs":" The type that this function will have.\n","sig":null,"attributes":[{"value":"/ The type that this function will have.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/func.rs","byte_start":13545538,"byte_end":13545580,"line_start":22,"line_end":22,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5934},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/func.rs","byte_start":13545890,"byte_end":13545896,"line_start":34,"line_end":34,"column_start":5,"column_end":11},"name":"Import","qualname":"::ast::func::FuncKind::Import","value":"FuncKind::Import(ast::InlineImport)","parent":{"krate":0,"index":5932},"children":[],"decl_id":null,"docs":" A function which is actually defined as an import, such as:","sig":null,"attributes":[{"value":"/ A function which is actually defined as an import, such as:","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/func.rs","byte_start":13545741,"byte_end":13545804,"line_start":29,"line_end":29,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/func.rs","byte_start":13545809,"byte_end":13545812,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/func.rs","byte_start":13545817,"byte_end":13545828,"line_start":31,"line_end":31,"column_start":5,"column_end":16}},{"value":"/ (func (type 3) (import \"foo\" \"bar\"))","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/func.rs","byte_start":13545833,"byte_end":13545873,"line_start":32,"line_end":32,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/func.rs","byte_start":13545878,"byte_end":13545885,"line_start":33,"line_end":33,"column_start":5,"column_end":12}}]},{"kind":"StructVariant","id":{"krate":0,"index":5937},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/func.rs","byte_start":13545995,"byte_end":13546001,"line_start":37,"line_end":37,"column_start":5,"column_end":11},"name":"Inline","qualname":"::ast::func::FuncKind::Inline","value":"FuncKind::Inline { locals, expression }","parent":{"krate":0,"index":5932},"children":[],"decl_id":null,"docs":" Almost all functions, those defined inline in a wasm module.\n","sig":null,"attributes":[{"value":"/ Almost all functions, those defined inline in a wasm module.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/func.rs","byte_start":13545926,"byte_end":13545990,"line_start":36,"line_end":36,"column_start":5,"column_end":69}}]},{"kind":"Enum","id":{"krate":0,"index":5932},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/func.rs","byte_start":13545722,"byte_end":13545730,"line_start":28,"line_end":28,"column_start":10,"column_end":18},"name":"FuncKind","qualname":"::ast::func::FuncKind","value":"pub enum FuncKind<'a> {\n    Import(ast::InlineImport),\n    Inline {\n            locals: Vec<Local>,\n            expression: ast::Expression,\n        },\n}","parent":null,"children":[{"krate":0,"index":5934},{"krate":0,"index":5937}],"decl_id":null,"docs":" Possible ways to define a function in the text format.\n","sig":null,"attributes":[{"value":"/ Possible ways to define a function in the text format.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/func.rs","byte_start":13545637,"byte_end":13545695,"line_start":26,"line_end":26,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":5943},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/func.rs","byte_start":13547220,"byte_end":13547225,"line_start":83,"line_end":83,"column_start":12,"column_end":17},"name":"Local","qualname":"::ast::func::Local","value":"Local { id, name, ty }","parent":null,"children":[{"krate":0,"index":5945},{"krate":0,"index":5946},{"krate":0,"index":5947}],"decl_id":null,"docs":" A local for a `func` or `let` instruction.","sig":null,"attributes":[{"value":"/ A local for a `func` or `let` instruction.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/func.rs","byte_start":13547008,"byte_end":13547054,"line_start":78,"line_end":78,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/func.rs","byte_start":13547055,"byte_end":13547058,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ Each local has an optional identifier for name resolution, an optional name","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/func.rs","byte_start":13547059,"byte_end":13547138,"line_start":80,"line_end":80,"column_start":1,"column_end":80}},{"value":"/ for the custom `name` section, and a value type.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/func.rs","byte_start":13547139,"byte_end":13547191,"line_start":81,"line_end":81,"column_start":1,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":5945},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/func.rs","byte_start":13547337,"byte_end":13547339,"line_start":86,"line_end":86,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::func::Local::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":5943},"children":[],"decl_id":null,"docs":" An identifier that this local is resolved with (optionally) for name\n resolution.\n","sig":null,"attributes":[{"value":"/ An identifier that this local is resolved with (optionally) for name","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/func.rs","byte_start":13547236,"byte_end":13547308,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"/ resolution.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/func.rs","byte_start":13547313,"byte_end":13547328,"line_start":85,"line_end":85,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":5946},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/func.rs","byte_start":13547447,"byte_end":13547451,"line_start":88,"line_end":88,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::func::Local::name","value":"std::option::Option<ast::token::NameAnnotation<'a>>","parent":{"krate":0,"index":5943},"children":[],"decl_id":null,"docs":" An optional name for this local stored in the custom `name` section.\n","sig":null,"attributes":[{"value":"/ An optional name for this local stored in the custom `name` section.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/func.rs","byte_start":13547366,"byte_end":13547438,"line_start":87,"line_end":87,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":5947},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/func.rs","byte_start":13547532,"byte_end":13547534,"line_start":90,"line_end":90,"column_start":9,"column_end":11},"name":"ty","qualname":"::ast::func::Local::ty","value":"ast::types::ValType<'a>","parent":{"krate":0,"index":5943},"children":[],"decl_id":null,"docs":" The value type of this local.\n","sig":null,"attributes":[{"value":"/ The value type of this local.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/func.rs","byte_start":13547490,"byte_end":13547523,"line_start":89,"line_end":89,"column_start":5,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":5951},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/global.rs","byte_start":13548521,"byte_end":13548527,"line_start":6,"line_end":6,"column_start":12,"column_end":18},"name":"Global","qualname":"::ast::global::Global","value":"Global { span, id, exports, ty, kind }","parent":null,"children":[{"krate":0,"index":5953},{"krate":0,"index":5954},{"krate":0,"index":5955},{"krate":0,"index":5956},{"krate":0,"index":5957}],"decl_id":null,"docs":" A WebAssembly global in a module\n","sig":null,"attributes":[{"value":"/ A WebAssembly global in a module","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/global.rs","byte_start":13548456,"byte_end":13548492,"line_start":4,"line_end":4,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":5953},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/global.rs","byte_start":13548583,"byte_end":13548587,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::global::Global::span","value":"ast::token::Span","parent":{"krate":0,"index":5951},"children":[],"decl_id":null,"docs":" Where this `global` was defined.\n","sig":null,"attributes":[{"value":"/ Where this `global` was defined.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/global.rs","byte_start":13548538,"byte_end":13548574,"line_start":7,"line_end":7,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":5954},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/global.rs","byte_start":13548661,"byte_end":13548663,"line_start":10,"line_end":10,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::global::Global::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":5951},"children":[],"decl_id":null,"docs":" An optional name to reference this global by\n","sig":null,"attributes":[{"value":"/ An optional name to reference this global by","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/global.rs","byte_start":13548604,"byte_end":13548652,"line_start":9,"line_end":9,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":5955},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/global.rs","byte_start":13548811,"byte_end":13548818,"line_start":13,"line_end":13,"column_start":9,"column_end":16},"name":"exports","qualname":"::ast::global::Global::exports","value":"ast::export::InlineExport<'a>","parent":{"krate":0,"index":5951},"children":[],"decl_id":null,"docs":" If present, inline export annotations which indicate names this\n definition should be exported under.\n","sig":null,"attributes":[{"value":"/ If present, inline export annotations which indicate names this","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/global.rs","byte_start":13548690,"byte_end":13548757,"line_start":11,"line_end":11,"column_start":5,"column_end":72}},{"value":"/ definition should be exported under.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/global.rs","byte_start":13548762,"byte_end":13548802,"line_start":12,"line_end":12,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":5956},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/global.rs","byte_start":13548930,"byte_end":13548932,"line_start":15,"line_end":15,"column_start":9,"column_end":11},"name":"ty","qualname":"::ast::global::Global::ty","value":"ast::types::GlobalType<'a>","parent":{"krate":0,"index":5951},"children":[],"decl_id":null,"docs":" The type of this global, both its value type and whether it's mutable.\n","sig":null,"attributes":[{"value":"/ The type of this global, both its value type and whether it's mutable.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/global.rs","byte_start":13548847,"byte_end":13548921,"line_start":14,"line_end":14,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":5957},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/global.rs","byte_start":13549008,"byte_end":13549012,"line_start":17,"line_end":17,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::global::Global::kind","value":"ast::global::GlobalKind<'a>","parent":{"krate":0,"index":5951},"children":[],"decl_id":null,"docs":" What kind of global this defined as.\n","sig":null,"attributes":[{"value":"/ What kind of global this defined as.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/global.rs","byte_start":13548959,"byte_end":13548999,"line_start":16,"line_end":16,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5963},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/global.rs","byte_start":13549288,"byte_end":13549294,"line_start":28,"line_end":28,"column_start":5,"column_end":11},"name":"Import","qualname":"::ast::global::GlobalKind::Import","value":"GlobalKind::Import(ast::InlineImport)","parent":{"krate":0,"index":5961},"children":[],"decl_id":null,"docs":" A global which is actually defined as an import, such as:","sig":null,"attributes":[{"value":"/ A global which is actually defined as an import, such as:","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/global.rs","byte_start":13549144,"byte_end":13549205,"line_start":23,"line_end":23,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/global.rs","byte_start":13549210,"byte_end":13549213,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/global.rs","byte_start":13549218,"byte_end":13549229,"line_start":25,"line_end":25,"column_start":5,"column_end":16}},{"value":"/ (global i32 (import \"foo\" \"bar\"))","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/global.rs","byte_start":13549234,"byte_end":13549271,"line_start":26,"line_end":26,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/global.rs","byte_start":13549276,"byte_end":13549283,"line_start":27,"line_end":27,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5966},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/global.rs","byte_start":13549377,"byte_end":13549383,"line_start":31,"line_end":31,"column_start":5,"column_end":11},"name":"Inline","qualname":"::ast::global::GlobalKind::Inline","value":"GlobalKind::Inline(ast::Expression)","parent":{"krate":0,"index":5961},"children":[],"decl_id":null,"docs":" A global defined inline in the module itself\n","sig":null,"attributes":[{"value":"/ A global defined inline in the module itself","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/global.rs","byte_start":13549324,"byte_end":13549372,"line_start":30,"line_end":30,"column_start":5,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":5961},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/global.rs","byte_start":13549123,"byte_end":13549133,"line_start":22,"line_end":22,"column_start":10,"column_end":20},"name":"GlobalKind","qualname":"::ast::global::GlobalKind","value":"pub enum GlobalKind<'a> {\n    Import(ast::InlineImport),\n    Inline(ast::Expression),\n}","parent":null,"children":[{"krate":0,"index":5963},{"krate":0,"index":5966}],"decl_id":null,"docs":" Different kinds of globals that can be defined in a module.\n","sig":null,"attributes":[{"value":"/ Different kinds of globals that can be defined in a module.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/global.rs","byte_start":13549033,"byte_end":13549096,"line_start":20,"line_end":20,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":5972},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/import.rs","byte_start":13550152,"byte_end":13550158,"line_start":6,"line_end":6,"column_start":12,"column_end":18},"name":"Import","qualname":"::ast::import::Import","value":"Import { span, module, field, item }","parent":null,"children":[{"krate":0,"index":5974},{"krate":0,"index":5975},{"krate":0,"index":5976},{"krate":0,"index":5977}],"decl_id":null,"docs":" An `import` statement and entry in a WebAssembly module.\n","sig":null,"attributes":[{"value":"/ An `import` statement and entry in a WebAssembly module.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/import.rs","byte_start":13550056,"byte_end":13550116,"line_start":4,"line_end":4,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":5974},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/import.rs","byte_start":13550213,"byte_end":13550217,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::import::Import::span","value":"ast::token::Span","parent":{"krate":0,"index":5972},"children":[],"decl_id":null,"docs":" Where this `import` was defined\n","sig":null,"attributes":[{"value":"/ Where this `import` was defined","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/import.rs","byte_start":13550169,"byte_end":13550204,"line_start":7,"line_end":7,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":5975},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/import.rs","byte_start":13550295,"byte_end":13550301,"line_start":10,"line_end":10,"column_start":9,"column_end":15},"name":"module","qualname":"::ast::import::Import::module","value":"&'a str","parent":{"krate":0,"index":5972},"children":[],"decl_id":null,"docs":" The module that this statement is importing from\n","sig":null,"attributes":[{"value":"/ The module that this statement is importing from","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/import.rs","byte_start":13550234,"byte_end":13550286,"line_start":9,"line_end":9,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":5976},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/import.rs","byte_start":13550393,"byte_end":13550398,"line_start":12,"line_end":12,"column_start":9,"column_end":14},"name":"field","qualname":"::ast::import::Import::field","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":5972},"children":[],"decl_id":null,"docs":" The name of the field in the module this statement imports from.\n","sig":null,"attributes":[{"value":"/ The name of the field in the module this statement imports from.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/import.rs","byte_start":13550316,"byte_end":13550384,"line_start":11,"line_end":11,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":5977},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/import.rs","byte_start":13550465,"byte_end":13550469,"line_start":14,"line_end":14,"column_start":9,"column_end":13},"name":"item","qualname":"::ast::import::Import::item","value":"ast::import::ItemSig<'a>","parent":{"krate":0,"index":5972},"children":[],"decl_id":null,"docs":" The item that's being imported.\n","sig":null,"attributes":[{"value":"/ The item that's being imported.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/import.rs","byte_start":13550421,"byte_end":13550456,"line_start":13,"line_end":13,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":5984},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/import.rs","byte_start":13550924,"byte_end":13550931,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"ItemSig","qualname":"::ast::import::ItemSig","value":"ItemSig { span, id, name, kind }","parent":null,"children":[{"krate":0,"index":5986},{"krate":0,"index":5987},{"krate":0,"index":5988},{"krate":0,"index":5989}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/import.rs","byte_start":13550890,"byte_end":13550912,"line_start":33,"line_end":33,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":5986},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/import.rs","byte_start":13550996,"byte_end":13551000,"line_start":36,"line_end":36,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::import::ItemSig::span","value":"ast::token::Span","parent":{"krate":0,"index":5984},"children":[],"decl_id":null,"docs":" Where this item is defined in the source.\n","sig":null,"attributes":[{"value":"/ Where this item is defined in the source.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/import.rs","byte_start":13550942,"byte_end":13550987,"line_start":35,"line_end":35,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":5987},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/import.rs","byte_start":13551139,"byte_end":13551141,"line_start":39,"line_end":39,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::import::ItemSig::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":5984},"children":[],"decl_id":null,"docs":" An optional identifier used during name resolution to refer to this item\n from the rest of the module.\n","sig":null,"attributes":[{"value":"/ An optional identifier used during name resolution to refer to this item","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/import.rs","byte_start":13551017,"byte_end":13551093,"line_start":37,"line_end":37,"column_start":5,"column_end":81}},{"value":"/ from the rest of the module.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/import.rs","byte_start":13551098,"byte_end":13551130,"line_start":38,"line_end":38,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":5988},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/import.rs","byte_start":13551272,"byte_end":13551276,"line_start":42,"line_end":42,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::import::ItemSig::name","value":"std::option::Option<ast::token::NameAnnotation<'a>>","parent":{"krate":0,"index":5984},"children":[],"decl_id":null,"docs":" An optional name which, for functions, will be stored in the\n custom `name` section.\n","sig":null,"attributes":[{"value":"/ An optional name which, for functions, will be stored in the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/import.rs","byte_start":13551168,"byte_end":13551232,"line_start":40,"line_end":40,"column_start":5,"column_end":69}},{"value":"/ custom `name` section.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/import.rs","byte_start":13551237,"byte_end":13551263,"line_start":41,"line_end":41,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":5989},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/import.rs","byte_start":13551354,"byte_end":13551358,"line_start":44,"line_end":44,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::import::ItemSig::kind","value":"ast::import::ItemKind<'a>","parent":{"krate":0,"index":5984},"children":[],"decl_id":null,"docs":" What kind of item this is.\n","sig":null,"attributes":[{"value":"/ What kind of item this is.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/import.rs","byte_start":13551315,"byte_end":13551345,"line_start":43,"line_end":43,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5998},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/import.rs","byte_start":13551452,"byte_end":13551456,"line_start":50,"line_end":50,"column_start":5,"column_end":9},"name":"Func","qualname":"::ast::import::ItemKind::Func","value":"ItemKind::Func(ast::TypeUse)","parent":{"krate":0,"index":5996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6001},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/import.rs","byte_start":13551503,"byte_end":13551508,"line_start":51,"line_end":51,"column_start":5,"column_end":10},"name":"Table","qualname":"::ast::import::ItemKind::Table","value":"ItemKind::Table(ast::TableType)","parent":{"krate":0,"index":5996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6004},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/import.rs","byte_start":13551534,"byte_end":13551540,"line_start":52,"line_end":52,"column_start":5,"column_end":11},"name":"Memory","qualname":"::ast::import::ItemKind::Memory","value":"ItemKind::Memory(ast::MemoryType)","parent":{"krate":0,"index":5996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6007},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/import.rs","byte_start":13551563,"byte_end":13551569,"line_start":53,"line_end":53,"column_start":5,"column_end":11},"name":"Global","qualname":"::ast::import::ItemKind::Global","value":"ItemKind::Global(ast::GlobalType)","parent":{"krate":0,"index":5996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6010},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/import.rs","byte_start":13551596,"byte_end":13551601,"line_start":54,"line_end":54,"column_start":5,"column_end":10},"name":"Event","qualname":"::ast::import::ItemKind::Event","value":"ItemKind::Event(ast::EventType)","parent":{"krate":0,"index":5996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6013},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/import.rs","byte_start":13551627,"byte_end":13551633,"line_start":55,"line_end":55,"column_start":5,"column_end":11},"name":"Module","qualname":"::ast::import::ItemKind::Module","value":"ItemKind::Module(ast::TypeUse)","parent":{"krate":0,"index":5996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6016},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/import.rs","byte_start":13551678,"byte_end":13551686,"line_start":56,"line_end":56,"column_start":5,"column_end":13},"name":"Instance","qualname":"::ast::import::ItemKind::Instance","value":"ItemKind::Instance(ast::TypeUse)","parent":{"krate":0,"index":5996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5996},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/import.rs","byte_start":13551433,"byte_end":13551441,"line_start":49,"line_end":49,"column_start":10,"column_end":18},"name":"ItemKind","qualname":"::ast::import::ItemKind","value":"pub enum ItemKind<'a> {\n    Func(ast::TypeUse),\n    Table(ast::TableType),\n    Memory(ast::MemoryType),\n    Global(ast::GlobalType),\n    Event(ast::EventType),\n    Module(ast::TypeUse),\n    Instance(ast::TypeUse),\n}","parent":null,"children":[{"krate":0,"index":5998},{"krate":0,"index":6001},{"krate":0,"index":6004},{"krate":0,"index":6007},{"krate":0,"index":6010},{"krate":0,"index":6013},{"krate":0,"index":6016}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/import.rs","byte_start":13551401,"byte_end":13551423,"line_start":48,"line_end":48,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6025},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/import.rs","byte_start":13554292,"byte_end":13554304,"line_start":132,"line_end":132,"column_start":12,"column_end":24},"name":"InlineImport","qualname":"::ast::import::InlineImport","value":"InlineImport { module, field }","parent":null,"children":[{"krate":0,"index":6027},{"krate":0,"index":6028}],"decl_id":null,"docs":" A listing of a inline `(import \"foo\")` statement.","sig":null,"attributes":[{"value":"/ A listing of a inline `(import \"foo\")` statement.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/import.rs","byte_start":13553903,"byte_end":13553956,"line_start":124,"line_end":124,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/import.rs","byte_start":13553957,"byte_end":13553960,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ Note that when parsing this type it is somewhat unconventional that it","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/import.rs","byte_start":13553961,"byte_end":13554035,"line_start":126,"line_end":126,"column_start":1,"column_end":75}},{"value":"/ parses its own surrounding parentheses. This is typically an optional type,","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/import.rs","byte_start":13554036,"byte_end":13554115,"line_start":127,"line_end":127,"column_start":1,"column_end":80}},{"value":"/ so it's so far been a bit nicer to have the optionality handled through","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/import.rs","byte_start":13554116,"byte_end":13554191,"line_start":128,"line_end":128,"column_start":1,"column_end":76}},{"value":"/ `Peek` rather than `Option<T>`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/import.rs","byte_start":13554192,"byte_end":13554227,"line_start":129,"line_end":129,"column_start":1,"column_end":36}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/import.rs","byte_start":13554258,"byte_end":13554280,"line_start":131,"line_end":131,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":6027},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/import.rs","byte_start":13554319,"byte_end":13554325,"line_start":133,"line_end":133,"column_start":9,"column_end":15},"name":"module","qualname":"::ast::import::InlineImport::module","value":"&'a str","parent":{"krate":0,"index":6025},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6028},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/import.rs","byte_start":13554344,"byte_end":13554349,"line_start":134,"line_end":134,"column_start":9,"column_end":14},"name":"field","qualname":"::ast::import::InlineImport::field","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":6025},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6037},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/instance.rs","byte_start":13555566,"byte_end":13555574,"line_start":6,"line_end":6,"column_start":12,"column_end":20},"name":"Instance","qualname":"::ast::instance::Instance","value":"Instance { span, id, exports, kind }","parent":null,"children":[{"krate":0,"index":6039},{"krate":0,"index":6040},{"krate":0,"index":6041},{"krate":0,"index":6042}],"decl_id":null,"docs":" A nested WebAssembly instance to be created as part of a module.\n","sig":null,"attributes":[{"value":"/ A nested WebAssembly instance to be created as part of a module.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/instance.rs","byte_start":13555469,"byte_end":13555537,"line_start":4,"line_end":4,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":6039},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/instance.rs","byte_start":13555632,"byte_end":13555636,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::instance::Instance::span","value":"ast::token::Span","parent":{"krate":0,"index":6037},"children":[],"decl_id":null,"docs":" Where this `instance` was defined.\n","sig":null,"attributes":[{"value":"/ Where this `instance` was defined.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/instance.rs","byte_start":13555585,"byte_end":13555623,"line_start":7,"line_end":7,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":6040},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/instance.rs","byte_start":13555757,"byte_end":13555759,"line_start":11,"line_end":11,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::instance::Instance::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":6037},"children":[],"decl_id":null,"docs":" An identifier that this instance is resolved with (optionally) for name\n resolution.\n","sig":null,"attributes":[{"value":"/ An identifier that this instance is resolved with (optionally) for name","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/instance.rs","byte_start":13555653,"byte_end":13555728,"line_start":9,"line_end":9,"column_start":5,"column_end":80}},{"value":"/ resolution.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/instance.rs","byte_start":13555733,"byte_end":13555748,"line_start":10,"line_end":10,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":6041},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/instance.rs","byte_start":13555907,"byte_end":13555914,"line_start":14,"line_end":14,"column_start":9,"column_end":16},"name":"exports","qualname":"::ast::instance::Instance::exports","value":"ast::export::InlineExport<'a>","parent":{"krate":0,"index":6037},"children":[],"decl_id":null,"docs":" If present, inline export annotations which indicate names this\n definition should be exported under.\n","sig":null,"attributes":[{"value":"/ If present, inline export annotations which indicate names this","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/instance.rs","byte_start":13555786,"byte_end":13555853,"line_start":12,"line_end":12,"column_start":5,"column_end":72}},{"value":"/ definition should be exported under.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/instance.rs","byte_start":13555858,"byte_end":13555898,"line_start":13,"line_end":13,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":6042},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/instance.rs","byte_start":13556027,"byte_end":13556031,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::instance::Instance::kind","value":"ast::instance::InstanceKind<'a>","parent":{"krate":0,"index":6037},"children":[],"decl_id":null,"docs":" What kind of instance this is, be it an inline-defined or imported one.\n","sig":null,"attributes":[{"value":"/ What kind of instance this is, be it an inline-defined or imported one.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/instance.rs","byte_start":13555943,"byte_end":13556018,"line_start":15,"line_end":15,"column_start":5,"column_end":80}}]},{"kind":"StructVariant","id":{"krate":0,"index":6048},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/instance.rs","byte_start":13556231,"byte_end":13556237,"line_start":23,"line_end":23,"column_start":5,"column_end":11},"name":"Import","qualname":"::ast::instance::InstanceKind::Import","value":"InstanceKind::Import { import, ty }","parent":{"krate":0,"index":6046},"children":[],"decl_id":null,"docs":" An instance which is actually defined as an import, such as:\n","sig":null,"attributes":[{"value":"/ An instance which is actually defined as an import, such as:","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/instance.rs","byte_start":13556162,"byte_end":13556226,"line_start":22,"line_end":22,"column_start":5,"column_end":69}}]},{"kind":"StructVariant","id":{"krate":0,"index":6051},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/instance.rs","byte_start":13556491,"byte_end":13556497,"line_start":31,"line_end":31,"column_start":5,"column_end":11},"name":"Inline","qualname":"::ast::instance::InstanceKind::Inline","value":"InstanceKind::Inline { module, args }","parent":{"krate":0,"index":6046},"children":[],"decl_id":null,"docs":" Instances whose instantiation is defined inline.\n","sig":null,"attributes":[{"value":"/ Instances whose instantiation is defined inline.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/instance.rs","byte_start":13556434,"byte_end":13556486,"line_start":30,"line_end":30,"column_start":5,"column_end":57}}]},{"kind":"Enum","id":{"krate":0,"index":6046},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/instance.rs","byte_start":13556139,"byte_end":13556151,"line_start":21,"line_end":21,"column_start":10,"column_end":22},"name":"InstanceKind","qualname":"::ast::instance::InstanceKind","value":"pub enum InstanceKind<'a> {\n    Import {\n            import: ast::InlineImport,\n            ty: ast::TypeUse,\n        },\n    Inline {\n            module: ast::ItemRef,\n            args: Vec<InstanceArg>,\n        },\n}","parent":null,"children":[{"krate":0,"index":6048},{"krate":0,"index":6051}],"decl_id":null,"docs":" Possible ways to define a instance in the text format.\n","sig":null,"attributes":[{"value":"/ Possible ways to define a instance in the text format.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/instance.rs","byte_start":13556054,"byte_end":13556112,"line_start":19,"line_end":19,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":6057},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/instance.rs","byte_start":13556789,"byte_end":13556800,"line_start":42,"line_end":42,"column_start":12,"column_end":23},"name":"InstanceArg","qualname":"::ast::instance::InstanceArg","value":"InstanceArg { name, index }","parent":null,"children":[{"krate":0,"index":6059},{"krate":0,"index":6060}],"decl_id":null,"docs":" Arguments to the `instantiate` instruction\n","sig":null,"attributes":[{"value":"/ Arguments to the `instantiate` instruction","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/instance.rs","byte_start":13556691,"byte_end":13556737,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/instance.rs","byte_start":13556755,"byte_end":13556777,"line_start":41,"line_end":41,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":6059},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/instance.rs","byte_start":13556815,"byte_end":13556819,"line_start":43,"line_end":43,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::instance::InstanceArg::name","value":"&'a str","parent":{"krate":0,"index":6057},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6060},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/instance.rs","byte_start":13556838,"byte_end":13556843,"line_start":44,"line_end":44,"column_start":9,"column_end":14},"name":"index","qualname":"::ast::instance::InstanceArg::index","value":"ast::token::ItemRef<'a, ast::export::ExportKind>","parent":{"krate":0,"index":6057},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6064},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13558162,"byte_end":13558168,"line_start":6,"line_end":6,"column_start":12,"column_end":18},"name":"Memory","qualname":"::ast::memory::Memory","value":"Memory { span, id, exports, kind }","parent":null,"children":[{"krate":0,"index":6066},{"krate":0,"index":6067},{"krate":0,"index":6068},{"krate":0,"index":6069}],"decl_id":null,"docs":" A defined WebAssembly memory instance inside of a module.\n","sig":null,"attributes":[{"value":"/ A defined WebAssembly memory instance inside of a module.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13558072,"byte_end":13558133,"line_start":4,"line_end":4,"column_start":1,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":6066},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13558223,"byte_end":13558227,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::memory::Memory::span","value":"ast::token::Span","parent":{"krate":0,"index":6064},"children":[],"decl_id":null,"docs":" Where this `memory` was defined\n","sig":null,"attributes":[{"value":"/ Where this `memory` was defined","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13558179,"byte_end":13558214,"line_start":7,"line_end":7,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":6067},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13558301,"byte_end":13558303,"line_start":10,"line_end":10,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::memory::Memory::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":6064},"children":[],"decl_id":null,"docs":" An optional name to refer to this memory by.\n","sig":null,"attributes":[{"value":"/ An optional name to refer to this memory by.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13558244,"byte_end":13558292,"line_start":9,"line_end":9,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":6068},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13558451,"byte_end":13558458,"line_start":13,"line_end":13,"column_start":9,"column_end":16},"name":"exports","qualname":"::ast::memory::Memory::exports","value":"ast::export::InlineExport<'a>","parent":{"krate":0,"index":6064},"children":[],"decl_id":null,"docs":" If present, inline export annotations which indicate names this\n definition should be exported under.\n","sig":null,"attributes":[{"value":"/ If present, inline export annotations which indicate names this","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13558330,"byte_end":13558397,"line_start":11,"line_end":11,"column_start":5,"column_end":72}},{"value":"/ definition should be exported under.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13558402,"byte_end":13558442,"line_start":12,"line_end":12,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":6069},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13558541,"byte_end":13558545,"line_start":15,"line_end":15,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::memory::Memory::kind","value":"ast::memory::MemoryKind<'a>","parent":{"krate":0,"index":6064},"children":[],"decl_id":null,"docs":" How this memory is defined in the module.\n","sig":null,"attributes":[{"value":"/ How this memory is defined in the module.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13558487,"byte_end":13558532,"line_start":14,"line_end":14,"column_start":5,"column_end":50}}]},{"kind":"StructVariant","id":{"krate":0,"index":6075},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13558770,"byte_end":13558776,"line_start":23,"line_end":23,"column_start":5,"column_end":11},"name":"Import","qualname":"::ast::memory::MemoryKind::Import","value":"MemoryKind::Import { import, ty }","parent":{"krate":0,"index":6073},"children":[],"decl_id":null,"docs":" This memory is actually an inlined import definition.\n","sig":null,"attributes":[{"value":"/ This memory is actually an inlined import definition.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13558681,"byte_end":13558738,"line_start":21,"line_end":21,"column_start":5,"column_end":62}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13558743,"byte_end":13558765,"line_start":22,"line_end":22,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6078},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13558938,"byte_end":13558944,"line_start":29,"line_end":29,"column_start":5,"column_end":11},"name":"Normal","qualname":"::ast::memory::MemoryKind::Normal","value":"MemoryKind::Normal(ast::MemoryType)","parent":{"krate":0,"index":6073},"children":[],"decl_id":null,"docs":" A typical memory definition which simply says the limits of the memory\n","sig":null,"attributes":[{"value":"/ A typical memory definition which simply says the limits of the memory","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13558859,"byte_end":13558933,"line_start":28,"line_end":28,"column_start":5,"column_end":79}}]},{"kind":"StructVariant","id":{"krate":0,"index":6081},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13559036,"byte_end":13559042,"line_start":32,"line_end":32,"column_start":5,"column_end":11},"name":"Inline","qualname":"::ast::memory::MemoryKind::Inline","value":"MemoryKind::Inline { is_32, data }","parent":{"krate":0,"index":6073},"children":[],"decl_id":null,"docs":" The data of this memory, starting from 0, explicitly listed\n","sig":null,"attributes":[{"value":"/ The data of this memory, starting from 0, explicitly listed","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13558968,"byte_end":13559031,"line_start":31,"line_end":31,"column_start":5,"column_end":68}}]},{"kind":"Enum","id":{"krate":0,"index":6073},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13558660,"byte_end":13558670,"line_start":20,"line_end":20,"column_start":10,"column_end":20},"name":"MemoryKind","qualname":"::ast::memory::MemoryKind","value":"pub enum MemoryKind<'a> {\n    Import {\n            import: ast::InlineImport,\n            ty: ast::MemoryType,\n        },\n    Normal(ast::MemoryType),\n    Inline {\n            is_32: bool,\n            data: Vec<DataVal>,\n        },\n}","parent":null,"children":[{"krate":0,"index":6075},{"krate":0,"index":6078},{"krate":0,"index":6081}],"decl_id":null,"docs":" Different syntactical ways a memory can be defined in a module.\n","sig":null,"attributes":[{"value":"/ Different syntactical ways a memory can be defined in a module.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13558566,"byte_end":13558633,"line_start":18,"line_end":18,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6087},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13560853,"byte_end":13560857,"line_start":90,"line_end":90,"column_start":12,"column_end":16},"name":"Data","qualname":"::ast::memory::Data","value":"Data { span, id, kind, data }","parent":null,"children":[{"krate":0,"index":6089},{"krate":0,"index":6090},{"krate":0,"index":6091},{"krate":0,"index":6092}],"decl_id":null,"docs":" A `data` directive in a WebAssembly module.\n","sig":null,"attributes":[{"value":"/ A `data` directive in a WebAssembly module.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13560777,"byte_end":13560824,"line_start":88,"line_end":88,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":6089},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13560910,"byte_end":13560914,"line_start":92,"line_end":92,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::memory::Data::span","value":"ast::token::Span","parent":{"krate":0,"index":6087},"children":[],"decl_id":null,"docs":" Where this `data` was defined\n","sig":null,"attributes":[{"value":"/ Where this `data` was defined","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13560868,"byte_end":13560901,"line_start":91,"line_end":91,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":6090},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13560983,"byte_end":13560985,"line_start":95,"line_end":95,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::memory::Data::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":6087},"children":[],"decl_id":null,"docs":" The optional name of this data segment\n","sig":null,"attributes":[{"value":"/ The optional name of this data segment","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13560932,"byte_end":13560974,"line_start":94,"line_end":94,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":6091},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13561072,"byte_end":13561076,"line_start":98,"line_end":98,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::memory::Data::kind","value":"ast::memory::DataKind<'a>","parent":{"krate":0,"index":6087},"children":[],"decl_id":null,"docs":" Whether this data segment is passive or active\n","sig":null,"attributes":[{"value":"/ Whether this data segment is passive or active","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13561013,"byte_end":13561063,"line_start":97,"line_end":97,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":6092},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13561205,"byte_end":13561209,"line_start":102,"line_end":102,"column_start":9,"column_end":13},"name":"data","qualname":"::ast::memory::Data::data","value":"std::vec::Vec<ast::memory::DataVal<'a>>","parent":{"krate":0,"index":6087},"children":[],"decl_id":null,"docs":" Bytes for this `Data` segment, viewed as the concatenation of all the\n contained slices.\n","sig":null,"attributes":[{"value":"/ Bytes for this `Data` segment, viewed as the concatenation of all the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13561097,"byte_end":13561170,"line_start":100,"line_end":100,"column_start":5,"column_end":78}},{"value":"/ contained slices.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13561175,"byte_end":13561196,"line_start":101,"line_end":101,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6098},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13561462,"byte_end":13561469,"line_start":110,"line_end":110,"column_start":5,"column_end":12},"name":"Passive","qualname":"::ast::memory::DataKind::Passive","value":"DataKind::Passive","parent":{"krate":0,"index":6096},"children":[],"decl_id":null,"docs":" A passive data segment which isn't associated with a memory and is\n referenced from various instructions.\n","sig":null,"attributes":[{"value":"/ A passive data segment which isn't associated with a memory and is","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13561341,"byte_end":13561411,"line_start":108,"line_end":108,"column_start":5,"column_end":75}},{"value":"/ referenced from various instructions.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13561416,"byte_end":13561457,"line_start":109,"line_end":109,"column_start":5,"column_end":46}}]},{"kind":"StructVariant","id":{"krate":0,"index":6100},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13561596,"byte_end":13561602,"line_start":114,"line_end":114,"column_start":5,"column_end":11},"name":"Active","qualname":"::ast::memory::DataKind::Active","value":"DataKind::Active { memory, offset }","parent":{"krate":0,"index":6096},"children":[],"decl_id":null,"docs":" An active data segment which is associated and loaded into a particular\n memory on module instantiation.\n","sig":null,"attributes":[{"value":"/ An active data segment which is associated and loaded into a particular","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13561476,"byte_end":13561551,"line_start":112,"line_end":112,"column_start":5,"column_end":80}},{"value":"/ memory on module instantiation.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13561556,"byte_end":13561591,"line_start":113,"line_end":113,"column_start":5,"column_end":40}}]},{"kind":"Enum","id":{"krate":0,"index":6096},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13561322,"byte_end":13561330,"line_start":107,"line_end":107,"column_start":10,"column_end":18},"name":"DataKind","qualname":"::ast::memory::DataKind","value":"pub enum DataKind<'a> {\n    Passive,\n    Active {\n            memory: ast::ItemRef,\n            offset: ast::Expression,\n        },\n}","parent":null,"children":[{"krate":0,"index":6098},{"krate":0,"index":6100}],"decl_id":null,"docs":" Different kinds of data segments, either passive or active.\n","sig":null,"attributes":[{"value":"/ Different kinds of data segments, either passive or active.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13561232,"byte_end":13561295,"line_start":105,"line_end":105,"column_start":1,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6108},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13563549,"byte_end":13563555,"line_start":176,"line_end":176,"column_start":5,"column_end":11},"name":"String","qualname":"::ast::memory::DataVal::String","value":"DataVal::String(&'a [u8])","parent":{"krate":0,"index":6106},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6111},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13563571,"byte_end":13563579,"line_start":177,"line_end":177,"column_start":5,"column_end":13},"name":"Integral","qualname":"::ast::memory::DataVal::Integral","value":"DataVal::Integral(Vec<u8>)","parent":{"krate":0,"index":6106},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6106},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13563531,"byte_end":13563538,"line_start":175,"line_end":175,"column_start":10,"column_end":17},"name":"DataVal","qualname":"::ast::memory::DataVal","value":"pub enum DataVal<'a> { String(&'a [u8]), Integral(Vec<u8>), }","parent":null,"children":[{"krate":0,"index":6108},{"krate":0,"index":6111}],"decl_id":null,"docs":" Differnet ways the value of a data segment can be defined.\n","sig":null,"attributes":[{"value":"/ Differnet ways the value of a data segment can be defined.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13563419,"byte_end":13563481,"line_start":172,"line_end":172,"column_start":1,"column_end":63}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13563499,"byte_end":13563521,"line_start":174,"line_end":174,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1683},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13563718,"byte_end":13563721,"line_start":183,"line_end":183,"column_start":12,"column_end":15},"name":"len","qualname":"<DataVal>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the length, in bytes, of the memory used to represent this data\n value.\n","sig":null,"attributes":[{"value":"/ Returns the length, in bytes, of the memory used to represent this data","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13563616,"byte_end":13563691,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ value.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13563696,"byte_end":13563706,"line_start":182,"line_end":182,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1684},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13563954,"byte_end":13563963,"line_start":191,"line_end":191,"column_start":12,"column_end":21},"name":"push_onto","qualname":"<DataVal>::push_onto","value":"pub fn push_onto(&Self, &mut Vec<u8>)","parent":null,"children":[],"decl_id":null,"docs":" Pushes the value of this data value onto the provided list of bytes.\n","sig":null,"attributes":[{"value":"/ Pushes the value of this data value onto the provided list of bytes.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13563870,"byte_end":13563942,"line_start":190,"line_end":190,"column_start":5,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":1726},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13566450,"byte_end":13566453,"line_start":11,"line_end":11,"column_start":12,"column_end":15},"name":"Wat","qualname":"::ast::module::Wat","value":"Wat { module }","parent":null,"children":[{"krate":0,"index":1728}],"decl_id":null,"docs":" A `*.wat` file parser, or a parser for one parenthesized module.","sig":null,"attributes":[{"value":"/ A `*.wat` file parser, or a parser for one parenthesized module.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13566161,"byte_end":13566229,"line_start":6,"line_end":6,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13566230,"byte_end":13566233,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is the top-level type which you'll frequently parse when working with","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13566234,"byte_end":13566312,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ this crate. A `*.wat` file is either one `module` s-expression or a sequence","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13566313,"byte_end":13566393,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ of s-expressions that are module fields.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13566394,"byte_end":13566438,"line_start":10,"line_end":10,"column_start":1,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":1728},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13566495,"byte_end":13566501,"line_start":13,"line_end":13,"column_start":9,"column_end":15},"name":"module","qualname":"::ast::module::Wat::module","value":"ast::module::Module<'a>","parent":{"krate":0,"index":1726},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13566464,"byte_end":13566486,"line_start":12,"line_end":12,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1733},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13567286,"byte_end":13567292,"line_start":39,"line_end":39,"column_start":12,"column_end":18},"name":"Module","qualname":"::ast::module::Module","value":"Module { span, id, name, kind }","parent":null,"children":[{"krate":0,"index":1735},{"krate":0,"index":1736},{"krate":0,"index":1737},{"krate":0,"index":1738}],"decl_id":null,"docs":" A parsed WebAssembly module.\n","sig":null,"attributes":[{"value":"/ A parsed WebAssembly module.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13567242,"byte_end":13567274,"line_start":38,"line_end":38,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":1735},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13567347,"byte_end":13567351,"line_start":41,"line_end":41,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::module::Module::span","value":"ast::token::Span","parent":{"krate":0,"index":1733},"children":[],"decl_id":null,"docs":" Where this `module` was defined\n","sig":null,"attributes":[{"value":"/ Where this `module` was defined","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13567303,"byte_end":13567338,"line_start":40,"line_end":40,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1736},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13567427,"byte_end":13567429,"line_start":43,"line_end":43,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::module::Module::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":1733},"children":[],"decl_id":null,"docs":" An optional identifier this module is known by\n","sig":null,"attributes":[{"value":"/ An optional identifier this module is known by","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13567368,"byte_end":13567418,"line_start":42,"line_end":42,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1737},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13567515,"byte_end":13567519,"line_start":45,"line_end":45,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::module::Module::name","value":"std::option::Option<ast::token::NameAnnotation<'a>>","parent":{"krate":0,"index":1733},"children":[],"decl_id":null,"docs":" An optional `@name` annotation for this module\n","sig":null,"attributes":[{"value":"/ An optional `@name` annotation for this module","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13567456,"byte_end":13567506,"line_start":44,"line_end":44,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1738},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13567610,"byte_end":13567614,"line_start":47,"line_end":47,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::module::Module::kind","value":"ast::module::ModuleKind<'a>","parent":{"krate":0,"index":1733},"children":[],"decl_id":null,"docs":" What kind of module this was parsed as.\n","sig":null,"attributes":[{"value":"/ What kind of module this was parsed as.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13567558,"byte_end":13567601,"line_start":46,"line_end":46,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1741},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13567778,"byte_end":13567782,"line_start":53,"line_end":53,"column_start":5,"column_end":9},"name":"Text","qualname":"::ast::module::ModuleKind::Text","value":"ModuleKind::Text(Vec<ModuleField>)","parent":{"krate":0,"index":1739},"children":[],"decl_id":null,"docs":" A module defined in the textual s-expression format.\n","sig":null,"attributes":[{"value":"/ A module defined in the textual s-expression format.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13567717,"byte_end":13567773,"line_start":52,"line_end":52,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1744},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13567901,"byte_end":13567907,"line_start":56,"line_end":56,"column_start":5,"column_end":11},"name":"Binary","qualname":"::ast::module::ModuleKind::Binary","value":"ModuleKind::Binary(Vec<&'a [u8]>)","parent":{"krate":0,"index":1739},"children":[],"decl_id":null,"docs":" A module that had its raw binary bytes defined via the `binary`\n directive.\n","sig":null,"attributes":[{"value":"/ A module that had its raw binary bytes defined via the `binary`","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13567810,"byte_end":13567877,"line_start":54,"line_end":54,"column_start":5,"column_end":72}},{"value":"/ directive.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13567882,"byte_end":13567896,"line_start":55,"line_end":55,"column_start":5,"column_end":19}}]},{"kind":"Enum","id":{"krate":0,"index":1739},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13567696,"byte_end":13567706,"line_start":51,"line_end":51,"column_start":10,"column_end":20},"name":"ModuleKind","qualname":"::ast::module::ModuleKind","value":"pub enum ModuleKind<'a> { Text(Vec<ModuleField>), Binary(Vec<&'a [u8]>), }","parent":null,"children":[{"krate":0,"index":1741},{"krate":0,"index":1744}],"decl_id":null,"docs":" The different kinds of ways to define a module.\n","sig":null,"attributes":[{"value":"/ The different kinds of ways to define a module.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13567635,"byte_end":13567686,"line_start":50,"line_end":50,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1749},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13569200,"byte_end":13569207,"line_start":83,"line_end":83,"column_start":12,"column_end":19},"name":"resolve","qualname":"<Module>::resolve","value":"pub fn resolve(&mut Self) -> std::result::Result<Names, crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Performs a name resolution pass on this [`Module`], resolving all\n symbolic names to indices.","sig":null,"attributes":[{"value":"/ Performs a name resolution pass on this [`Module`], resolving all","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13567953,"byte_end":13568022,"line_start":60,"line_end":60,"column_start":5,"column_end":74}},{"value":"/ symbolic names to indices.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13568027,"byte_end":13568057,"line_start":61,"line_end":61,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13568062,"byte_end":13568065,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ The WAT format contains a number of shorthands to make it easier to","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13568070,"byte_end":13568141,"line_start":63,"line_end":63,"column_start":5,"column_end":76}},{"value":"/ write, such as inline exports, inline imports, inline type definitions,","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13568146,"byte_end":13568221,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ etc. Additionally it allows using symbolic names such as `$foo` instead","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13568226,"byte_end":13568301,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of using indices. This module will postprocess an AST to remove all of","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13568306,"byte_end":13568380,"line_start":66,"line_end":66,"column_start":5,"column_end":79}},{"value":"/ this syntactic sugar, preparing the AST for binary emission.  This is","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13568385,"byte_end":13568458,"line_start":67,"line_end":67,"column_start":5,"column_end":78}},{"value":"/ where expansion and name resolution happens.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13568463,"byte_end":13568511,"line_start":68,"line_end":68,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13568516,"byte_end":13568519,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ This function will mutate the AST of this [`Module`] and replace all","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13568524,"byte_end":13568596,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/ [`super::Index`] arguments with `Index::Num`. This will also expand inline","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13568601,"byte_end":13568679,"line_start":71,"line_end":71,"column_start":5,"column_end":83}},{"value":"/ exports/imports listed on fields and handle various other shorthands of","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13568684,"byte_end":13568759,"line_start":72,"line_end":72,"column_start":5,"column_end":80}},{"value":"/ the text format.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13568764,"byte_end":13568784,"line_start":73,"line_end":73,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13568789,"byte_end":13568792,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ If successful the AST was modified to be ready for binary encoding. A","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13568797,"byte_end":13568870,"line_start":75,"line_end":75,"column_start":5,"column_end":78}},{"value":"/ [`Names`] structure is also returned so if you'd like to do your own","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13568875,"byte_end":13568947,"line_start":76,"line_end":76,"column_start":5,"column_end":77}},{"value":"/ name lookups on the result you can do so as well.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13568952,"byte_end":13569005,"line_start":77,"line_end":77,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13569010,"byte_end":13569013,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13569018,"byte_end":13569030,"line_start":79,"line_end":79,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13569035,"byte_end":13569038,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ If an error happens during resolution, such a name resolution error or","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13569043,"byte_end":13569117,"line_start":81,"line_end":81,"column_start":5,"column_end":79}},{"value":"/ items are found in the wrong order, then an error is returned.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13569122,"byte_end":13569188,"line_start":82,"line_end":82,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1750},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13570388,"byte_end":13570394,"line_start":111,"line_end":111,"column_start":12,"column_end":18},"name":"encode","qualname":"<Module>::encode","value":"pub fn encode(&mut Self) -> std::result::Result<Vec<u8>, crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Encodes this [`Module`] to its binary form.","sig":null,"attributes":[{"value":"/ Encodes this [`Module`] to its binary form.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13569318,"byte_end":13569365,"line_start":87,"line_end":87,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13569370,"byte_end":13569373,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ This function will take the textual representation in [`Module`] and","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13569378,"byte_end":13569450,"line_start":89,"line_end":89,"column_start":5,"column_end":77}},{"value":"/ perform all steps necessary to convert it to a binary WebAssembly","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13569455,"byte_end":13569524,"line_start":90,"line_end":90,"column_start":5,"column_end":74}},{"value":"/ module, suitable for writing to a `*.wasm` file. This function may","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13569529,"byte_end":13569599,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ internally modify the [`Module`], for example:","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13569604,"byte_end":13569654,"line_start":92,"line_end":92,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13569659,"byte_end":13569662,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ * Name resolution is performed to ensure that `Index::Id` isn't present","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13569667,"byte_end":13569742,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/   anywhere in the AST.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13569747,"byte_end":13569773,"line_start":95,"line_end":95,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13569778,"byte_end":13569781,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ * Inline shorthands such as imports/exports/types are all expanded to be","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13569786,"byte_end":13569862,"line_start":97,"line_end":97,"column_start":5,"column_end":81}},{"value":"/   dedicated fields of the module.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13569867,"byte_end":13569904,"line_start":98,"line_end":98,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13569909,"byte_end":13569912,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ * Module fields may be shuffled around to preserve index ordering from","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13569917,"byte_end":13569991,"line_start":100,"line_end":100,"column_start":5,"column_end":79}},{"value":"/   expansions.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13569996,"byte_end":13570013,"line_start":101,"line_end":101,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13570018,"byte_end":13570021,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ After all of this expansion has happened the module will be converted to","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13570026,"byte_end":13570102,"line_start":103,"line_end":103,"column_start":5,"column_end":81}},{"value":"/ its binary form and returned as a `Vec<u8>`. This is then suitable to","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13570107,"byte_end":13570180,"line_start":104,"line_end":104,"column_start":5,"column_end":78}},{"value":"/ hand off to other wasm runtimes and such.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13570185,"byte_end":13570230,"line_start":105,"line_end":105,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13570235,"byte_end":13570238,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13570243,"byte_end":13570255,"line_start":107,"line_end":107,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13570260,"byte_end":13570263,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ This function can return an error for name resolution errors and other","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13570268,"byte_end":13570342,"line_start":109,"line_end":109,"column_start":5,"column_end":79}},{"value":"/ expansion-related errors.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13570347,"byte_end":13570376,"line_start":110,"line_end":110,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6119},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13571852,"byte_end":13571856,"line_start":162,"line_end":162,"column_start":5,"column_end":9},"name":"Type","qualname":"::ast::module::ModuleField::Type","value":"ModuleField::Type(ast::Type)","parent":{"krate":0,"index":6117},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6122},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13571877,"byte_end":13571883,"line_start":163,"line_end":163,"column_start":5,"column_end":11},"name":"Import","qualname":"::ast::module::ModuleField::Import","value":"ModuleField::Import(ast::Import)","parent":{"krate":0,"index":6117},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6125},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13571906,"byte_end":13571910,"line_start":164,"line_end":164,"column_start":5,"column_end":9},"name":"Func","qualname":"::ast::module::ModuleField::Func","value":"ModuleField::Func(ast::Func)","parent":{"krate":0,"index":6117},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6128},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13571931,"byte_end":13571936,"line_start":165,"line_end":165,"column_start":5,"column_end":10},"name":"Table","qualname":"::ast::module::ModuleField::Table","value":"ModuleField::Table(ast::Table)","parent":{"krate":0,"index":6117},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6131},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13571958,"byte_end":13571964,"line_start":166,"line_end":166,"column_start":5,"column_end":11},"name":"Memory","qualname":"::ast::module::ModuleField::Memory","value":"ModuleField::Memory(ast::Memory)","parent":{"krate":0,"index":6117},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6134},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13571987,"byte_end":13571993,"line_start":167,"line_end":167,"column_start":5,"column_end":11},"name":"Global","qualname":"::ast::module::ModuleField::Global","value":"ModuleField::Global(ast::Global)","parent":{"krate":0,"index":6117},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6137},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13572016,"byte_end":13572022,"line_start":168,"line_end":168,"column_start":5,"column_end":11},"name":"Export","qualname":"::ast::module::ModuleField::Export","value":"ModuleField::Export(ast::Export)","parent":{"krate":0,"index":6117},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6140},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13572045,"byte_end":13572050,"line_start":169,"line_end":169,"column_start":5,"column_end":10},"name":"Start","qualname":"::ast::module::ModuleField::Start","value":"ModuleField::Start(ast::ItemRef)","parent":{"krate":0,"index":6117},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6143},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13572084,"byte_end":13572088,"line_start":170,"line_end":170,"column_start":5,"column_end":9},"name":"Elem","qualname":"::ast::module::ModuleField::Elem","value":"ModuleField::Elem(ast::Elem)","parent":{"krate":0,"index":6117},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6146},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13572109,"byte_end":13572113,"line_start":171,"line_end":171,"column_start":5,"column_end":9},"name":"Data","qualname":"::ast::module::ModuleField::Data","value":"ModuleField::Data(ast::Data)","parent":{"krate":0,"index":6117},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6149},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13572134,"byte_end":13572139,"line_start":172,"line_end":172,"column_start":5,"column_end":10},"name":"Event","qualname":"::ast::module::ModuleField::Event","value":"ModuleField::Event(ast::Event)","parent":{"krate":0,"index":6117},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6152},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13572161,"byte_end":13572167,"line_start":173,"line_end":173,"column_start":5,"column_end":11},"name":"Custom","qualname":"::ast::module::ModuleField::Custom","value":"ModuleField::Custom(ast::Custom)","parent":{"krate":0,"index":6117},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6155},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13572190,"byte_end":13572198,"line_start":174,"line_end":174,"column_start":5,"column_end":13},"name":"Instance","qualname":"::ast::module::ModuleField::Instance","value":"ModuleField::Instance(ast::Instance)","parent":{"krate":0,"index":6117},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6158},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13572223,"byte_end":13572235,"line_start":175,"line_end":175,"column_start":5,"column_end":17},"name":"NestedModule","qualname":"::ast::module::ModuleField::NestedModule","value":"ModuleField::NestedModule(ast::NestedModule)","parent":{"krate":0,"index":6117},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6161},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13572264,"byte_end":13572269,"line_start":176,"line_end":176,"column_start":5,"column_end":10},"name":"Alias","qualname":"::ast::module::ModuleField::Alias","value":"ModuleField::Alias(ast::Alias)","parent":{"krate":0,"index":6117},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6117},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13571830,"byte_end":13571841,"line_start":161,"line_end":161,"column_start":10,"column_end":21},"name":"ModuleField","qualname":"::ast::module::ModuleField","value":"pub enum ModuleField<'a> {\n    Type(ast::Type),\n    Import(ast::Import),\n    Func(ast::Func),\n    Table(ast::Table),\n    Memory(ast::Memory),\n    Global(ast::Global),\n    Export(ast::Export),\n    Start(ast::ItemRef),\n    Elem(ast::Elem),\n    Data(ast::Data),\n    Event(ast::Event),\n    Custom(ast::Custom),\n    Instance(ast::Instance),\n    NestedModule(ast::NestedModule),\n    Alias(ast::Alias),\n}","parent":null,"children":[{"krate":0,"index":6119},{"krate":0,"index":6122},{"krate":0,"index":6125},{"krate":0,"index":6128},{"krate":0,"index":6131},{"krate":0,"index":6134},{"krate":0,"index":6137},{"krate":0,"index":6140},{"krate":0,"index":6143},{"krate":0,"index":6146},{"krate":0,"index":6149},{"krate":0,"index":6152},{"krate":0,"index":6155},{"krate":0,"index":6158},{"krate":0,"index":6161}],"decl_id":null,"docs":" A listing of all possible fields that can make up a WebAssembly module.\n","sig":null,"attributes":[{"value":"/ A listing of all possible fields that can make up a WebAssembly module.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13571705,"byte_end":13571780,"line_start":158,"line_end":158,"column_start":1,"column_end":76}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13571781,"byte_end":13571803,"line_start":159,"line_end":159,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6167},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/nested_module.rs","byte_start":13574650,"byte_end":13574662,"line_start":6,"line_end":6,"column_start":12,"column_end":24},"name":"NestedModule","qualname":"::ast::nested_module::NestedModule","value":"NestedModule { span, id, name, exports, kind }","parent":null,"children":[{"krate":0,"index":6169},{"krate":0,"index":6170},{"krate":0,"index":6171},{"krate":0,"index":6172},{"krate":0,"index":6173}],"decl_id":null,"docs":" A nested WebAssembly nested module to be created as part of a module.\n","sig":null,"attributes":[{"value":"/ A nested WebAssembly nested module to be created as part of a module.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/nested_module.rs","byte_start":13574548,"byte_end":13574621,"line_start":4,"line_end":4,"column_start":1,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":6169},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/nested_module.rs","byte_start":13574725,"byte_end":13574729,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::nested_module::NestedModule::span","value":"ast::token::Span","parent":{"krate":0,"index":6167},"children":[],"decl_id":null,"docs":" Where this `nested module` was defined.\n","sig":null,"attributes":[{"value":"/ Where this `nested module` was defined.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/nested_module.rs","byte_start":13574673,"byte_end":13574716,"line_start":7,"line_end":7,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":6170},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/nested_module.rs","byte_start":13574855,"byte_end":13574857,"line_start":11,"line_end":11,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::nested_module::NestedModule::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":6167},"children":[],"decl_id":null,"docs":" An identifier that this nested module is resolved with (optionally) for name\n resolution.\n","sig":null,"attributes":[{"value":"/ An identifier that this nested module is resolved with (optionally) for name","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/nested_module.rs","byte_start":13574746,"byte_end":13574826,"line_start":9,"line_end":9,"column_start":5,"column_end":85}},{"value":"/ resolution.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/nested_module.rs","byte_start":13574831,"byte_end":13574846,"line_start":10,"line_end":10,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":6171},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/nested_module.rs","byte_start":13574966,"byte_end":13574970,"line_start":13,"line_end":13,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::nested_module::NestedModule::name","value":"std::option::Option<ast::token::NameAnnotation<'a>>","parent":{"krate":0,"index":6167},"children":[],"decl_id":null,"docs":" An optional name for this module stored in the custom `name` section.\n","sig":null,"attributes":[{"value":"/ An optional name for this module stored in the custom `name` section.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/nested_module.rs","byte_start":13574884,"byte_end":13574957,"line_start":12,"line_end":12,"column_start":5,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":6172},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/nested_module.rs","byte_start":13575130,"byte_end":13575137,"line_start":16,"line_end":16,"column_start":9,"column_end":16},"name":"exports","qualname":"::ast::nested_module::NestedModule::exports","value":"ast::export::InlineExport<'a>","parent":{"krate":0,"index":6167},"children":[],"decl_id":null,"docs":" If present, inline export annotations which indicate names this\n definition should be exported under.\n","sig":null,"attributes":[{"value":"/ If present, inline export annotations which indicate names this","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/nested_module.rs","byte_start":13575009,"byte_end":13575076,"line_start":14,"line_end":14,"column_start":5,"column_end":72}},{"value":"/ definition should be exported under.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/nested_module.rs","byte_start":13575081,"byte_end":13575121,"line_start":15,"line_end":15,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":6173},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/nested_module.rs","byte_start":13575255,"byte_end":13575259,"line_start":18,"line_end":18,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::nested_module::NestedModule::kind","value":"ast::nested_module::NestedModuleKind<'a>","parent":{"krate":0,"index":6167},"children":[],"decl_id":null,"docs":" What kind of nested module this is, be it an inline-defined or imported one.\n","sig":null,"attributes":[{"value":"/ What kind of nested module this is, be it an inline-defined or imported one.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/nested_module.rs","byte_start":13575166,"byte_end":13575246,"line_start":17,"line_end":17,"column_start":5,"column_end":85}}]},{"kind":"StructVariant","id":{"krate":0,"index":6179},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/nested_module.rs","byte_start":13575477,"byte_end":13575483,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"Import","qualname":"::ast::nested_module::NestedModuleKind::Import","value":"NestedModuleKind::Import { import, ty }","parent":{"krate":0,"index":6177},"children":[],"decl_id":null,"docs":" An nested module which is actually defined as an import, such as:\n","sig":null,"attributes":[{"value":"/ An nested module which is actually defined as an import, such as:","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/nested_module.rs","byte_start":13575403,"byte_end":13575472,"line_start":24,"line_end":24,"column_start":5,"column_end":74}}]},{"kind":"StructVariant","id":{"krate":0,"index":6182},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/nested_module.rs","byte_start":13575760,"byte_end":13575766,"line_start":33,"line_end":33,"column_start":5,"column_end":11},"name":"Inline","qualname":"::ast::nested_module::NestedModuleKind::Inline","value":"NestedModuleKind::Inline { fields }","parent":{"krate":0,"index":6177},"children":[],"decl_id":null,"docs":" Nested modules whose instantiation is defined inline.\n","sig":null,"attributes":[{"value":"/ Nested modules whose instantiation is defined inline.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/nested_module.rs","byte_start":13575698,"byte_end":13575755,"line_start":32,"line_end":32,"column_start":5,"column_end":62}}]},{"kind":"Enum","id":{"krate":0,"index":6177},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/nested_module.rs","byte_start":13575376,"byte_end":13575392,"line_start":23,"line_end":23,"column_start":10,"column_end":26},"name":"NestedModuleKind","qualname":"::ast::nested_module::NestedModuleKind","value":"pub enum NestedModuleKind<'a> {\n    Import {\n            import: ast::InlineImport,\n            ty: ast::TypeUse,\n        },\n    Inline {\n            fields: Vec<ast::ModuleField>,\n        },\n}","parent":null,"children":[{"krate":0,"index":6179},{"krate":0,"index":6182}],"decl_id":null,"docs":" Possible ways to define a nested module in the text format.\n","sig":null,"attributes":[{"value":"/ Possible ways to define a nested module in the text format.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/nested_module.rs","byte_start":13575286,"byte_end":13575349,"line_start":21,"line_end":21,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":6187},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13578654,"byte_end":13578659,"line_start":6,"line_end":6,"column_start":12,"column_end":17},"name":"Table","qualname":"::ast::table::Table","value":"Table { span, id, exports, kind }","parent":null,"children":[{"krate":0,"index":6189},{"krate":0,"index":6190},{"krate":0,"index":6191},{"krate":0,"index":6192}],"decl_id":null,"docs":" A WebAssembly `table` directive in a module.\n","sig":null,"attributes":[{"value":"/ A WebAssembly `table` directive in a module.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13578577,"byte_end":13578625,"line_start":4,"line_end":4,"column_start":1,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":6189},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13578712,"byte_end":13578716,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::table::Table::span","value":"ast::token::Span","parent":{"krate":0,"index":6187},"children":[],"decl_id":null,"docs":" Where this table was defined.\n","sig":null,"attributes":[{"value":"/ Where this table was defined.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13578670,"byte_end":13578703,"line_start":7,"line_end":7,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":6190},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13578789,"byte_end":13578791,"line_start":10,"line_end":10,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::table::Table::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":6187},"children":[],"decl_id":null,"docs":" An optional name to refer to this table by.\n","sig":null,"attributes":[{"value":"/ An optional name to refer to this table by.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13578733,"byte_end":13578780,"line_start":9,"line_end":9,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6191},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13578939,"byte_end":13578946,"line_start":13,"line_end":13,"column_start":9,"column_end":16},"name":"exports","qualname":"::ast::table::Table::exports","value":"ast::export::InlineExport<'a>","parent":{"krate":0,"index":6187},"children":[],"decl_id":null,"docs":" If present, inline export annotations which indicate names this\n definition should be exported under.\n","sig":null,"attributes":[{"value":"/ If present, inline export annotations which indicate names this","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13578818,"byte_end":13578885,"line_start":11,"line_end":11,"column_start":5,"column_end":72}},{"value":"/ definition should be exported under.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13578890,"byte_end":13578930,"line_start":12,"line_end":12,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":6192},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13579038,"byte_end":13579042,"line_start":15,"line_end":15,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::table::Table::kind","value":"ast::table::TableKind<'a>","parent":{"krate":0,"index":6187},"children":[],"decl_id":null,"docs":" How this table is textually defined in the module.\n","sig":null,"attributes":[{"value":"/ How this table is textually defined in the module.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13578975,"byte_end":13579029,"line_start":14,"line_end":14,"column_start":5,"column_end":59}}]},{"kind":"StructVariant","id":{"krate":0,"index":6198},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13579244,"byte_end":13579250,"line_start":23,"line_end":23,"column_start":5,"column_end":11},"name":"Import","qualname":"::ast::table::TableKind::Import","value":"TableKind::Import { import, ty }","parent":{"krate":0,"index":6196},"children":[],"decl_id":null,"docs":" This table is actually an inlined import definition.\n","sig":null,"attributes":[{"value":"/ This table is actually an inlined import definition.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13579156,"byte_end":13579212,"line_start":21,"line_end":21,"column_start":5,"column_end":61}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13579217,"byte_end":13579239,"line_start":22,"line_end":22,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6201},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13579414,"byte_end":13579420,"line_start":29,"line_end":29,"column_start":5,"column_end":11},"name":"Normal","qualname":"::ast::table::TableKind::Normal","value":"TableKind::Normal(ast::TableType)","parent":{"krate":0,"index":6196},"children":[],"decl_id":null,"docs":" A typical memory definition which simply says the limits of the table\n","sig":null,"attributes":[{"value":"/ A typical memory definition which simply says the limits of the table","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13579336,"byte_end":13579409,"line_start":28,"line_end":28,"column_start":5,"column_end":78}}]},{"kind":"StructVariant","id":{"krate":0,"index":6204},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13579523,"byte_end":13579529,"line_start":32,"line_end":32,"column_start":5,"column_end":11},"name":"Inline","qualname":"::ast::table::TableKind::Inline","value":"TableKind::Inline { elem, payload }","parent":{"krate":0,"index":6196},"children":[],"decl_id":null,"docs":" The elem segments of this table, starting from 0, explicitly listed\n","sig":null,"attributes":[{"value":"/ The elem segments of this table, starting from 0, explicitly listed","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13579447,"byte_end":13579518,"line_start":31,"line_end":31,"column_start":5,"column_end":76}}]},{"kind":"Enum","id":{"krate":0,"index":6196},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13579136,"byte_end":13579145,"line_start":20,"line_end":20,"column_start":10,"column_end":19},"name":"TableKind","qualname":"::ast::table::TableKind","value":"pub enum TableKind<'a> {\n    Import {\n            import: ast::InlineImport,\n            ty: ast::TableType,\n        },\n    Normal(ast::TableType),\n    Inline {\n            elem: ast::RefType,\n            payload: ElemPayload,\n        },\n}","parent":null,"children":[{"krate":0,"index":6198},{"krate":0,"index":6201},{"krate":0,"index":6204}],"decl_id":null,"docs":" Different ways to textually define a table.\n","sig":null,"attributes":[{"value":"/ Different ways to textually define a table.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13579062,"byte_end":13579109,"line_start":18,"line_end":18,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":6210},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13581151,"byte_end":13581155,"line_start":86,"line_end":86,"column_start":12,"column_end":16},"name":"Elem","qualname":"::ast::table::Elem","value":"Elem { span, id, kind, payload }","parent":null,"children":[{"krate":0,"index":6212},{"krate":0,"index":6213},{"krate":0,"index":6214},{"krate":0,"index":6215}],"decl_id":null,"docs":" An `elem` segment in a WebAssembly module.\n","sig":null,"attributes":[{"value":"/ An `elem` segment in a WebAssembly module.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13581076,"byte_end":13581122,"line_start":84,"line_end":84,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":6212},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13581209,"byte_end":13581213,"line_start":88,"line_end":88,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::table::Elem::span","value":"ast::token::Span","parent":{"krate":0,"index":6210},"children":[],"decl_id":null,"docs":" Where this `elem` was defined.\n","sig":null,"attributes":[{"value":"/ Where this `elem` was defined.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13581166,"byte_end":13581200,"line_start":87,"line_end":87,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":6213},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13581294,"byte_end":13581296,"line_start":90,"line_end":90,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::table::Elem::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":6210},"children":[],"decl_id":null,"docs":" An optional name by which to refer to this segment.\n","sig":null,"attributes":[{"value":"/ An optional name by which to refer to this segment.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13581230,"byte_end":13581285,"line_start":89,"line_end":89,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":6214},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13581383,"byte_end":13581387,"line_start":92,"line_end":92,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::table::Elem::kind","value":"ast::table::ElemKind<'a>","parent":{"krate":0,"index":6210},"children":[],"decl_id":null,"docs":" The way this segment was defined in the module.\n","sig":null,"attributes":[{"value":"/ The way this segment was defined in the module.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13581323,"byte_end":13581374,"line_start":91,"line_end":91,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":6215},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13581487,"byte_end":13581494,"line_start":94,"line_end":94,"column_start":9,"column_end":16},"name":"payload","qualname":"::ast::table::Elem::payload","value":"ast::table::ElemPayload<'a>","parent":{"krate":0,"index":6210},"children":[],"decl_id":null,"docs":" The payload of this element segment, typically a list of functions.\n","sig":null,"attributes":[{"value":"/ The payload of this element segment, typically a list of functions.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13581407,"byte_end":13581478,"line_start":93,"line_end":93,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6221},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13581745,"byte_end":13581752,"line_start":102,"line_end":102,"column_start":5,"column_end":12},"name":"Passive","qualname":"::ast::table::ElemKind::Passive","value":"ElemKind::Passive","parent":{"krate":0,"index":6219},"children":[],"decl_id":null,"docs":" A passive segment that isn't associated with a table and can be used in\n various bulk-memory instructions.\n","sig":null,"attributes":[{"value":"/ A passive segment that isn't associated with a table and can be used in","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13581623,"byte_end":13581698,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/ various bulk-memory instructions.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13581703,"byte_end":13581740,"line_start":101,"line_end":101,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6223},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13581854,"byte_end":13581862,"line_start":106,"line_end":106,"column_start":5,"column_end":13},"name":"Declared","qualname":"::ast::table::ElemKind::Declared","value":"ElemKind::Declared","parent":{"krate":0,"index":6219},"children":[],"decl_id":null,"docs":" A declared element segment that is purely used to declare function\n references.\n","sig":null,"attributes":[{"value":"/ A declared element segment that is purely used to declare function","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13581759,"byte_end":13581829,"line_start":104,"line_end":104,"column_start":5,"column_end":75}},{"value":"/ references.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13581834,"byte_end":13581849,"line_start":105,"line_end":105,"column_start":5,"column_end":20}}]},{"kind":"StructVariant","id":{"krate":0,"index":6225},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13581920,"byte_end":13581926,"line_start":109,"line_end":109,"column_start":5,"column_end":11},"name":"Active","qualname":"::ast::table::ElemKind::Active","value":"ElemKind::Active { table, offset }","parent":{"krate":0,"index":6219},"children":[],"decl_id":null,"docs":" An active segment associated with a table.\n","sig":null,"attributes":[{"value":"/ An active segment associated with a table.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13581869,"byte_end":13581915,"line_start":108,"line_end":108,"column_start":5,"column_end":51}}]},{"kind":"Enum","id":{"krate":0,"index":6219},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13581604,"byte_end":13581612,"line_start":99,"line_end":99,"column_start":10,"column_end":18},"name":"ElemKind","qualname":"::ast::table::ElemKind","value":"pub enum ElemKind<'a> {\n    Passive,\n    Declared,\n    Active {\n            table: ast::ItemRef,\n            offset: ast::Expression,\n        },\n}","parent":null,"children":[{"krate":0,"index":6221},{"krate":0,"index":6223},{"krate":0,"index":6225}],"decl_id":null,"docs":" Different ways to define an element segment in an mdoule.\n","sig":null,"attributes":[{"value":"/ Different ways to define an element segment in an mdoule.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13581516,"byte_end":13581577,"line_start":97,"line_end":97,"column_start":1,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6233},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13582331,"byte_end":13582338,"line_start":121,"line_end":121,"column_start":5,"column_end":12},"name":"Indices","qualname":"::ast::table::ElemPayload::Indices","value":"ElemPayload::Indices(Vec<ast::ItemRef>)","parent":{"krate":0,"index":6231},"children":[],"decl_id":null,"docs":" This element segment has a contiguous list of function indices\n","sig":null,"attributes":[{"value":"/ This element segment has a contiguous list of function indices","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13582260,"byte_end":13582326,"line_start":120,"line_end":120,"column_start":5,"column_end":71}}]},{"kind":"StructVariant","id":{"krate":0,"index":6236},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13582516,"byte_end":13582521,"line_start":125,"line_end":125,"column_start":5,"column_end":10},"name":"Exprs","qualname":"::ast::table::ElemPayload::Exprs","value":"ElemPayload::Exprs { ty, exprs }","parent":{"krate":0,"index":6231},"children":[],"decl_id":null,"docs":" This element segment has a list of optional function indices,\n represented as expressions using `ref.func` and `ref.null`.\n","sig":null,"attributes":[{"value":"/ This element segment has a list of optional function indices,","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13582378,"byte_end":13582443,"line_start":123,"line_end":123,"column_start":5,"column_end":70}},{"value":"/ represented as expressions using `ref.func` and `ref.null`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13582448,"byte_end":13582511,"line_start":124,"line_end":124,"column_start":5,"column_end":68}}]},{"kind":"Enum","id":{"krate":0,"index":6231},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13582238,"byte_end":13582249,"line_start":119,"line_end":119,"column_start":10,"column_end":21},"name":"ElemPayload","qualname":"::ast::table::ElemPayload","value":"pub enum ElemPayload<'a> {\n    Indices(Vec<ast::ItemRef>),\n    Exprs {\n            ty: ast::RefType,\n            exprs: Vec<Option<ast::ItemRef>>,\n        },\n}","parent":null,"children":[{"krate":0,"index":6233},{"krate":0,"index":6236}],"decl_id":null,"docs":" Different ways to define the element segment payload in a module.\n","sig":null,"attributes":[{"value":"/ Different ways to define the element segment payload in a module.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13582135,"byte_end":13582204,"line_start":117,"line_end":117,"column_start":1,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6247},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13586301,"byte_end":13586304,"line_start":9,"line_end":9,"column_start":5,"column_end":8},"name":"I32","qualname":"::ast::types::ValType::I32","value":"ValType::I32","parent":{"krate":0,"index":6245},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6249},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13586310,"byte_end":13586313,"line_start":10,"line_end":10,"column_start":5,"column_end":8},"name":"I64","qualname":"::ast::types::ValType::I64","value":"ValType::I64","parent":{"krate":0,"index":6245},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6251},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13586319,"byte_end":13586322,"line_start":11,"line_end":11,"column_start":5,"column_end":8},"name":"F32","qualname":"::ast::types::ValType::F32","value":"ValType::F32","parent":{"krate":0,"index":6245},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6253},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13586328,"byte_end":13586331,"line_start":12,"line_end":12,"column_start":5,"column_end":8},"name":"F64","qualname":"::ast::types::ValType::F64","value":"ValType::F64","parent":{"krate":0,"index":6245},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6255},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13586337,"byte_end":13586341,"line_start":13,"line_end":13,"column_start":5,"column_end":9},"name":"V128","qualname":"::ast::types::ValType::V128","value":"ValType::V128","parent":{"krate":0,"index":6245},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6257},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13586347,"byte_end":13586350,"line_start":14,"line_end":14,"column_start":5,"column_end":8},"name":"Ref","qualname":"::ast::types::ValType::Ref","value":"ValType::Ref(RefType)","parent":{"krate":0,"index":6245},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6260},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13586369,"byte_end":13586372,"line_start":15,"line_end":15,"column_start":5,"column_end":8},"name":"Rtt","qualname":"::ast::types::ValType::Rtt","value":"ValType::Rtt(u32, ast::Index)","parent":{"krate":0,"index":6245},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6245},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13586283,"byte_end":13586290,"line_start":8,"line_end":8,"column_start":10,"column_end":17},"name":"ValType","qualname":"::ast::types::ValType","value":"pub enum ValType<'a> {\n    I32,\n    I64,\n    F32,\n    F64,\n    V128,\n    Ref(RefType),\n    Rtt(u32, ast::Index),\n}","parent":null,"children":[{"krate":0,"index":6247},{"krate":0,"index":6249},{"krate":0,"index":6251},{"krate":0,"index":6253},{"krate":0,"index":6255},{"krate":0,"index":6257},{"krate":0,"index":6260}],"decl_id":null,"docs":" The value types for a wasm module.\n","sig":null,"attributes":[{"value":"/ The value types for a wasm module.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13586161,"byte_end":13586199,"line_start":5,"line_end":5,"column_start":1,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13586200,"byte_end":13586222,"line_start":6,"line_end":6,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6289},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13588243,"byte_end":13588247,"line_start":75,"line_end":75,"column_start":5,"column_end":9},"name":"Func","qualname":"::ast::types::HeapType::Func","value":"HeapType::Func","parent":{"krate":0,"index":6287},"children":[],"decl_id":null,"docs":" An untyped function reference: funcref. This is part of the reference\n types proposal.\n","sig":null,"attributes":[{"value":"/ An untyped function reference: funcref. This is part of the reference","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13588141,"byte_end":13588214,"line_start":73,"line_end":73,"column_start":5,"column_end":78}},{"value":"/ types proposal.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13588219,"byte_end":13588238,"line_start":74,"line_end":74,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6291},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13588357,"byte_end":13588363,"line_start":78,"line_end":78,"column_start":5,"column_end":11},"name":"Extern","qualname":"::ast::types::HeapType::Extern","value":"HeapType::Extern","parent":{"krate":0,"index":6287},"children":[],"decl_id":null,"docs":" A reference to any host value: externref. This is part of the reference\n types proposal.\n","sig":null,"attributes":[{"value":"/ A reference to any host value: externref. This is part of the reference","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13588253,"byte_end":13588328,"line_start":76,"line_end":76,"column_start":5,"column_end":80}},{"value":"/ types proposal.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13588333,"byte_end":13588352,"line_start":77,"line_end":77,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6293},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13588462,"byte_end":13588465,"line_start":81,"line_end":81,"column_start":5,"column_end":8},"name":"Any","qualname":"::ast::types::HeapType::Any","value":"HeapType::Any","parent":{"krate":0,"index":6287},"children":[],"decl_id":null,"docs":" A reference to any reference value: anyref. This is part of the GC\n proposal.\n","sig":null,"attributes":[{"value":"/ A reference to any reference value: anyref. This is part of the GC","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13588369,"byte_end":13588439,"line_start":79,"line_end":79,"column_start":5,"column_end":75}},{"value":"/ proposal.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13588444,"byte_end":13588457,"line_start":80,"line_end":80,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6295},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13588573,"byte_end":13588576,"line_start":84,"line_end":84,"column_start":5,"column_end":8},"name":"Exn","qualname":"::ast::types::HeapType::Exn","value":"HeapType::Exn","parent":{"krate":0,"index":6287},"children":[],"decl_id":null,"docs":" A reference to an exception: exnref. This is part of the exception\n handling proposal.\n","sig":null,"attributes":[{"value":"/ A reference to an exception: exnref. This is part of the exception","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13588471,"byte_end":13588541,"line_start":82,"line_end":82,"column_start":5,"column_end":75}},{"value":"/ handling proposal.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13588546,"byte_end":13588568,"line_start":83,"line_end":83,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6297},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13588693,"byte_end":13588695,"line_start":87,"line_end":87,"column_start":5,"column_end":7},"name":"Eq","qualname":"::ast::types::HeapType::Eq","value":"HeapType::Eq","parent":{"krate":0,"index":6287},"children":[],"decl_id":null,"docs":" A reference that has an identity that can be compared: eqref. This is\n part of the GC proposal.\n","sig":null,"attributes":[{"value":"/ A reference that has an identity that can be compared: eqref. This is","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13588582,"byte_end":13588655,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/ part of the GC proposal.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13588660,"byte_end":13588688,"line_start":86,"line_end":86,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6299},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13588856,"byte_end":13588859,"line_start":90,"line_end":90,"column_start":5,"column_end":8},"name":"I31","qualname":"::ast::types::HeapType::I31","value":"HeapType::I31","parent":{"krate":0,"index":6287},"children":[],"decl_id":null,"docs":" An unboxed 31-bit integer: i31ref. This may be going away if there is no common\n supertype of all reference types. Part of the GC proposal.\n","sig":null,"attributes":[{"value":"/ An unboxed 31-bit integer: i31ref. This may be going away if there is no common","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13588701,"byte_end":13588784,"line_start":88,"line_end":88,"column_start":5,"column_end":88}},{"value":"/ supertype of all reference types. Part of the GC proposal.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13588789,"byte_end":13588851,"line_start":89,"line_end":89,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6301},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13588966,"byte_end":13588971,"line_start":93,"line_end":93,"column_start":5,"column_end":10},"name":"Index","qualname":"::ast::types::HeapType::Index","value":"HeapType::Index(ast::Index)","parent":{"krate":0,"index":6287},"children":[],"decl_id":null,"docs":" A reference to a function, struct, or array: ref T. This is part of the\n GC proposal.\n","sig":null,"attributes":[{"value":"/ A reference to a function, struct, or array: ref T. This is part of the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13588865,"byte_end":13588940,"line_start":91,"line_end":91,"column_start":5,"column_end":80}},{"value":"/ GC proposal.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13588945,"byte_end":13588961,"line_start":92,"line_end":92,"column_start":5,"column_end":21}}]},{"kind":"Enum","id":{"krate":0,"index":6287},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13588122,"byte_end":13588130,"line_start":72,"line_end":72,"column_start":10,"column_end":18},"name":"HeapType","qualname":"::ast::types::HeapType","value":"pub enum HeapType<'a> { Func, Extern, Any, Exn, Eq, I31, Index(ast::Index), }","parent":null,"children":[{"krate":0,"index":6289},{"krate":0,"index":6291},{"krate":0,"index":6293},{"krate":0,"index":6295},{"krate":0,"index":6297},{"krate":0,"index":6299},{"krate":0,"index":6301}],"decl_id":null,"docs":" A heap type for a reference type\n","sig":null,"attributes":[{"value":"/ A heap type for a reference type","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13588002,"byte_end":13588038,"line_start":69,"line_end":69,"column_start":1,"column_end":37}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13588039,"byte_end":13588061,"line_start":70,"line_end":70,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6327},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13590507,"byte_end":13590514,"line_start":143,"line_end":143,"column_start":12,"column_end":19},"name":"RefType","qualname":"::ast::types::RefType","value":"RefType { nullable, heap }","parent":null,"children":[{"krate":0,"index":6329},{"krate":0,"index":6330}],"decl_id":null,"docs":" A reference type in a wasm module.\n","sig":null,"attributes":[{"value":"/ A reference type in a wasm module.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13590383,"byte_end":13590421,"line_start":140,"line_end":140,"column_start":1,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13590422,"byte_end":13590444,"line_start":141,"line_end":141,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":6329},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13590529,"byte_end":13590537,"line_start":144,"line_end":144,"column_start":9,"column_end":17},"name":"nullable","qualname":"::ast::types::RefType::nullable","value":"bool","parent":{"krate":0,"index":6327},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6330},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13590553,"byte_end":13590557,"line_start":145,"line_end":145,"column_start":9,"column_end":13},"name":"heap","qualname":"::ast::types::RefType::heap","value":"ast::types::HeapType<'a>","parent":{"krate":0,"index":6327},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1877},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13590672,"byte_end":13590676,"line_start":150,"line_end":150,"column_start":12,"column_end":16},"name":"func","qualname":"<RefType>::func","value":"pub fn func() -> Self","parent":null,"children":[],"decl_id":null,"docs":" A `funcref` as an abbreviation for `(ref null func)`.\n","sig":null,"attributes":[{"value":"/ A `funcref` as an abbreviation for `(ref null func)`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13590603,"byte_end":13590660,"line_start":149,"line_end":149,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1878},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13590864,"byte_end":13590872,"line_start":158,"line_end":158,"column_start":12,"column_end":20},"name":"extern","qualname":"<RefType>::extern","value":"pub fn r#extern() -> Self","parent":null,"children":[],"decl_id":null,"docs":" An `externref` as an abbreviation for `(ref null extern)`.\n","sig":null,"attributes":[{"value":"/ An `externref` as an abbreviation for `(ref null extern)`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13590790,"byte_end":13590852,"line_start":157,"line_end":157,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1879},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13591056,"byte_end":13591059,"line_start":166,"line_end":166,"column_start":12,"column_end":15},"name":"any","qualname":"<RefType>::any","value":"pub fn any() -> Self","parent":null,"children":[],"decl_id":null,"docs":" An `anyref` as an abbreviation for `(ref null any)`.\n","sig":null,"attributes":[{"value":"/ An `anyref` as an abbreviation for `(ref null any)`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13590988,"byte_end":13591044,"line_start":165,"line_end":165,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1880},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13591240,"byte_end":13591243,"line_start":174,"line_end":174,"column_start":12,"column_end":15},"name":"exn","qualname":"<RefType>::exn","value":"pub fn exn() -> Self","parent":null,"children":[],"decl_id":null,"docs":" An `exnref` as an abbreviation for `(ref null exn)`.\n","sig":null,"attributes":[{"value":"/ An `exnref` as an abbreviation for `(ref null exn)`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13591172,"byte_end":13591228,"line_start":173,"line_end":173,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1881},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13591422,"byte_end":13591424,"line_start":182,"line_end":182,"column_start":12,"column_end":14},"name":"eq","qualname":"<RefType>::eq","value":"pub fn eq() -> Self","parent":null,"children":[],"decl_id":null,"docs":" An `eqref` as an abbreviation for `(ref null eq)`.\n","sig":null,"attributes":[{"value":"/ An `eqref` as an abbreviation for `(ref null eq)`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13591356,"byte_end":13591410,"line_start":181,"line_end":181,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1882},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13591604,"byte_end":13591607,"line_start":190,"line_end":190,"column_start":12,"column_end":15},"name":"i31","qualname":"<RefType>::i31","value":"pub fn i31() -> Self","parent":null,"children":[],"decl_id":null,"docs":" An `i31ref` as an abbreviation for `(ref null i31)`.\n","sig":null,"attributes":[{"value":"/ An `i31ref` as an abbreviation for `(ref null i31)`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13591536,"byte_end":13591592,"line_start":189,"line_end":189,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6356},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13594065,"byte_end":13594067,"line_start":268,"line_end":268,"column_start":5,"column_end":7},"name":"I8","qualname":"::ast::types::StorageType::I8","value":"StorageType::I8","parent":{"krate":0,"index":6354},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6358},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13594073,"byte_end":13594076,"line_start":269,"line_end":269,"column_start":5,"column_end":8},"name":"I16","qualname":"::ast::types::StorageType::I16","value":"StorageType::I16","parent":{"krate":0,"index":6354},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6360},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13594082,"byte_end":13594085,"line_start":270,"line_end":270,"column_start":5,"column_end":8},"name":"Val","qualname":"::ast::types::StorageType::Val","value":"StorageType::Val(ValType)","parent":{"krate":0,"index":6354},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6354},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13594043,"byte_end":13594054,"line_start":267,"line_end":267,"column_start":10,"column_end":21},"name":"StorageType","qualname":"::ast::types::StorageType","value":"pub enum StorageType<'a> { I8, I16, Val(ValType), }","parent":null,"children":[{"krate":0,"index":6356},{"krate":0,"index":6358},{"krate":0,"index":6360}],"decl_id":null,"docs":" The types of values that may be used in a struct or array.\n","sig":null,"attributes":[{"value":"/ The types of values that may be used in a struct or array.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13593897,"byte_end":13593959,"line_start":264,"line_end":264,"column_start":1,"column_end":63}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13593960,"byte_end":13593982,"line_start":265,"line_end":265,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6386},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13594708,"byte_end":13594718,"line_start":292,"line_end":292,"column_start":12,"column_end":22},"name":"GlobalType","qualname":"::ast::types::GlobalType","value":"GlobalType { ty, mutable }","parent":null,"children":[{"krate":0,"index":6388},{"krate":0,"index":6389}],"decl_id":null,"docs":" Type for a `global` in a wasm module\n","sig":null,"attributes":[{"value":"/ Type for a `global` in a wasm module","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13594605,"byte_end":13594645,"line_start":290,"line_end":290,"column_start":1,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":6388},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13594775,"byte_end":13594777,"line_start":294,"line_end":294,"column_start":9,"column_end":11},"name":"ty","qualname":"::ast::types::GlobalType::ty","value":"ast::types::ValType<'a>","parent":{"krate":0,"index":6386},"children":[],"decl_id":null,"docs":" The element type of this `global`\n","sig":null,"attributes":[{"value":"/ The element type of this `global`","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13594729,"byte_end":13594766,"line_start":293,"line_end":293,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":6389},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13594853,"byte_end":13594860,"line_start":296,"line_end":296,"column_start":9,"column_end":16},"name":"mutable","qualname":"::ast::types::GlobalType::mutable","value":"bool","parent":{"krate":0,"index":6386},"children":[],"decl_id":null,"docs":" Whether or not the global is mutable or not.\n","sig":null,"attributes":[{"value":"/ Whether or not the global is mutable or not.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13594796,"byte_end":13594844,"line_start":295,"line_end":295,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":6413},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13595473,"byte_end":13595479,"line_start":320,"line_end":320,"column_start":12,"column_end":18},"name":"Limits","qualname":"::ast::types::Limits","value":"Limits { min, max }","parent":null,"children":[{"krate":0,"index":6414},{"krate":0,"index":6415}],"decl_id":null,"docs":" Min/max limits used for tables/memories.\n","sig":null,"attributes":[{"value":"/ Min/max limits used for tables/memories.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13595366,"byte_end":13595410,"line_start":318,"line_end":318,"column_start":1,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":6414},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13595541,"byte_end":13595544,"line_start":322,"line_end":322,"column_start":9,"column_end":12},"name":"min","qualname":"::ast::types::Limits::min","value":"u32","parent":{"krate":0,"index":6413},"children":[],"decl_id":null,"docs":" The minimum number of units for this type.\n","sig":null,"attributes":[{"value":"/ The minimum number of units for this type.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13595486,"byte_end":13595532,"line_start":321,"line_end":321,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":6415},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13595618,"byte_end":13595621,"line_start":324,"line_end":324,"column_start":9,"column_end":12},"name":"max","qualname":"::ast::types::Limits::max","value":"std::option::Option<u32>","parent":{"krate":0,"index":6413},"children":[],"decl_id":null,"docs":" An optional maximum number of units for this type.\n","sig":null,"attributes":[{"value":"/ An optional maximum number of units for this type.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13595555,"byte_end":13595609,"line_start":323,"line_end":323,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":6431},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13596027,"byte_end":13596035,"line_start":341,"line_end":341,"column_start":12,"column_end":20},"name":"Limits64","qualname":"::ast::types::Limits64","value":"Limits64 { min, max }","parent":null,"children":[{"krate":0,"index":6432},{"krate":0,"index":6433}],"decl_id":null,"docs":" Min/max limits used for 64-bit memories\n","sig":null,"attributes":[{"value":"/ Min/max limits used for 64-bit memories","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13595921,"byte_end":13595964,"line_start":339,"line_end":339,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":6432},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13596097,"byte_end":13596100,"line_start":343,"line_end":343,"column_start":9,"column_end":12},"name":"min","qualname":"::ast::types::Limits64::min","value":"u64","parent":{"krate":0,"index":6431},"children":[],"decl_id":null,"docs":" The minimum number of units for this type.\n","sig":null,"attributes":[{"value":"/ The minimum number of units for this type.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13596042,"byte_end":13596088,"line_start":342,"line_end":342,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":6433},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13596174,"byte_end":13596177,"line_start":345,"line_end":345,"column_start":9,"column_end":12},"name":"max","qualname":"::ast::types::Limits64::max","value":"std::option::Option<u64>","parent":{"krate":0,"index":6431},"children":[],"decl_id":null,"docs":" An optional maximum number of units for this type.\n","sig":null,"attributes":[{"value":"/ An optional maximum number of units for this type.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13596111,"byte_end":13596165,"line_start":344,"line_end":344,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":6449},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13596590,"byte_end":13596599,"line_start":362,"line_end":362,"column_start":12,"column_end":21},"name":"TableType","qualname":"::ast::types::TableType","value":"TableType { limits, elem }","parent":null,"children":[{"krate":0,"index":6451},{"krate":0,"index":6452}],"decl_id":null,"docs":" Configuration for a table of a wasm mdoule\n","sig":null,"attributes":[{"value":"/ Configuration for a table of a wasm mdoule","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13596481,"byte_end":13596527,"line_start":360,"line_end":360,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":6451},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13596664,"byte_end":13596670,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"name":"limits","qualname":"::ast::types::TableType::limits","value":"ast::types::Limits","parent":{"krate":0,"index":6449},"children":[],"decl_id":null,"docs":" Limits on the element sizes of this table\n","sig":null,"attributes":[{"value":"/ Limits on the element sizes of this table","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13596610,"byte_end":13596655,"line_start":363,"line_end":363,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":6452},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13596737,"byte_end":13596741,"line_start":366,"line_end":366,"column_start":9,"column_end":13},"name":"elem","qualname":"::ast::types::TableType::elem","value":"ast::types::RefType<'a>","parent":{"krate":0,"index":6449},"children":[],"decl_id":null,"docs":" The type of element stored in this table\n","sig":null,"attributes":[{"value":"/ The type of element stored in this table","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13596684,"byte_end":13596728,"line_start":365,"line_end":365,"column_start":5,"column_end":49}}]},{"kind":"StructVariant","id":{"krate":0,"index":6477},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13597113,"byte_end":13597116,"line_start":382,"line_end":382,"column_start":5,"column_end":8},"name":"B32","qualname":"::ast::types::MemoryType::B32","value":"MemoryType::B32 { limits, shared }","parent":{"krate":0,"index":6476},"children":[],"decl_id":null,"docs":" A 32-bit memory\n","sig":null,"attributes":[{"value":"/ A 32-bit memory","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13597089,"byte_end":13597108,"line_start":381,"line_end":381,"column_start":5,"column_end":24}}]},{"kind":"StructVariant","id":{"krate":0,"index":6480},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13597317,"byte_end":13597320,"line_start":389,"line_end":389,"column_start":5,"column_end":8},"name":"B64","qualname":"::ast::types::MemoryType::B64","value":"MemoryType::B64 { limits, shared }","parent":{"krate":0,"index":6476},"children":[],"decl_id":null,"docs":" A 64-bit memory\n","sig":null,"attributes":[{"value":"/ A 64-bit memory","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13597293,"byte_end":13597312,"line_start":388,"line_end":388,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":6476},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13597072,"byte_end":13597082,"line_start":380,"line_end":380,"column_start":10,"column_end":20},"name":"MemoryType","qualname":"::ast::types::MemoryType","value":"pub enum MemoryType {\n    B32 {\n            limits: Limits,\n            shared: bool,\n        },\n    B64 {\n            limits: Limits64,\n            shared: bool,\n        },\n}","parent":null,"children":[{"krate":0,"index":6477},{"krate":0,"index":6480}],"decl_id":null,"docs":" Configuration for a memory of a wasm module\n","sig":null,"attributes":[{"value":"/ Configuration for a memory of a wasm module","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13596964,"byte_end":13597011,"line_start":378,"line_end":378,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":6498},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13598174,"byte_end":13598186,"line_start":415,"line_end":415,"column_start":12,"column_end":24},"name":"FunctionType","qualname":"::ast::types::FunctionType","value":"FunctionType { params, results }","parent":null,"children":[{"krate":0,"index":6500},{"krate":0,"index":6501}],"decl_id":null,"docs":" A function type with parameters and results.\n","sig":null,"attributes":[{"value":"/ A function type with parameters and results.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13598081,"byte_end":13598129,"line_start":413,"line_end":413,"column_start":1,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":6500},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13598346,"byte_end":13598352,"line_start":418,"line_end":418,"column_start":9,"column_end":15},"name":"params","qualname":"::ast::types::FunctionType::params","value":"std::boxed::Box<[(std::option::Option<ast::token::Id<'a>>, std::option::Option<ast::token::NameAnnotation<'a>>, ast::types::ValType<'a>)]>","parent":{"krate":0,"index":6498},"children":[],"decl_id":null,"docs":" The parameters of a function, optionally each having an identifier for\n name resolution and a name for the custom `name` section.\n","sig":null,"attributes":[{"value":"/ The parameters of a function, optionally each having an identifier for","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13598197,"byte_end":13598271,"line_start":416,"line_end":416,"column_start":5,"column_end":79}},{"value":"/ name resolution and a name for the custom `name` section.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13598276,"byte_end":13598337,"line_start":417,"line_end":417,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":6501},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13598541,"byte_end":13598548,"line_start":426,"line_end":426,"column_start":9,"column_end":16},"name":"results","qualname":"::ast::types::FunctionType::results","value":"std::boxed::Box<[ast::types::ValType<'a>]>","parent":{"krate":0,"index":6498},"children":[],"decl_id":null,"docs":" The results types of a function.\n","sig":null,"attributes":[{"value":"/ The results types of a function.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13598496,"byte_end":13598532,"line_start":425,"line_end":425,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":6511},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13601142,"byte_end":13601161,"line_start":505,"line_end":505,"column_start":12,"column_end":31},"name":"FunctionTypeNoNames","qualname":"::ast::types::FunctionTypeNoNames","value":"","parent":null,"children":[],"decl_id":null,"docs":" A function type with parameters and results.\n","sig":null,"attributes":[{"value":"/ A function type with parameters and results.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13601049,"byte_end":13601097,"line_start":503,"line_end":503,"column_start":1,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":6514},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13601166,"byte_end":13601186,"line_start":505,"line_end":505,"column_start":36,"column_end":56},"name":"0","qualname":"::ast::types::FunctionTypeNoNames::0","value":"ast::types::FunctionType<'a>","parent":{"krate":0,"index":6511},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6524},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13601912,"byte_end":13601922,"line_start":536,"line_end":536,"column_start":12,"column_end":22},"name":"StructType","qualname":"::ast::types::StructType","value":"StructType { fields }","parent":null,"children":[{"krate":0,"index":6526}],"decl_id":null,"docs":" A struct type with fields.\n","sig":null,"attributes":[{"value":"/ A struct type with fields.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13601846,"byte_end":13601876,"line_start":534,"line_end":534,"column_start":1,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":6526},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13601970,"byte_end":13601976,"line_start":538,"line_end":538,"column_start":9,"column_end":15},"name":"fields","qualname":"::ast::types::StructType::fields","value":"std::vec::Vec<ast::types::StructField<'a>>","parent":{"krate":0,"index":6524},"children":[],"decl_id":null,"docs":" The fields of the struct\n","sig":null,"attributes":[{"value":"/ The fields of the struct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13601933,"byte_end":13601961,"line_start":537,"line_end":537,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":6533},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13602629,"byte_end":13602640,"line_start":561,"line_end":561,"column_start":12,"column_end":23},"name":"StructField","qualname":"::ast::types::StructField","value":"StructField { id, mutable, ty }","parent":null,"children":[{"krate":0,"index":6535},{"krate":0,"index":6536},{"krate":0,"index":6537}],"decl_id":null,"docs":" A field of a struct type.\n","sig":null,"attributes":[{"value":"/ A field of a struct type.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13602564,"byte_end":13602593,"line_start":559,"line_end":559,"column_start":1,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":6535},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13602707,"byte_end":13602709,"line_start":563,"line_end":563,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::types::StructField::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":6533},"children":[],"decl_id":null,"docs":" An optional identifier for name resolution.\n","sig":null,"attributes":[{"value":"/ An optional identifier for name resolution.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13602651,"byte_end":13602698,"line_start":562,"line_end":562,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6536},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13602790,"byte_end":13602797,"line_start":565,"line_end":565,"column_start":9,"column_end":16},"name":"mutable","qualname":"::ast::types::StructField::mutable","value":"bool","parent":{"krate":0,"index":6533},"children":[],"decl_id":null,"docs":" Whether this field may be mutated or not.\n","sig":null,"attributes":[{"value":"/ Whether this field may be mutated or not.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13602736,"byte_end":13602781,"line_start":564,"line_end":564,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":6537},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13602860,"byte_end":13602862,"line_start":567,"line_end":567,"column_start":9,"column_end":11},"name":"ty","qualname":"::ast::types::StructField::ty","value":"ast::types::StorageType<'a>","parent":{"krate":0,"index":6533},"children":[],"decl_id":null,"docs":" The storage type stored in this field.\n","sig":null,"attributes":[{"value":"/ The storage type stored in this field.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13602809,"byte_end":13602851,"line_start":566,"line_end":566,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":6544},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13603467,"byte_end":13603476,"line_start":588,"line_end":588,"column_start":12,"column_end":21},"name":"ArrayType","qualname":"::ast::types::ArrayType","value":"ArrayType { mutable, ty }","parent":null,"children":[{"krate":0,"index":6546},{"krate":0,"index":6547}],"decl_id":null,"docs":" An array type with fields.\n","sig":null,"attributes":[{"value":"/ An array type with fields.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13603401,"byte_end":13603431,"line_start":586,"line_end":586,"column_start":1,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":6546},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13603541,"byte_end":13603548,"line_start":590,"line_end":590,"column_start":9,"column_end":16},"name":"mutable","qualname":"::ast::types::ArrayType::mutable","value":"bool","parent":{"krate":0,"index":6544},"children":[],"decl_id":null,"docs":" Whether this field may be mutated or not.\n","sig":null,"attributes":[{"value":"/ Whether this field may be mutated or not.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13603487,"byte_end":13603532,"line_start":589,"line_end":589,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":6547},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13603611,"byte_end":13603613,"line_start":592,"line_end":592,"column_start":9,"column_end":11},"name":"ty","qualname":"::ast::types::ArrayType::ty","value":"ast::types::StorageType<'a>","parent":{"krate":0,"index":6544},"children":[],"decl_id":null,"docs":" The storage type stored in this field.\n","sig":null,"attributes":[{"value":"/ The storage type stored in this field.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13603560,"byte_end":13603602,"line_start":591,"line_end":591,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":6554},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13604155,"byte_end":13604165,"line_start":612,"line_end":612,"column_start":12,"column_end":22},"name":"ModuleType","qualname":"::ast::types::ModuleType","value":"ModuleType { imports, exports }","parent":null,"children":[{"krate":0,"index":6556},{"krate":0,"index":6557}],"decl_id":null,"docs":" A type for a nested module\n","sig":null,"attributes":[{"value":"/ A type for a nested module","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13604080,"byte_end":13604110,"line_start":610,"line_end":610,"column_start":1,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":6556},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13604240,"byte_end":13604247,"line_start":614,"line_end":614,"column_start":9,"column_end":16},"name":"imports","qualname":"::ast::types::ModuleType::imports","value":"std::vec::Vec<ast::import::Import<'a>>","parent":{"krate":0,"index":6554},"children":[],"decl_id":null,"docs":" The imports that are expected for this module type.\n","sig":null,"attributes":[{"value":"/ The imports that are expected for this module type.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13604176,"byte_end":13604231,"line_start":613,"line_end":613,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":6557},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13604342,"byte_end":13604349,"line_start":616,"line_end":616,"column_start":9,"column_end":16},"name":"exports","qualname":"::ast::types::ModuleType::exports","value":"std::vec::Vec<ast::types::ExportType<'a>>","parent":{"krate":0,"index":6554},"children":[],"decl_id":null,"docs":" The exports that this module type is expected to have.\n","sig":null,"attributes":[{"value":"/ The exports that this module type is expected to have.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13604275,"byte_end":13604333,"line_start":615,"line_end":615,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":6567},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13605321,"byte_end":13605333,"line_start":655,"line_end":655,"column_start":12,"column_end":24},"name":"InstanceType","qualname":"::ast::types::InstanceType","value":"InstanceType { exports }","parent":null,"children":[{"krate":0,"index":6569}],"decl_id":null,"docs":" A type for a nested instance\n","sig":null,"attributes":[{"value":"/ A type for a nested instance","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13605244,"byte_end":13605276,"line_start":653,"line_end":653,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":6569},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13605394,"byte_end":13605401,"line_start":657,"line_end":657,"column_start":9,"column_end":16},"name":"exports","qualname":"::ast::types::InstanceType::exports","value":"std::vec::Vec<ast::types::ExportType<'a>>","parent":{"krate":0,"index":6567},"children":[],"decl_id":null,"docs":" The exported types from this instance\n","sig":null,"attributes":[{"value":"/ The exported types from this instance","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13605344,"byte_end":13605385,"line_start":656,"line_end":656,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":6579},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13606151,"byte_end":13606161,"line_start":689,"line_end":689,"column_start":12,"column_end":22},"name":"ExportType","qualname":"::ast::types::ExportType","value":"ExportType { span, name, item }","parent":null,"children":[{"krate":0,"index":6581},{"krate":0,"index":6582},{"krate":0,"index":6583}],"decl_id":null,"docs":" The type of an exported item from a module or instance.\n","sig":null,"attributes":[{"value":"/ The type of an exported item from a module or instance.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13606056,"byte_end":13606115,"line_start":687,"line_end":687,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":6581},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13606215,"byte_end":13606219,"line_start":691,"line_end":691,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::types::ExportType::span","value":"ast::token::Span","parent":{"krate":0,"index":6579},"children":[],"decl_id":null,"docs":" Where this export was defined.\n","sig":null,"attributes":[{"value":"/ Where this export was defined.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13606172,"byte_end":13606206,"line_start":690,"line_end":690,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":6582},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13606273,"byte_end":13606277,"line_start":693,"line_end":693,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::types::ExportType::name","value":"&'a str","parent":{"krate":0,"index":6579},"children":[],"decl_id":null,"docs":" The name of this export.\n","sig":null,"attributes":[{"value":"/ The name of this export.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13606236,"byte_end":13606264,"line_start":692,"line_end":692,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":6583},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13606347,"byte_end":13606351,"line_start":695,"line_end":695,"column_start":9,"column_end":13},"name":"item","qualname":"::ast::types::ExportType::item","value":"ast::import::ItemSig<'a>","parent":{"krate":0,"index":6579},"children":[],"decl_id":null,"docs":" The signature of the item that's exported.\n","sig":null,"attributes":[{"value":"/ The signature of the item that's exported.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13606292,"byte_end":13606338,"line_start":694,"line_end":694,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6592},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13606764,"byte_end":13606768,"line_start":711,"line_end":711,"column_start":5,"column_end":9},"name":"Func","qualname":"::ast::types::TypeDef::Func","value":"TypeDef::Func(FunctionType)","parent":{"krate":0,"index":6590},"children":[],"decl_id":null,"docs":" A function type definition.\n","sig":null,"attributes":[{"value":"/ A function type definition.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13606728,"byte_end":13606759,"line_start":710,"line_end":710,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6595},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13606826,"byte_end":13606832,"line_start":713,"line_end":713,"column_start":5,"column_end":11},"name":"Struct","qualname":"::ast::types::TypeDef::Struct","value":"TypeDef::Struct(StructType)","parent":{"krate":0,"index":6590},"children":[],"decl_id":null,"docs":" A struct type definition.\n","sig":null,"attributes":[{"value":"/ A struct type definition.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13606792,"byte_end":13606821,"line_start":712,"line_end":712,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6598},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13606888,"byte_end":13606893,"line_start":715,"line_end":715,"column_start":5,"column_end":10},"name":"Array","qualname":"::ast::types::TypeDef::Array","value":"TypeDef::Array(ArrayType)","parent":{"krate":0,"index":6590},"children":[],"decl_id":null,"docs":" An array type definition.\n","sig":null,"attributes":[{"value":"/ An array type definition.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13606854,"byte_end":13606883,"line_start":714,"line_end":714,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6601},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13606948,"byte_end":13606954,"line_start":717,"line_end":717,"column_start":5,"column_end":11},"name":"Module","qualname":"::ast::types::TypeDef::Module","value":"TypeDef::Module(ModuleType)","parent":{"krate":0,"index":6590},"children":[],"decl_id":null,"docs":" A module type definition.\n","sig":null,"attributes":[{"value":"/ A module type definition.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13606914,"byte_end":13606943,"line_start":716,"line_end":716,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6604},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13607013,"byte_end":13607021,"line_start":719,"line_end":719,"column_start":5,"column_end":13},"name":"Instance","qualname":"::ast::types::TypeDef::Instance","value":"TypeDef::Instance(InstanceType)","parent":{"krate":0,"index":6590},"children":[],"decl_id":null,"docs":" An instance type definition.\n","sig":null,"attributes":[{"value":"/ An instance type definition.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13606976,"byte_end":13607008,"line_start":718,"line_end":718,"column_start":5,"column_end":37}}]},{"kind":"Enum","id":{"krate":0,"index":6590},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13606710,"byte_end":13606717,"line_start":709,"line_end":709,"column_start":10,"column_end":17},"name":"TypeDef","qualname":"::ast::types::TypeDef","value":"pub enum TypeDef<'a> {\n    Func(FunctionType),\n    Struct(StructType),\n    Array(ArrayType),\n    Module(ModuleType),\n    Instance(InstanceType),\n}","parent":null,"children":[{"krate":0,"index":6592},{"krate":0,"index":6595},{"krate":0,"index":6598},{"krate":0,"index":6601},{"krate":0,"index":6604}],"decl_id":null,"docs":" A definition of a type.\n","sig":null,"attributes":[{"value":"/ A definition of a type.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13606656,"byte_end":13606683,"line_start":707,"line_end":707,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":6610},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13607107,"byte_end":13607111,"line_start":724,"line_end":724,"column_start":12,"column_end":16},"name":"Type","qualname":"::ast::types::Type","value":"Type { span, id, def }","parent":null,"children":[{"krate":0,"index":6612},{"krate":0,"index":6613},{"krate":0,"index":6614}],"decl_id":null,"docs":" A type declaration in a module\n","sig":null,"attributes":[{"value":"/ A type declaration in a module","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13607044,"byte_end":13607078,"line_start":722,"line_end":722,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":6612},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13607163,"byte_end":13607167,"line_start":726,"line_end":726,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::types::Type::span","value":"ast::token::Span","parent":{"krate":0,"index":6610},"children":[],"decl_id":null,"docs":" Where this type was defined.\n","sig":null,"attributes":[{"value":"/ Where this type was defined.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13607122,"byte_end":13607154,"line_start":725,"line_end":725,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":6613},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13607281,"byte_end":13607283,"line_start":729,"line_end":729,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::types::Type::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":6610},"children":[],"decl_id":null,"docs":" An optional identifer to refer to this `type` by as part of name\n resolution.\n","sig":null,"attributes":[{"value":"/ An optional identifer to refer to this `type` by as part of name","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13607184,"byte_end":13607252,"line_start":727,"line_end":727,"column_start":5,"column_end":73}},{"value":"/ resolution.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13607257,"byte_end":13607272,"line_start":728,"line_end":728,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":6614},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13607353,"byte_end":13607356,"line_start":731,"line_end":731,"column_start":9,"column_end":12},"name":"def","qualname":"::ast::types::Type::def","value":"ast::types::TypeDef<'a>","parent":{"krate":0,"index":6610},"children":[],"decl_id":null,"docs":" The type that we're declaring.\n","sig":null,"attributes":[{"value":"/ The type that we're declaring.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13607310,"byte_end":13607344,"line_start":730,"line_end":730,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":6618},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13608570,"byte_end":13608577,"line_start":765,"line_end":765,"column_start":12,"column_end":19},"name":"TypeUse","qualname":"::ast::types::TypeUse","value":"TypeUse { index, inline }","parent":null,"children":[{"krate":0,"index":6621},{"krate":0,"index":6622}],"decl_id":null,"docs":" A reference to a type defined in this module.\n","sig":null,"attributes":[{"value":"/ A reference to a type defined in this module.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13608485,"byte_end":13608534,"line_start":763,"line_end":763,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":6621},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13608655,"byte_end":13608660,"line_start":767,"line_end":767,"column_start":9,"column_end":14},"name":"index","qualname":"::ast::types::TypeUse::index","value":"std::option::Option<ast::token::ItemRef<'a, ast::kw::r#type>>","parent":{"krate":0,"index":6618},"children":[],"decl_id":null,"docs":" The type that we're referencing, if it was present.\n","sig":null,"attributes":[{"value":"/ The type that we're referencing, if it was present.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13608591,"byte_end":13608646,"line_start":766,"line_end":766,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":6622},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13608745,"byte_end":13608751,"line_start":769,"line_end":769,"column_start":9,"column_end":15},"name":"inline","qualname":"::ast::types::TypeUse::inline","value":"std::option::Option<T>","parent":{"krate":0,"index":6618},"children":[],"decl_id":null,"docs":" The inline type, if present.\n","sig":null,"attributes":[{"value":"/ The inline type, if present.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13608704,"byte_end":13608736,"line_start":768,"line_end":768,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1971},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13608920,"byte_end":13608934,"line_start":775,"line_end":775,"column_start":12,"column_end":26},"name":"new_with_index","qualname":"<TypeUse>::new_with_index","value":"pub fn new_with_index(ast::Index) -> TypeUse","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new instance of `TypeUse` without an inline definition but\n with an index specified.\n","sig":null,"attributes":[{"value":"/ Constructs a new instance of `TypeUse` without an inline definition but","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13608800,"byte_end":13608875,"line_start":773,"line_end":773,"column_start":5,"column_end":80}},{"value":"/ with an index specified.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13608880,"byte_end":13608908,"line_start":774,"line_end":774,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":2015},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13610255,"byte_end":13610259,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Wast","qualname":"::ast::wast::Wast","value":"Wast { directives }","parent":null,"children":[{"krate":0,"index":2017}],"decl_id":null,"docs":" A parsed representation of a `*.wast` file.","sig":null,"attributes":[{"value":"/ A parsed representation of a `*.wast` file.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13609972,"byte_end":13610019,"line_start":5,"line_end":5,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13610020,"byte_end":13610023,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ WAST files are not officially specified but are used in the official test","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13610024,"byte_end":13610101,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"/ suite to write official spec tests for wasm. This type represents a parsed","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13610102,"byte_end":13610180,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ `*.wast` file which parses a list of directives in a file.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13610181,"byte_end":13610243,"line_start":9,"line_end":9,"column_start":1,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":2017},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13610301,"byte_end":13610311,"line_start":12,"line_end":12,"column_start":9,"column_end":19},"name":"directives","qualname":"::ast::wast::Wast::directives","value":"std::vec::Vec<ast::wast::WastDirective<'a>>","parent":{"krate":0,"index":2015},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13610270,"byte_end":13610292,"line_start":11,"line_end":11,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2029},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13611622,"byte_end":13611628,"line_start":55,"line_end":55,"column_start":5,"column_end":11},"name":"Module","qualname":"::ast::wast::WastDirective::Module","value":"WastDirective::Module(ast::Module)","parent":{"krate":0,"index":2027},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2032},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13611651,"byte_end":13611662,"line_start":56,"line_end":56,"column_start":5,"column_end":16},"name":"QuoteModule","qualname":"::ast::wast::WastDirective::QuoteModule","value":"WastDirective::QuoteModule { span, source }","parent":{"krate":0,"index":2027},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2035},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13611732,"byte_end":13611747,"line_start":60,"line_end":60,"column_start":5,"column_end":20},"name":"AssertMalformed","qualname":"::ast::wast::WastDirective::AssertMalformed","value":"WastDirective::AssertMalformed { span, module, message }","parent":{"krate":0,"index":2027},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2039},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13611845,"byte_end":13611858,"line_start":65,"line_end":65,"column_start":5,"column_end":18},"name":"AssertInvalid","qualname":"::ast::wast::WastDirective::AssertInvalid","value":"WastDirective::AssertInvalid { span, module, message }","parent":{"krate":0,"index":2027},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2043},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13611956,"byte_end":13611964,"line_start":70,"line_end":70,"column_start":5,"column_end":13},"name":"Register","qualname":"::ast::wast::WastDirective::Register","value":"WastDirective::Register { span, name, module }","parent":{"krate":0,"index":2027},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2047},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13612063,"byte_end":13612069,"line_start":75,"line_end":75,"column_start":5,"column_end":11},"name":"Invoke","qualname":"::ast::wast::WastDirective::Invoke","value":"WastDirective::Invoke(WastInvoke)","parent":{"krate":0,"index":2027},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2050},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13612091,"byte_end":13612101,"line_start":76,"line_end":76,"column_start":5,"column_end":15},"name":"AssertTrap","qualname":"::ast::wast::WastDirective::AssertTrap","value":"WastDirective::AssertTrap { span, exec, message }","parent":{"krate":0,"index":2027},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2054},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13612197,"byte_end":13612209,"line_start":81,"line_end":81,"column_start":5,"column_end":17},"name":"AssertReturn","qualname":"::ast::wast::WastDirective::AssertReturn","value":"WastDirective::AssertReturn { span, exec, results }","parent":{"krate":0,"index":2027},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2058},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13612328,"byte_end":13612344,"line_start":86,"line_end":86,"column_start":5,"column_end":21},"name":"AssertExhaustion","qualname":"::ast::wast::WastDirective::AssertExhaustion","value":"WastDirective::AssertExhaustion { span, call, message }","parent":{"krate":0,"index":2027},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2062},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13612439,"byte_end":13612455,"line_start":91,"line_end":91,"column_start":5,"column_end":21},"name":"AssertUnlinkable","qualname":"::ast::wast::WastDirective::AssertUnlinkable","value":"WastDirective::AssertUnlinkable { span, module, message }","parent":{"krate":0,"index":2027},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2027},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13611598,"byte_end":13611611,"line_start":54,"line_end":54,"column_start":10,"column_end":23},"name":"WastDirective","qualname":"::ast::wast::WastDirective","value":"pub enum WastDirective<'a> {\n    Module(ast::Module),\n    QuoteModule {\n            span: ast::Span,\n            source: Vec<&'a [u8]>,\n        },\n    AssertMalformed {\n            span: ast::Span,\n            module: QuoteModule,\n            message: &'a str,\n        },\n    AssertInvalid {\n            span: ast::Span,\n            module: ast::Module,\n            message: &'a str,\n        },\n    Register {\n            span: ast::Span,\n            name: &'a str,\n            module: Option<ast::Id>,\n        },\n    Invoke(WastInvoke),\n    AssertTrap {\n            span: ast::Span,\n            exec: WastExecute,\n            message: &'a str,\n        },\n    AssertReturn {\n            span: ast::Span,\n            exec: WastExecute,\n            results: Vec<ast::AssertExpression>,\n        },\n    AssertExhaustion {\n            span: ast::Span,\n            call: WastInvoke,\n            message: &'a str,\n        },\n    AssertUnlinkable {\n            span: ast::Span,\n            module: ast::Module,\n            message: &'a str,\n        },\n}","parent":null,"children":[{"krate":0,"index":2029},{"krate":0,"index":2032},{"krate":0,"index":2035},{"krate":0,"index":2039},{"krate":0,"index":2043},{"krate":0,"index":2047},{"krate":0,"index":2050},{"krate":0,"index":2054},{"krate":0,"index":2058},{"krate":0,"index":2062}],"decl_id":null,"docs":" The different kinds of directives found in a `*.wast` file.","sig":null,"attributes":[{"value":"/ The different kinds of directives found in a `*.wast` file.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13611368,"byte_end":13611431,"line_start":49,"line_end":49,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13611432,"byte_end":13611435,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ It's not entirely clear to me what all of these are per se, but they're only","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13611436,"byte_end":13611516,"line_start":51,"line_end":51,"column_start":1,"column_end":81}},{"value":"/ really interesting to test harnesses mostly.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13611517,"byte_end":13611565,"line_start":52,"line_end":52,"column_start":1,"column_end":49}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13611566,"byte_end":13611588,"line_start":53,"line_end":53,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":2067},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13612666,"byte_end":13612670,"line_start":100,"line_end":100,"column_start":12,"column_end":16},"name":"span","qualname":"<WastDirective>::span","value":"pub fn span(&Self) -> ast::Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the location in the source that this directive was defined at\n","sig":null,"attributes":[{"value":"/ Returns the location in the source that this directive was defined at","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13612581,"byte_end":13612654,"line_start":99,"line_end":99,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2087},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13619394,"byte_end":13619400,"line_start":258,"line_end":258,"column_start":5,"column_end":11},"name":"Invoke","qualname":"::ast::wast::WastExecute::Invoke","value":"WastExecute::Invoke(WastInvoke)","parent":{"krate":0,"index":2085},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2090},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13619422,"byte_end":13619428,"line_start":259,"line_end":259,"column_start":5,"column_end":11},"name":"Module","qualname":"::ast::wast::WastExecute::Module","value":"WastExecute::Module(ast::Module)","parent":{"krate":0,"index":2085},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2093},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13619451,"byte_end":13619454,"line_start":260,"line_end":260,"column_start":5,"column_end":8},"name":"Get","qualname":"::ast::wast::WastExecute::Get","value":"WastExecute::Get { module, global }","parent":{"krate":0,"index":2085},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2085},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13619372,"byte_end":13619383,"line_start":257,"line_end":257,"column_start":10,"column_end":21},"name":"WastExecute","qualname":"::ast::wast::WastExecute","value":"pub enum WastExecute<'a> {\n    Invoke(WastInvoke),\n    Module(ast::Module),\n    Get {\n            module: Option<ast::Id>,\n            global: &'a str,\n        },\n}","parent":null,"children":[{"krate":0,"index":2087},{"krate":0,"index":2090},{"krate":0,"index":2093}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13619340,"byte_end":13619362,"line_start":256,"line_end":256,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":2099},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13620155,"byte_end":13620165,"line_start":286,"line_end":286,"column_start":12,"column_end":22},"name":"WastInvoke","qualname":"::ast::wast::WastInvoke","value":"WastInvoke { span, module, name, args }","parent":null,"children":[{"krate":0,"index":2101},{"krate":0,"index":2102},{"krate":0,"index":2103},{"krate":0,"index":2104}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13620121,"byte_end":13620143,"line_start":285,"line_end":285,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":2101},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13620180,"byte_end":13620184,"line_start":287,"line_end":287,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::wast::WastInvoke::span","value":"ast::token::Span","parent":{"krate":0,"index":2099},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2102},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13620205,"byte_end":13620211,"line_start":288,"line_end":288,"column_start":9,"column_end":15},"name":"module","qualname":"::ast::wast::WastInvoke::module","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":2099},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2103},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13620242,"byte_end":13620246,"line_start":289,"line_end":289,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::wast::WastInvoke::name","value":"&'a str","parent":{"krate":0,"index":2099},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2104},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13620265,"byte_end":13620269,"line_start":290,"line_end":290,"column_start":9,"column_end":13},"name":"args","qualname":"::ast::wast::WastInvoke::args","value":"std::vec::Vec<ast::expr::Expression<'a>>","parent":{"krate":0,"index":2099},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2111},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13620823,"byte_end":13620829,"line_start":313,"line_end":313,"column_start":5,"column_end":11},"name":"Module","qualname":"::ast::wast::QuoteModule::Module","value":"QuoteModule::Module(ast::Module)","parent":{"krate":0,"index":2109},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2114},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13620852,"byte_end":13620857,"line_start":314,"line_end":314,"column_start":5,"column_end":10},"name":"Quote","qualname":"::ast::wast::QuoteModule::Quote","value":"QuoteModule::Quote(Vec<&'a [u8]>)","parent":{"krate":0,"index":2109},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2109},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13620801,"byte_end":13620812,"line_start":312,"line_end":312,"column_start":10,"column_end":21},"name":"QuoteModule","qualname":"::ast::wast::QuoteModule","value":"pub enum QuoteModule<'a> { Module(ast::Module), Quote(Vec<&'a [u8]>), }","parent":null,"children":[{"krate":0,"index":2111},{"krate":0,"index":2114}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13620769,"byte_end":13620791,"line_start":311,"line_end":311,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":497},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":131075,"byte_end":131077,"line_start":325,"line_end":325,"column_start":9,"column_end":11},"name":"kw","qualname":"::ast::kw","value":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","parent":null,"children":[{"krate":0,"index":6638},{"krate":0,"index":6641},{"krate":0,"index":6643},{"krate":0,"index":6644},{"krate":0,"index":6631},{"krate":0,"index":6635},{"krate":0,"index":6653},{"krate":0,"index":6656},{"krate":0,"index":6658},{"krate":0,"index":6659},{"krate":0,"index":6646},{"krate":0,"index":6650},{"krate":0,"index":6668},{"krate":0,"index":6671},{"krate":0,"index":6673},{"krate":0,"index":6674},{"krate":0,"index":6661},{"krate":0,"index":6665},{"krate":0,"index":6683},{"krate":0,"index":6686},{"krate":0,"index":6688},{"krate":0,"index":6689},{"krate":0,"index":6676},{"krate":0,"index":6680},{"krate":0,"index":6698},{"krate":0,"index":6701},{"krate":0,"index":6703},{"krate":0,"index":6704},{"krate":0,"index":6691},{"krate":0,"index":6695},{"krate":0,"index":6713},{"krate":0,"index":6716},{"krate":0,"index":6718},{"krate":0,"index":6719},{"krate":0,"index":6706},{"krate":0,"index":6710},{"krate":0,"index":6728},{"krate":0,"index":6731},{"krate":0,"index":6733},{"krate":0,"index":6734},{"krate":0,"index":6721},{"krate":0,"index":6725},{"krate":0,"index":6743},{"krate":0,"index":6746},{"krate":0,"index":6748},{"krate":0,"index":6749},{"krate":0,"index":6736},{"krate":0,"index":6740},{"krate":0,"index":6758},{"krate":0,"index":6761},{"krate":0,"index":6763},{"krate":0,"index":6764},{"krate":0,"index":6751},{"krate":0,"index":6755},{"krate":0,"index":6773},{"krate":0,"index":6776},{"krate":0,"index":6778},{"krate":0,"index":6779},{"krate":0,"index":6766},{"krate":0,"index":6770},{"krate":0,"index":6788},{"krate":0,"index":6791},{"krate":0,"index":6793},{"krate":0,"index":6794},{"krate":0,"index":6781},{"krate":0,"index":6785},{"krate":0,"index":6803},{"krate":0,"index":6806},{"krate":0,"index":6808},{"krate":0,"index":6809},{"krate":0,"index":6796},{"krate":0,"index":6800},{"krate":0,"index":6818},{"krate":0,"index":6821},{"krate":0,"index":6823},{"krate":0,"index":6824},{"krate":0,"index":6811},{"krate":0,"index":6815},{"krate":0,"index":6833},{"krate":0,"index":6836},{"krate":0,"index":6838},{"krate":0,"index":6839},{"krate":0,"index":6826},{"krate":0,"index":6830},{"krate":0,"index":6848},{"krate":0,"index":6851},{"krate":0,"index":6853},{"krate":0,"index":6854},{"krate":0,"index":6841},{"krate":0,"index":6845},{"krate":0,"index":6863},{"krate":0,"index":6866},{"krate":0,"index":6868},{"krate":0,"index":6869},{"krate":0,"index":6856},{"krate":0,"index":6860},{"krate":0,"index":6878},{"krate":0,"index":6881},{"krate":0,"index":6883},{"krate":0,"index":6884},{"krate":0,"index":6871},{"krate":0,"index":6875},{"krate":0,"index":6893},{"krate":0,"index":6896},{"krate":0,"index":6898},{"krate":0,"index":6899},{"krate":0,"index":6886},{"krate":0,"index":6890},{"krate":0,"index":6908},{"krate":0,"index":6911},{"krate":0,"index":6913},{"krate":0,"index":6914},{"krate":0,"index":6901},{"krate":0,"index":6905},{"krate":0,"index":6923},{"krate":0,"index":6926},{"krate":0,"index":6928},{"krate":0,"index":6929},{"krate":0,"index":6916},{"krate":0,"index":6920},{"krate":0,"index":6938},{"krate":0,"index":6941},{"krate":0,"index":6943},{"krate":0,"index":6944},{"krate":0,"index":6931},{"krate":0,"index":6935},{"krate":0,"index":6953},{"krate":0,"index":6956},{"krate":0,"index":6958},{"krate":0,"index":6959},{"krate":0,"index":6946},{"krate":0,"index":6950},{"krate":0,"index":6968},{"krate":0,"index":6971},{"krate":0,"index":6973},{"krate":0,"index":6974},{"krate":0,"index":6961},{"krate":0,"index":6965},{"krate":0,"index":6983},{"krate":0,"index":6986},{"krate":0,"index":6988},{"krate":0,"index":6989},{"krate":0,"index":6976},{"krate":0,"index":6980},{"krate":0,"index":6998},{"krate":0,"index":7001},{"krate":0,"index":7003},{"krate":0,"index":7004},{"krate":0,"index":6991},{"krate":0,"index":6995},{"krate":0,"index":7013},{"krate":0,"index":7016},{"krate":0,"index":7018},{"krate":0,"index":7019},{"krate":0,"index":7006},{"krate":0,"index":7010},{"krate":0,"index":7028},{"krate":0,"index":7031},{"krate":0,"index":7033},{"krate":0,"index":7034},{"krate":0,"index":7021},{"krate":0,"index":7025},{"krate":0,"index":7043},{"krate":0,"index":7046},{"krate":0,"index":7048},{"krate":0,"index":7049},{"krate":0,"index":7036},{"krate":0,"index":7040},{"krate":0,"index":7058},{"krate":0,"index":7061},{"krate":0,"index":7063},{"krate":0,"index":7064},{"krate":0,"index":7051},{"krate":0,"index":7055},{"krate":0,"index":7073},{"krate":0,"index":7076},{"krate":0,"index":7078},{"krate":0,"index":7079},{"krate":0,"index":7066},{"krate":0,"index":7070},{"krate":0,"index":7088},{"krate":0,"index":7091},{"krate":0,"index":7093},{"krate":0,"index":7094},{"krate":0,"index":7081},{"krate":0,"index":7085},{"krate":0,"index":7103},{"krate":0,"index":7106},{"krate":0,"index":7108},{"krate":0,"index":7109},{"krate":0,"index":7096},{"krate":0,"index":7100},{"krate":0,"index":7118},{"krate":0,"index":7121},{"krate":0,"index":7123},{"krate":0,"index":7124},{"krate":0,"index":7111},{"krate":0,"index":7115},{"krate":0,"index":7133},{"krate":0,"index":7136},{"krate":0,"index":7138},{"krate":0,"index":7139},{"krate":0,"index":7126},{"krate":0,"index":7130},{"krate":0,"index":7148},{"krate":0,"index":7151},{"krate":0,"index":7153},{"krate":0,"index":7154},{"krate":0,"index":7141},{"krate":0,"index":7145},{"krate":0,"index":7163},{"krate":0,"index":7166},{"krate":0,"index":7168},{"krate":0,"index":7169},{"krate":0,"index":7156},{"krate":0,"index":7160},{"krate":0,"index":7178},{"krate":0,"index":7181},{"krate":0,"index":7183},{"krate":0,"index":7184},{"krate":0,"index":7171},{"krate":0,"index":7175},{"krate":0,"index":7193},{"krate":0,"index":7196},{"krate":0,"index":7198},{"krate":0,"index":7199},{"krate":0,"index":7186},{"krate":0,"index":7190},{"krate":0,"index":7208},{"krate":0,"index":7211},{"krate":0,"index":7213},{"krate":0,"index":7214},{"krate":0,"index":7201},{"krate":0,"index":7205},{"krate":0,"index":7223},{"krate":0,"index":7226},{"krate":0,"index":7228},{"krate":0,"index":7229},{"krate":0,"index":7216},{"krate":0,"index":7220},{"krate":0,"index":7238},{"krate":0,"index":7241},{"krate":0,"index":7243},{"krate":0,"index":7244},{"krate":0,"index":7231},{"krate":0,"index":7235},{"krate":0,"index":7253},{"krate":0,"index":7256},{"krate":0,"index":7258},{"krate":0,"index":7259},{"krate":0,"index":7246},{"krate":0,"index":7250},{"krate":0,"index":7268},{"krate":0,"index":7271},{"krate":0,"index":7273},{"krate":0,"index":7274},{"krate":0,"index":7261},{"krate":0,"index":7265},{"krate":0,"index":7283},{"krate":0,"index":7286},{"krate":0,"index":7288},{"krate":0,"index":7289},{"krate":0,"index":7276},{"krate":0,"index":7280},{"krate":0,"index":7298},{"krate":0,"index":7301},{"krate":0,"index":7303},{"krate":0,"index":7304},{"krate":0,"index":7291},{"krate":0,"index":7295},{"krate":0,"index":7313},{"krate":0,"index":7316},{"krate":0,"index":7318},{"krate":0,"index":7319},{"krate":0,"index":7306},{"krate":0,"index":7310},{"krate":0,"index":7328},{"krate":0,"index":7331},{"krate":0,"index":7333},{"krate":0,"index":7334},{"krate":0,"index":7321},{"krate":0,"index":7325},{"krate":0,"index":7343},{"krate":0,"index":7346},{"krate":0,"index":7348},{"krate":0,"index":7349},{"krate":0,"index":7336},{"krate":0,"index":7340},{"krate":0,"index":7358},{"krate":0,"index":7361},{"krate":0,"index":7363},{"krate":0,"index":7364},{"krate":0,"index":7351},{"krate":0,"index":7355},{"krate":0,"index":7373},{"krate":0,"index":7376},{"krate":0,"index":7378},{"krate":0,"index":7379},{"krate":0,"index":7366},{"krate":0,"index":7370},{"krate":0,"index":7388},{"krate":0,"index":7391},{"krate":0,"index":7393},{"krate":0,"index":7394},{"krate":0,"index":7381},{"krate":0,"index":7385},{"krate":0,"index":7403},{"krate":0,"index":7406},{"krate":0,"index":7408},{"krate":0,"index":7409},{"krate":0,"index":7396},{"krate":0,"index":7400},{"krate":0,"index":7418},{"krate":0,"index":7421},{"krate":0,"index":7423},{"krate":0,"index":7424},{"krate":0,"index":7411},{"krate":0,"index":7415},{"krate":0,"index":7433},{"krate":0,"index":7436},{"krate":0,"index":7438},{"krate":0,"index":7439},{"krate":0,"index":7426},{"krate":0,"index":7430},{"krate":0,"index":7448},{"krate":0,"index":7451},{"krate":0,"index":7453},{"krate":0,"index":7454},{"krate":0,"index":7441},{"krate":0,"index":7445},{"krate":0,"index":7463},{"krate":0,"index":7466},{"krate":0,"index":7468},{"krate":0,"index":7469},{"krate":0,"index":7456},{"krate":0,"index":7460},{"krate":0,"index":7478},{"krate":0,"index":7481},{"krate":0,"index":7483},{"krate":0,"index":7484},{"krate":0,"index":7471},{"krate":0,"index":7475},{"krate":0,"index":7493},{"krate":0,"index":7496},{"krate":0,"index":7498},{"krate":0,"index":7499},{"krate":0,"index":7486},{"krate":0,"index":7490},{"krate":0,"index":7508},{"krate":0,"index":7511},{"krate":0,"index":7513},{"krate":0,"index":7514},{"krate":0,"index":7501},{"krate":0,"index":7505},{"krate":0,"index":7523},{"krate":0,"index":7526},{"krate":0,"index":7528},{"krate":0,"index":7529},{"krate":0,"index":7516},{"krate":0,"index":7520},{"krate":0,"index":7538},{"krate":0,"index":7541},{"krate":0,"index":7543},{"krate":0,"index":7544},{"krate":0,"index":7531},{"krate":0,"index":7535},{"krate":0,"index":7553},{"krate":0,"index":7556},{"krate":0,"index":7558},{"krate":0,"index":7559},{"krate":0,"index":7546},{"krate":0,"index":7550},{"krate":0,"index":7568},{"krate":0,"index":7571},{"krate":0,"index":7573},{"krate":0,"index":7574},{"krate":0,"index":7561},{"krate":0,"index":7565},{"krate":0,"index":7583},{"krate":0,"index":7586},{"krate":0,"index":7588},{"krate":0,"index":7589},{"krate":0,"index":7576},{"krate":0,"index":7580},{"krate":0,"index":7598},{"krate":0,"index":7601},{"krate":0,"index":7603},{"krate":0,"index":7604},{"krate":0,"index":7591},{"krate":0,"index":7595},{"krate":0,"index":7613},{"krate":0,"index":7616},{"krate":0,"index":7618},{"krate":0,"index":7619},{"krate":0,"index":7606},{"krate":0,"index":7610},{"krate":0,"index":7628},{"krate":0,"index":7631},{"krate":0,"index":7633},{"krate":0,"index":7634},{"krate":0,"index":7621},{"krate":0,"index":7625},{"krate":0,"index":7643},{"krate":0,"index":7646},{"krate":0,"index":7648},{"krate":0,"index":7649},{"krate":0,"index":7636},{"krate":0,"index":7640},{"krate":0,"index":7658},{"krate":0,"index":7661},{"krate":0,"index":7663},{"krate":0,"index":7664},{"krate":0,"index":7651},{"krate":0,"index":7655},{"krate":0,"index":7673},{"krate":0,"index":7676},{"krate":0,"index":7678},{"krate":0,"index":7679},{"krate":0,"index":7666},{"krate":0,"index":7670},{"krate":0,"index":7688},{"krate":0,"index":7691},{"krate":0,"index":7693},{"krate":0,"index":7694},{"krate":0,"index":7681},{"krate":0,"index":7685},{"krate":0,"index":7703},{"krate":0,"index":7706},{"krate":0,"index":7708},{"krate":0,"index":7709},{"krate":0,"index":7696},{"krate":0,"index":7700},{"krate":0,"index":7718},{"krate":0,"index":7721},{"krate":0,"index":7723},{"krate":0,"index":7724},{"krate":0,"index":7711},{"krate":0,"index":7715},{"krate":0,"index":7733},{"krate":0,"index":7736},{"krate":0,"index":7738},{"krate":0,"index":7739},{"krate":0,"index":7726},{"krate":0,"index":7730},{"krate":0,"index":7748},{"krate":0,"index":7751},{"krate":0,"index":7753},{"krate":0,"index":7754},{"krate":0,"index":7741},{"krate":0,"index":7745},{"krate":0,"index":7763},{"krate":0,"index":7766},{"krate":0,"index":7768},{"krate":0,"index":7769},{"krate":0,"index":7756},{"krate":0,"index":7760},{"krate":0,"index":7778},{"krate":0,"index":7781},{"krate":0,"index":7783},{"krate":0,"index":7784},{"krate":0,"index":7771},{"krate":0,"index":7775},{"krate":0,"index":7793},{"krate":0,"index":7796},{"krate":0,"index":7798},{"krate":0,"index":7799},{"krate":0,"index":7786},{"krate":0,"index":7790},{"krate":0,"index":7808},{"krate":0,"index":7811},{"krate":0,"index":7813},{"krate":0,"index":7814},{"krate":0,"index":7801},{"krate":0,"index":7805},{"krate":0,"index":7823},{"krate":0,"index":7826},{"krate":0,"index":7828},{"krate":0,"index":7829},{"krate":0,"index":7816},{"krate":0,"index":7820},{"krate":0,"index":7838},{"krate":0,"index":7841},{"krate":0,"index":7843},{"krate":0,"index":7844},{"krate":0,"index":7831},{"krate":0,"index":7835},{"krate":0,"index":7853},{"krate":0,"index":7856},{"krate":0,"index":7858},{"krate":0,"index":7859},{"krate":0,"index":7846},{"krate":0,"index":7850},{"krate":0,"index":7868},{"krate":0,"index":7871},{"krate":0,"index":7873},{"krate":0,"index":7874},{"krate":0,"index":7861},{"krate":0,"index":7865},{"krate":0,"index":7883},{"krate":0,"index":7886},{"krate":0,"index":7888},{"krate":0,"index":7889},{"krate":0,"index":7876},{"krate":0,"index":7880},{"krate":0,"index":7898},{"krate":0,"index":7901},{"krate":0,"index":7903},{"krate":0,"index":7904},{"krate":0,"index":7891},{"krate":0,"index":7895},{"krate":0,"index":7913},{"krate":0,"index":7916},{"krate":0,"index":7918},{"krate":0,"index":7919},{"krate":0,"index":7906},{"krate":0,"index":7910},{"krate":0,"index":7928},{"krate":0,"index":7931},{"krate":0,"index":7933},{"krate":0,"index":7934},{"krate":0,"index":7921},{"krate":0,"index":7925},{"krate":0,"index":7943},{"krate":0,"index":7946},{"krate":0,"index":7948},{"krate":0,"index":7949},{"krate":0,"index":7936},{"krate":0,"index":7940},{"krate":0,"index":7958},{"krate":0,"index":7961},{"krate":0,"index":7963},{"krate":0,"index":7964},{"krate":0,"index":7951},{"krate":0,"index":7955},{"krate":0,"index":7973},{"krate":0,"index":7976},{"krate":0,"index":7978},{"krate":0,"index":7979},{"krate":0,"index":7966},{"krate":0,"index":7970},{"krate":0,"index":7988},{"krate":0,"index":7991},{"krate":0,"index":7993},{"krate":0,"index":7994},{"krate":0,"index":7981},{"krate":0,"index":7985},{"krate":0,"index":8003},{"krate":0,"index":8006},{"krate":0,"index":8008},{"krate":0,"index":8009},{"krate":0,"index":7996},{"krate":0,"index":8000},{"krate":0,"index":8018},{"krate":0,"index":8021},{"krate":0,"index":8023},{"krate":0,"index":8024},{"krate":0,"index":8011},{"krate":0,"index":8015},{"krate":0,"index":8033},{"krate":0,"index":8036},{"krate":0,"index":8038},{"krate":0,"index":8039},{"krate":0,"index":8026},{"krate":0,"index":8030},{"krate":0,"index":8048},{"krate":0,"index":8051},{"krate":0,"index":8053},{"krate":0,"index":8054},{"krate":0,"index":8041},{"krate":0,"index":8045},{"krate":0,"index":8063},{"krate":0,"index":8066},{"krate":0,"index":8068},{"krate":0,"index":8069},{"krate":0,"index":8056},{"krate":0,"index":8060},{"krate":0,"index":8078},{"krate":0,"index":8081},{"krate":0,"index":8083},{"krate":0,"index":8084},{"krate":0,"index":8071},{"krate":0,"index":8075},{"krate":0,"index":8093},{"krate":0,"index":8096},{"krate":0,"index":8098},{"krate":0,"index":8099},{"krate":0,"index":8086},{"krate":0,"index":8090}],"decl_id":null,"docs":" Common keyword used to parse WebAssembly text files.\n","sig":null,"attributes":[{"value":"/ Common keyword used to parse WebAssembly text files.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":131010,"byte_end":131066,"line_start":324,"line_end":324,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":6638},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":131100,"byte_end":131105,"line_start":326,"line_end":326,"column_start":21,"column_end":26},"name":"after","qualname":"::ast::kw::after","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6653},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":131128,"byte_end":131133,"line_start":327,"line_end":327,"column_start":21,"column_end":26},"name":"alias","qualname":"::ast::kw::alias","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6668},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":131156,"byte_end":131159,"line_start":328,"line_end":328,"column_start":21,"column_end":24},"name":"any","qualname":"::ast::kw::any","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6683},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":131182,"byte_end":131189,"line_start":329,"line_end":329,"column_start":21,"column_end":28},"name":"anyfunc","qualname":"::ast::kw::anyfunc","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6698},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":131212,"byte_end":131218,"line_start":330,"line_end":330,"column_start":21,"column_end":27},"name":"anyref","qualname":"::ast::kw::anyref","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6713},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":131241,"byte_end":131244,"line_start":331,"line_end":331,"column_start":21,"column_end":24},"name":"arg","qualname":"::ast::kw::arg","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6728},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":131267,"byte_end":131272,"line_start":332,"line_end":332,"column_start":21,"column_end":26},"name":"array","qualname":"::ast::kw::array","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6743},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":131295,"byte_end":131312,"line_start":333,"line_end":333,"column_start":21,"column_end":38},"name":"assert_exhaustion","qualname":"::ast::kw::assert_exhaustion","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6758},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":131335,"byte_end":131349,"line_start":334,"line_end":334,"column_start":21,"column_end":35},"name":"assert_invalid","qualname":"::ast::kw::assert_invalid","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6773},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":131372,"byte_end":131388,"line_start":335,"line_end":335,"column_start":21,"column_end":37},"name":"assert_malformed","qualname":"::ast::kw::assert_malformed","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6788},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":131411,"byte_end":131424,"line_start":336,"line_end":336,"column_start":21,"column_end":34},"name":"assert_return","qualname":"::ast::kw::assert_return","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6803},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":131447,"byte_end":131475,"line_start":337,"line_end":337,"column_start":21,"column_end":49},"name":"assert_return_arithmetic_nan","qualname":"::ast::kw::assert_return_arithmetic_nan","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6818},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":131498,"byte_end":131532,"line_start":338,"line_end":338,"column_start":21,"column_end":55},"name":"assert_return_arithmetic_nan_f32x4","qualname":"::ast::kw::assert_return_arithmetic_nan_f32x4","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6833},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":131555,"byte_end":131589,"line_start":339,"line_end":339,"column_start":21,"column_end":55},"name":"assert_return_arithmetic_nan_f64x2","qualname":"::ast::kw::assert_return_arithmetic_nan_f64x2","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6848},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":131612,"byte_end":131639,"line_start":340,"line_end":340,"column_start":21,"column_end":48},"name":"assert_return_canonical_nan","qualname":"::ast::kw::assert_return_canonical_nan","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6863},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":131662,"byte_end":131695,"line_start":341,"line_end":341,"column_start":21,"column_end":54},"name":"assert_return_canonical_nan_f32x4","qualname":"::ast::kw::assert_return_canonical_nan_f32x4","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6878},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":131718,"byte_end":131751,"line_start":342,"line_end":342,"column_start":21,"column_end":54},"name":"assert_return_canonical_nan_f64x2","qualname":"::ast::kw::assert_return_canonical_nan_f64x2","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6893},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":131774,"byte_end":131792,"line_start":343,"line_end":343,"column_start":21,"column_end":39},"name":"assert_return_func","qualname":"::ast::kw::assert_return_func","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6908},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":131815,"byte_end":131826,"line_start":344,"line_end":344,"column_start":21,"column_end":32},"name":"assert_trap","qualname":"::ast::kw::assert_trap","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6923},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":131849,"byte_end":131866,"line_start":345,"line_end":345,"column_start":21,"column_end":38},"name":"assert_unlinkable","qualname":"::ast::kw::assert_unlinkable","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6938},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":131889,"byte_end":131895,"line_start":346,"line_end":346,"column_start":21,"column_end":27},"name":"before","qualname":"::ast::kw::before","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6953},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":131918,"byte_end":131924,"line_start":347,"line_end":347,"column_start":21,"column_end":27},"name":"binary","qualname":"::ast::kw::binary","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6968},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":131947,"byte_end":131952,"line_start":348,"line_end":348,"column_start":21,"column_end":26},"name":"block","qualname":"::ast::kw::block","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6983},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":131975,"byte_end":131980,"line_start":349,"line_end":349,"column_start":21,"column_end":26},"name":"catch","qualname":"::ast::kw::catch","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6998},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":132003,"byte_end":132012,"line_start":350,"line_end":350,"column_start":21,"column_end":30},"name":"catch_all","qualname":"::ast::kw::catch_all","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7013},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":132035,"byte_end":132039,"line_start":351,"line_end":351,"column_start":21,"column_end":25},"name":"code","qualname":"::ast::kw::code","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7028},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":132062,"byte_end":132066,"line_start":352,"line_end":352,"column_start":21,"column_end":25},"name":"data","qualname":"::ast::kw::data","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7043},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":132089,"byte_end":132096,"line_start":353,"line_end":353,"column_start":21,"column_end":28},"name":"declare","qualname":"::ast::kw::declare","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7058},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":132119,"byte_end":132123,"line_start":354,"line_end":354,"column_start":21,"column_end":25},"name":"r#do","qualname":"::ast::kw::r#do","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7073},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":132153,"byte_end":132157,"line_start":355,"line_end":355,"column_start":21,"column_end":25},"name":"elem","qualname":"::ast::kw::elem","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7088},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":132180,"byte_end":132183,"line_start":356,"line_end":356,"column_start":21,"column_end":24},"name":"end","qualname":"::ast::kw::end","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7103},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":132206,"byte_end":132211,"line_start":357,"line_end":357,"column_start":21,"column_end":26},"name":"event","qualname":"::ast::kw::event","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7118},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":132234,"byte_end":132237,"line_start":358,"line_end":358,"column_start":21,"column_end":24},"name":"exn","qualname":"::ast::kw::exn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7133},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":132260,"byte_end":132266,"line_start":359,"line_end":359,"column_start":21,"column_end":27},"name":"exnref","qualname":"::ast::kw::exnref","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7148},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":132289,"byte_end":132295,"line_start":360,"line_end":360,"column_start":21,"column_end":27},"name":"export","qualname":"::ast::kw::export","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7163},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":132318,"byte_end":132326,"line_start":361,"line_end":361,"column_start":21,"column_end":29},"name":"r#extern","qualname":"::ast::kw::r#extern","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7178},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":132360,"byte_end":132369,"line_start":362,"line_end":362,"column_start":21,"column_end":30},"name":"externref","qualname":"::ast::kw::externref","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7193},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":132392,"byte_end":132394,"line_start":363,"line_end":363,"column_start":21,"column_end":23},"name":"eq","qualname":"::ast::kw::eq","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7208},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":132417,"byte_end":132422,"line_start":364,"line_end":364,"column_start":21,"column_end":26},"name":"eqref","qualname":"::ast::kw::eqref","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7223},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":132445,"byte_end":132448,"line_start":365,"line_end":365,"column_start":21,"column_end":24},"name":"f32","qualname":"::ast::kw::f32","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7238},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":132471,"byte_end":132476,"line_start":366,"line_end":366,"column_start":21,"column_end":26},"name":"f32x4","qualname":"::ast::kw::f32x4","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7253},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":132499,"byte_end":132502,"line_start":367,"line_end":367,"column_start":21,"column_end":24},"name":"f64","qualname":"::ast::kw::f64","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7268},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":132525,"byte_end":132530,"line_start":368,"line_end":368,"column_start":21,"column_end":26},"name":"f64x2","qualname":"::ast::kw::f64x2","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7283},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":132553,"byte_end":132558,"line_start":369,"line_end":369,"column_start":21,"column_end":26},"name":"field","qualname":"::ast::kw::field","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7298},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":132581,"byte_end":132586,"line_start":370,"line_end":370,"column_start":21,"column_end":26},"name":"first","qualname":"::ast::kw::first","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7313},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":132609,"byte_end":132613,"line_start":371,"line_end":371,"column_start":21,"column_end":25},"name":"func","qualname":"::ast::kw::func","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7328},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":132636,"byte_end":132643,"line_start":372,"line_end":372,"column_start":21,"column_end":28},"name":"funcref","qualname":"::ast::kw::funcref","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7343},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":132666,"byte_end":132669,"line_start":373,"line_end":373,"column_start":21,"column_end":24},"name":"get","qualname":"::ast::kw::get","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7358},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":132692,"byte_end":132698,"line_start":374,"line_end":374,"column_start":21,"column_end":27},"name":"global","qualname":"::ast::kw::global","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7373},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":132721,"byte_end":132724,"line_start":375,"line_end":375,"column_start":21,"column_end":24},"name":"i16","qualname":"::ast::kw::i16","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7388},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":132747,"byte_end":132752,"line_start":376,"line_end":376,"column_start":21,"column_end":26},"name":"i16x8","qualname":"::ast::kw::i16x8","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7403},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":132775,"byte_end":132778,"line_start":377,"line_end":377,"column_start":21,"column_end":24},"name":"i31","qualname":"::ast::kw::i31","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7418},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":132801,"byte_end":132807,"line_start":378,"line_end":378,"column_start":21,"column_end":27},"name":"i31ref","qualname":"::ast::kw::i31ref","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7433},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":132830,"byte_end":132833,"line_start":379,"line_end":379,"column_start":21,"column_end":24},"name":"i32","qualname":"::ast::kw::i32","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7448},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":132856,"byte_end":132861,"line_start":380,"line_end":380,"column_start":21,"column_end":26},"name":"i32x4","qualname":"::ast::kw::i32x4","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7463},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":132884,"byte_end":132887,"line_start":381,"line_end":381,"column_start":21,"column_end":24},"name":"i64","qualname":"::ast::kw::i64","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7478},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":132910,"byte_end":132915,"line_start":382,"line_end":382,"column_start":21,"column_end":26},"name":"i64x2","qualname":"::ast::kw::i64x2","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7493},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":132938,"byte_end":132940,"line_start":383,"line_end":383,"column_start":21,"column_end":23},"name":"i8","qualname":"::ast::kw::i8","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7508},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":132963,"byte_end":132968,"line_start":384,"line_end":384,"column_start":21,"column_end":26},"name":"i8x16","qualname":"::ast::kw::i8x16","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7523},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":132991,"byte_end":132997,"line_start":385,"line_end":385,"column_start":21,"column_end":27},"name":"import","qualname":"::ast::kw::import","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7538},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":133020,"byte_end":133028,"line_start":386,"line_end":386,"column_start":21,"column_end":29},"name":"instance","qualname":"::ast::kw::instance","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7553},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":133051,"byte_end":133062,"line_start":387,"line_end":387,"column_start":21,"column_end":32},"name":"instantiate","qualname":"::ast::kw::instantiate","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7568},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":133085,"byte_end":133091,"line_start":388,"line_end":388,"column_start":21,"column_end":27},"name":"invoke","qualname":"::ast::kw::invoke","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7583},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":133114,"byte_end":133118,"line_start":389,"line_end":389,"column_start":21,"column_end":25},"name":"item","qualname":"::ast::kw::item","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7598},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":133141,"byte_end":133145,"line_start":390,"line_end":390,"column_start":21,"column_end":25},"name":"last","qualname":"::ast::kw::last","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7613},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":133168,"byte_end":133173,"line_start":391,"line_end":391,"column_start":21,"column_end":26},"name":"local","qualname":"::ast::kw::local","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7628},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":133196,"byte_end":133202,"line_start":392,"line_end":392,"column_start":21,"column_end":27},"name":"memory","qualname":"::ast::kw::memory","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7643},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":133225,"byte_end":133231,"line_start":393,"line_end":393,"column_start":21,"column_end":27},"name":"module","qualname":"::ast::kw::module","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7658},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":133254,"byte_end":133264,"line_start":394,"line_end":394,"column_start":21,"column_end":31},"name":"modulecode","qualname":"::ast::kw::modulecode","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7673},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":133287,"byte_end":133301,"line_start":395,"line_end":395,"column_start":21,"column_end":35},"name":"nan_arithmetic","qualname":"::ast::kw::nan_arithmetic","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7688},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":133343,"byte_end":133356,"line_start":396,"line_end":396,"column_start":21,"column_end":34},"name":"nan_canonical","qualname":"::ast::kw::nan_canonical","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7703},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":133397,"byte_end":133401,"line_start":397,"line_end":397,"column_start":21,"column_end":25},"name":"null","qualname":"::ast::kw::null","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7718},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":133424,"byte_end":133431,"line_start":398,"line_end":398,"column_start":21,"column_end":28},"name":"nullref","qualname":"::ast::kw::nullref","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7733},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":133454,"byte_end":133460,"line_start":399,"line_end":399,"column_start":21,"column_end":27},"name":"offset","qualname":"::ast::kw::offset","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7748},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":133483,"byte_end":133488,"line_start":400,"line_end":400,"column_start":21,"column_end":26},"name":"outer","qualname":"::ast::kw::outer","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7763},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":133511,"byte_end":133516,"line_start":401,"line_end":401,"column_start":21,"column_end":26},"name":"param","qualname":"::ast::kw::param","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7778},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":133539,"byte_end":133545,"line_start":402,"line_end":402,"column_start":21,"column_end":27},"name":"parent","qualname":"::ast::kw::parent","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7793},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":133568,"byte_end":133575,"line_start":403,"line_end":403,"column_start":21,"column_end":28},"name":"passive","qualname":"::ast::kw::passive","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7808},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":133598,"byte_end":133603,"line_start":404,"line_end":404,"column_start":21,"column_end":26},"name":"quote","qualname":"::ast::kw::quote","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7823},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":133626,"byte_end":133632,"line_start":405,"line_end":405,"column_start":21,"column_end":27},"name":"r#else","qualname":"::ast::kw::r#else","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7838},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":133664,"byte_end":133668,"line_start":406,"line_end":406,"column_start":21,"column_end":25},"name":"r#if","qualname":"::ast::kw::r#if","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7853},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":133698,"byte_end":133704,"line_start":407,"line_end":407,"column_start":21,"column_end":27},"name":"r#loop","qualname":"::ast::kw::r#loop","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7868},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":133736,"byte_end":133741,"line_start":408,"line_end":408,"column_start":21,"column_end":26},"name":"r#mut","qualname":"::ast::kw::r#mut","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7883},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":133772,"byte_end":133778,"line_start":409,"line_end":409,"column_start":21,"column_end":27},"name":"r#type","qualname":"::ast::kw::r#type","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7898},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":133810,"byte_end":133815,"line_start":410,"line_end":410,"column_start":21,"column_end":26},"name":"r#ref","qualname":"::ast::kw::r#ref","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7913},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":133846,"byte_end":133854,"line_start":411,"line_end":411,"column_start":21,"column_end":29},"name":"ref_func","qualname":"::ast::kw::ref_func","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7928},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":133890,"byte_end":133898,"line_start":412,"line_end":412,"column_start":21,"column_end":29},"name":"ref_null","qualname":"::ast::kw::ref_null","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7943},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":133934,"byte_end":133942,"line_start":413,"line_end":413,"column_start":21,"column_end":29},"name":"register","qualname":"::ast::kw::register","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7958},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":133965,"byte_end":133971,"line_start":414,"line_end":414,"column_start":21,"column_end":27},"name":"result","qualname":"::ast::kw::result","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7973},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":133994,"byte_end":133997,"line_start":415,"line_end":415,"column_start":21,"column_end":24},"name":"rtt","qualname":"::ast::kw::rtt","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7988},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":134020,"byte_end":134026,"line_start":416,"line_end":416,"column_start":21,"column_end":27},"name":"shared","qualname":"::ast::kw::shared","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8003},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":134049,"byte_end":134054,"line_start":417,"line_end":417,"column_start":21,"column_end":26},"name":"start","qualname":"::ast::kw::start","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8018},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":134077,"byte_end":134085,"line_start":418,"line_end":418,"column_start":21,"column_end":29},"name":"r#struct","qualname":"::ast::kw::r#struct","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8033},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":134119,"byte_end":134124,"line_start":419,"line_end":419,"column_start":21,"column_end":26},"name":"table","qualname":"::ast::kw::table","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8048},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":134147,"byte_end":134151,"line_start":420,"line_end":420,"column_start":21,"column_end":25},"name":"then","qualname":"::ast::kw::then","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8063},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":134174,"byte_end":134179,"line_start":421,"line_end":421,"column_start":21,"column_end":26},"name":"r#try","qualname":"::ast::kw::r#try","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8078},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":134210,"byte_end":134216,"line_start":422,"line_end":422,"column_start":21,"column_end":27},"name":"unwind","qualname":"::ast::kw::unwind","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8093},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":134239,"byte_end":134243,"line_start":423,"line_end":423,"column_start":21,"column_end":25},"name":"v128","qualname":"::ast::kw::v128","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122293,"byte_end":122323,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":122332,"byte_end":122354,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":498},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":134318,"byte_end":134328,"line_start":427,"line_end":427,"column_start":9,"column_end":19},"name":"annotation","qualname":"::ast::annotation","value":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","parent":null,"children":[{"krate":0,"index":8108},{"krate":0,"index":8111},{"krate":0,"index":8101},{"krate":0,"index":8105},{"krate":0,"index":8120},{"krate":0,"index":8123},{"krate":0,"index":8113},{"krate":0,"index":8117}],"decl_id":null,"docs":" Common annotations used to parse WebAssembly text files.\n","sig":null,"attributes":[{"value":"/ Common annotations used to parse WebAssembly text files.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":134249,"byte_end":134309,"line_start":426,"line_end":426,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":8108},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":134347,"byte_end":134353,"line_start":428,"line_end":428,"column_start":17,"column_end":23},"name":"custom","qualname":"::ast::annotation::custom","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":129486,"byte_end":129516,"line_start":262,"line_end":262,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":129525,"byte_end":129547,"line_start":263,"line_end":263,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8120},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":134372,"byte_end":134376,"line_start":429,"line_end":429,"column_start":17,"column_end":21},"name":"name","qualname":"::ast::annotation::name","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":129486,"byte_end":129516,"line_start":262,"line_end":262,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/mod.rs","byte_start":129525,"byte_end":129547,"line_start":263,"line_end":263,"column_start":9,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":500},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"lexer","qualname":"::lexer","value":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","parent":null,"children":[{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":505},{"krate":0,"index":508},{"krate":0,"index":511},{"krate":0,"index":514},{"krate":0,"index":517},{"krate":0,"index":520},{"krate":0,"index":8125},{"krate":0,"index":8129},{"krate":0,"index":8132},{"krate":0,"index":8167},{"krate":0,"index":8170},{"krate":0,"index":8172},{"krate":0,"index":8176},{"krate":0,"index":8208},{"krate":0,"index":8210},{"krate":0,"index":8212},{"krate":0,"index":8213},{"krate":0,"index":8216},{"krate":0,"index":8221},{"krate":0,"index":8223},{"krate":0,"index":8224},{"krate":0,"index":8226},{"krate":0,"index":8227},{"krate":0,"index":8229},{"krate":0,"index":8233},{"krate":0,"index":8236},{"krate":0,"index":8238},{"krate":0,"index":8242},{"krate":0,"index":8248},{"krate":0,"index":8251},{"krate":0,"index":8253},{"krate":0,"index":8257},{"krate":0,"index":8261},{"krate":0,"index":8264},{"krate":0,"index":8266},{"krate":0,"index":8270},{"krate":0,"index":8274},{"krate":0,"index":8277},{"krate":0,"index":8279},{"krate":0,"index":8283},{"krate":0,"index":8287},{"krate":0,"index":8290},{"krate":0,"index":8292},{"krate":0,"index":8296},{"krate":0,"index":8300},{"krate":0,"index":8303},{"krate":0,"index":8305},{"krate":0,"index":8309},{"krate":0,"index":8321},{"krate":0,"index":8324},{"krate":0,"index":8326},{"krate":0,"index":523},{"krate":0,"index":564},{"krate":0,"index":568},{"krate":0,"index":571},{"krate":0,"index":576},{"krate":0,"index":580},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587}],"decl_id":null,"docs":" Definition of a lexer for the WebAssembly text format.","sig":null,"attributes":[{"value":"/ Definition of a lexer for the WebAssembly text format.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":134382,"byte_end":134440,"line_start":1,"line_end":1,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":134441,"byte_end":134444,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides a [`Lexer`][] type which is an iterate over the raw","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":134445,"byte_end":134521,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"/ tokens of a WebAssembly text file. A [`Lexer`][] accounts for every single","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":134522,"byte_end":134600,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ byte in a WebAssembly text field, returning tokens even for comments and","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":134601,"byte_end":134677,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ whitespace. Typically you'll ignore comments and whitespace, however.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":134678,"byte_end":134751,"line_start":6,"line_end":6,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":134752,"byte_end":134755,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ If you'd like to iterate over the tokens in a file you can do so via:","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":134756,"byte_end":134829,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":134830,"byte_end":134833,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":134834,"byte_end":134841,"line_start":10,"line_end":10,"column_start":1,"column_end":8}},{"value":"/ # fn foo() -> Result<(), wast::Error> {","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":134842,"byte_end":134885,"line_start":11,"line_end":11,"column_start":1,"column_end":44}},{"value":"/ use wast::lexer::Lexer;","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":134886,"byte_end":134913,"line_start":12,"line_end":12,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":134914,"byte_end":134917,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ let wat = \"(module (func $foo))\";","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":134918,"byte_end":134955,"line_start":14,"line_end":14,"column_start":1,"column_end":38}},{"value":"/ for token in Lexer::new(wat) {","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":134956,"byte_end":134990,"line_start":15,"line_end":15,"column_start":1,"column_end":35}},{"value":"/     println!(\"{:?}\", token?);","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":134991,"byte_end":135024,"line_start":16,"line_end":16,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":135025,"byte_end":135030,"line_start":17,"line_end":17,"column_start":1,"column_end":6}},{"value":"/ # Ok(())","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":135031,"byte_end":135043,"line_start":18,"line_end":18,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":135044,"byte_end":135051,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":135052,"byte_end":135059,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":135060,"byte_end":135063,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Note that you'll typically not use this module but will rather use","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":135064,"byte_end":135134,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ [`ParseBuffer`](crate::parser::ParseBuffer) instead.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":135135,"byte_end":135191,"line_start":23,"line_end":23,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":135192,"byte_end":135195,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`Lexer`]: crate::lexer::Lexer","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":135196,"byte_end":135230,"line_start":25,"line_end":25,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":8125},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":135634,"byte_end":135639,"line_start":40,"line_end":40,"column_start":12,"column_end":17},"name":"Lexer","qualname":"::lexer::Lexer","value":"Lexer {  }","parent":null,"children":[{"krate":0,"index":8127},{"krate":0,"index":8128}],"decl_id":null,"docs":" A structure used to lex the s-expression syntax of WAT files.","sig":null,"attributes":[{"value":"/ A structure used to lex the s-expression syntax of WAT files.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":135339,"byte_end":135404,"line_start":34,"line_end":34,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":135405,"byte_end":135408,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This structure is used to generate [`Source`] items, which should account for","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":135409,"byte_end":135490,"line_start":36,"line_end":36,"column_start":1,"column_end":82}},{"value":"/ every single byte of the input as we iterate over it. A [`LexError`] is","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":135491,"byte_end":135566,"line_start":37,"line_end":37,"column_start":1,"column_end":76}},{"value":"/ returned for any non-lexable text.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":135567,"byte_end":135605,"line_start":38,"line_end":38,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8134},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":136036,"byte_end":136047,"line_start":53,"line_end":53,"column_start":5,"column_end":16},"name":"LineComment","qualname":"::lexer::Token::LineComment","value":"Token::LineComment(&'a str)","parent":{"krate":0,"index":8132},"children":[],"decl_id":null,"docs":" A line comment, preceded with `;;`\n","sig":null,"attributes":[{"value":"/ A line comment, preceded with `;;`","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":135993,"byte_end":136031,"line_start":52,"line_end":52,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8137},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":136156,"byte_end":136168,"line_start":57,"line_end":57,"column_start":5,"column_end":17},"name":"BlockComment","qualname":"::lexer::Token::BlockComment","value":"Token::BlockComment(&'a str)","parent":{"krate":0,"index":8132},"children":[],"decl_id":null,"docs":" A block comment, surrounded by `(;` and `;)`. Note that these can be\n nested.\n","sig":null,"attributes":[{"value":"/ A block comment, surrounded by `(;` and `;)`. Note that these can be","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":136063,"byte_end":136135,"line_start":55,"line_end":55,"column_start":5,"column_end":77}},{"value":"/ nested.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":136140,"byte_end":136151,"line_start":56,"line_end":56,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8140},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":136241,"byte_end":136251,"line_start":60,"line_end":60,"column_start":5,"column_end":15},"name":"Whitespace","qualname":"::lexer::Token::Whitespace","value":"Token::Whitespace(&'a str)","parent":{"krate":0,"index":8132},"children":[],"decl_id":null,"docs":" A fragment of source that represents whitespace.\n","sig":null,"attributes":[{"value":"/ A fragment of source that represents whitespace.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":136184,"byte_end":136236,"line_start":59,"line_end":59,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8143},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":136346,"byte_end":136352,"line_start":63,"line_end":63,"column_start":5,"column_end":11},"name":"LParen","qualname":"::lexer::Token::LParen","value":"Token::LParen(&'a str)","parent":{"krate":0,"index":8132},"children":[],"decl_id":null,"docs":" A left-parenthesis, including the source text for where it comes from.\n","sig":null,"attributes":[{"value":"/ A left-parenthesis, including the source text for where it comes from.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":136267,"byte_end":136341,"line_start":62,"line_end":62,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8146},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":136447,"byte_end":136453,"line_start":65,"line_end":65,"column_start":5,"column_end":11},"name":"RParen","qualname":"::lexer::Token::RParen","value":"Token::RParen(&'a str)","parent":{"krate":0,"index":8132},"children":[],"decl_id":null,"docs":" A right-parenthesis, including the source text for where it comes from.\n","sig":null,"attributes":[{"value":"/ A right-parenthesis, including the source text for where it comes from.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":136367,"byte_end":136442,"line_start":64,"line_end":64,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8149},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":136530,"byte_end":136536,"line_start":68,"line_end":68,"column_start":5,"column_end":11},"name":"String","qualname":"::lexer::Token::String","value":"Token::String(WasmString)","parent":{"krate":0,"index":8132},"children":[],"decl_id":null,"docs":" A string literal, which is actually a list of bytes.\n","sig":null,"attributes":[{"value":"/ A string literal, which is actually a list of bytes.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":136469,"byte_end":136525,"line_start":67,"line_end":67,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8152},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":136701,"byte_end":136703,"line_start":74,"line_end":74,"column_start":5,"column_end":7},"name":"Id","qualname":"::lexer::Token::Id","value":"Token::Id(&'a str)","parent":{"krate":0,"index":8132},"children":[],"decl_id":null,"docs":" An identifier (like `$foo`).","sig":null,"attributes":[{"value":"/ An identifier (like `$foo`).","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":136559,"byte_end":136591,"line_start":70,"line_end":70,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":136596,"byte_end":136599,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ All identifiers start with `$` and the payload here is the original","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":136604,"byte_end":136675,"line_start":72,"line_end":72,"column_start":5,"column_end":76}},{"value":"/ source text.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":136680,"byte_end":136696,"line_start":73,"line_end":73,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8155},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":136855,"byte_end":136862,"line_start":79,"line_end":79,"column_start":5,"column_end":12},"name":"Keyword","qualname":"::lexer::Token::Keyword","value":"Token::Keyword(&'a str)","parent":{"krate":0,"index":8132},"children":[],"decl_id":null,"docs":" A keyword, or something that starts with an alphabetic character.","sig":null,"attributes":[{"value":"/ A keyword, or something that starts with an alphabetic character.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":136719,"byte_end":136788,"line_start":76,"line_end":76,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":136793,"byte_end":136796,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ The payload here is the original source text.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":136801,"byte_end":136850,"line_start":78,"line_end":78,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8158},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":137037,"byte_end":137045,"line_start":83,"line_end":83,"column_start":5,"column_end":13},"name":"Reserved","qualname":"::lexer::Token::Reserved","value":"Token::Reserved(&'a str)","parent":{"krate":0,"index":8132},"children":[],"decl_id":null,"docs":" A reserved series of `idchar` symbols. Unknown what this is meant to be\n used for, you'll probably generate an error about an unexpected token.\n","sig":null,"attributes":[{"value":"/ A reserved series of `idchar` symbols. Unknown what this is meant to be","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":136878,"byte_end":136953,"line_start":81,"line_end":81,"column_start":5,"column_end":80}},{"value":"/ used for, you'll probably generate an error about an unexpected token.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":136958,"byte_end":137032,"line_start":82,"line_end":82,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8161},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":137081,"byte_end":137088,"line_start":86,"line_end":86,"column_start":5,"column_end":12},"name":"Integer","qualname":"::lexer::Token::Integer","value":"Token::Integer(Integer)","parent":{"krate":0,"index":8132},"children":[],"decl_id":null,"docs":" An integer.\n","sig":null,"attributes":[{"value":"/ An integer.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":137061,"byte_end":137076,"line_start":85,"line_end":85,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8164},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":137125,"byte_end":137130,"line_start":89,"line_end":89,"column_start":5,"column_end":10},"name":"Float","qualname":"::lexer::Token::Float","value":"Token::Float(Float)","parent":{"krate":0,"index":8132},"children":[],"decl_id":null,"docs":" A float.\n","sig":null,"attributes":[{"value":"/ A float.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":137108,"byte_end":137120,"line_start":88,"line_end":88,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":8132},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":135977,"byte_end":135982,"line_start":51,"line_end":51,"column_start":10,"column_end":15},"name":"Token","qualname":"::lexer::Token","value":"pub enum Token<'a> {\n    LineComment(&'a str),\n    BlockComment(&'a str),\n    Whitespace(&'a str),\n    LParen(&'a str),\n    RParen(&'a str),\n    String(WasmString),\n    Id(&'a str),\n    Keyword(&'a str),\n    Reserved(&'a str),\n    Integer(Integer),\n    Float(Float),\n}","parent":null,"children":[{"krate":0,"index":8134},{"krate":0,"index":8137},{"krate":0,"index":8140},{"krate":0,"index":8143},{"krate":0,"index":8146},{"krate":0,"index":8149},{"krate":0,"index":8152},{"krate":0,"index":8155},{"krate":0,"index":8158},{"krate":0,"index":8161},{"krate":0,"index":8164}],"decl_id":null,"docs":" A fragment of source lex'd from an input string.","sig":null,"attributes":[{"value":"/ A fragment of source lex'd from an input string.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":135715,"byte_end":135767,"line_start":45,"line_end":45,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":135768,"byte_end":135771,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ This enumeration contains all kinds of fragments, including comments and","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":135772,"byte_end":135848,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"/ whitespace. For most cases you'll probably ignore these and simply look at","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":135849,"byte_end":135927,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/ tokens.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":135928,"byte_end":135939,"line_start":49,"line_end":49,"column_start":1,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8177},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":137511,"byte_end":137531,"line_start":100,"line_end":100,"column_start":5,"column_end":25},"name":"DanglingBlockComment","qualname":"::lexer::LexError::DanglingBlockComment","value":"LexError::DanglingBlockComment","parent":{"krate":0,"index":8176},"children":[],"decl_id":null,"docs":" A dangling block comment was found with an unbalanced `(;` which was\n never terminated in the file.\n","sig":null,"attributes":[{"value":"/ A dangling block comment was found with an unbalanced `(;` which was","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":137396,"byte_end":137468,"line_start":98,"line_end":98,"column_start":5,"column_end":77}},{"value":"/ never terminated in the file.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":137473,"byte_end":137506,"line_start":99,"line_end":99,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8179},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":137649,"byte_end":137659,"line_start":104,"line_end":104,"column_start":5,"column_end":15},"name":"Unexpected","qualname":"::lexer::LexError::Unexpected","value":"LexError::Unexpected(char)","parent":{"krate":0,"index":8176},"children":[],"decl_id":null,"docs":" An unexpected character was encountered when generally parsing and\n looking for something else.\n","sig":null,"attributes":[{"value":"/ An unexpected character was encountered when generally parsing and","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":137538,"byte_end":137608,"line_start":102,"line_end":102,"column_start":5,"column_end":75}},{"value":"/ looking for something else.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":137613,"byte_end":137644,"line_start":103,"line_end":103,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8182},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":137729,"byte_end":137749,"line_start":107,"line_end":107,"column_start":5,"column_end":25},"name":"InvalidStringElement","qualname":"::lexer::LexError::InvalidStringElement","value":"LexError::InvalidStringElement(char)","parent":{"krate":0,"index":8176},"children":[],"decl_id":null,"docs":" An invalid `char` in a string literal was found.\n","sig":null,"attributes":[{"value":"/ An invalid `char` in a string literal was found.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":137672,"byte_end":137724,"line_start":106,"line_end":106,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8185},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":137865,"byte_end":137884,"line_start":111,"line_end":111,"column_start":5,"column_end":24},"name":"InvalidStringEscape","qualname":"::lexer::LexError::InvalidStringEscape","value":"LexError::InvalidStringEscape(char)","parent":{"krate":0,"index":8176},"children":[],"decl_id":null,"docs":" An invalid string escape letter was found (the thing after the `\\` in\n string literals)\n","sig":null,"attributes":[{"value":"/ An invalid string escape letter was found (the thing after the `\\` in","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":137762,"byte_end":137835,"line_start":109,"line_end":109,"column_start":5,"column_end":78}},{"value":"/ string literals)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":137840,"byte_end":137860,"line_start":110,"line_end":110,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8188},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":137945,"byte_end":137960,"line_start":114,"line_end":114,"column_start":5,"column_end":20},"name":"InvalidHexDigit","qualname":"::lexer::LexError::InvalidHexDigit","value":"LexError::InvalidHexDigit(char)","parent":{"krate":0,"index":8176},"children":[],"decl_id":null,"docs":" An invalid hexadecimal digit was found.\n","sig":null,"attributes":[{"value":"/ An invalid hexadecimal digit was found.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":137897,"byte_end":137940,"line_start":113,"line_end":113,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8191},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":138017,"byte_end":138029,"line_start":117,"line_end":117,"column_start":5,"column_end":17},"name":"InvalidDigit","qualname":"::lexer::LexError::InvalidDigit","value":"LexError::InvalidDigit(char)","parent":{"krate":0,"index":8176},"children":[],"decl_id":null,"docs":" An invalid base-10 digit was found.\n","sig":null,"attributes":[{"value":"/ An invalid base-10 digit was found.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":137973,"byte_end":138012,"line_start":116,"line_end":116,"column_start":5,"column_end":44}}]},{"kind":"StructVariant","id":{"krate":0,"index":8194},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":138163,"byte_end":138171,"line_start":121,"line_end":121,"column_start":5,"column_end":13},"name":"Expected","qualname":"::lexer::LexError::Expected","value":"LexError::Expected { wanted, found }","parent":{"krate":0,"index":8176},"children":[],"decl_id":null,"docs":" Parsing expected `wanted` but ended up finding `found` instead where the\n two characters aren't the same.\n","sig":null,"attributes":[{"value":"/ Parsing expected `wanted` but ended up finding `found` instead where the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":138042,"byte_end":138118,"line_start":119,"line_end":119,"column_start":5,"column_end":81}},{"value":"/ two characters aren't the same.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":138123,"byte_end":138158,"line_start":120,"line_end":120,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8197},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":138415,"byte_end":138428,"line_start":129,"line_end":129,"column_start":5,"column_end":18},"name":"UnexpectedEof","qualname":"::lexer::LexError::UnexpectedEof","value":"LexError::UnexpectedEof","parent":{"krate":0,"index":8176},"children":[],"decl_id":null,"docs":" We needed to parse more but EOF (or end of the string) was encountered.\n","sig":null,"attributes":[{"value":"/ We needed to parse more but EOF (or end of the string) was encountered.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":138335,"byte_end":138410,"line_start":128,"line_end":128,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8199},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":138530,"byte_end":138542,"line_start":133,"line_end":133,"column_start":5,"column_end":17},"name":"NumberTooBig","qualname":"::lexer::LexError::NumberTooBig","value":"LexError::NumberTooBig","parent":{"krate":0,"index":8176},"children":[],"decl_id":null,"docs":" A number failed to parse because it was too big to fit within the target\n type.\n","sig":null,"attributes":[{"value":"/ A number failed to parse because it was too big to fit within the target","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":138435,"byte_end":138511,"line_start":131,"line_end":131,"column_start":5,"column_end":81}},{"value":"/ type.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":138516,"byte_end":138525,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8201},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":138687,"byte_end":138706,"line_start":137,"line_end":137,"column_start":5,"column_end":24},"name":"InvalidUnicodeValue","qualname":"::lexer::LexError::InvalidUnicodeValue","value":"LexError::InvalidUnicodeValue(u32)","parent":{"krate":0,"index":8176},"children":[],"decl_id":null,"docs":" An invalid unicode value was found in a `\\u{...}` escape in a string,\n only valid unicode scalars can be escaped that way.\n","sig":null,"attributes":[{"value":"/ An invalid unicode value was found in a `\\u{...}` escape in a string,","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":138549,"byte_end":138622,"line_start":135,"line_end":135,"column_start":5,"column_end":78}},{"value":"/ only valid unicode scalars can be escaped that way.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":138627,"byte_end":138682,"line_start":136,"line_end":136,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8204},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":138870,"byte_end":138884,"line_start":141,"line_end":141,"column_start":5,"column_end":19},"name":"LoneUnderscore","qualname":"::lexer::LexError::LoneUnderscore","value":"LexError::LoneUnderscore","parent":{"krate":0,"index":8176},"children":[],"decl_id":null,"docs":" A lone underscore was found when parsing a number, since underscores\n should always be preceded and succeeded with a digit of some form.\n","sig":null,"attributes":[{"value":"/ A lone underscore was found when parsing a number, since underscores","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":138718,"byte_end":138790,"line_start":139,"line_end":139,"column_start":5,"column_end":77}},{"value":"/ should always be preceded and succeeded with a digit of some form.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":138795,"byte_end":138865,"line_start":140,"line_end":140,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8206},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":138910,"byte_end":138925,"line_start":144,"line_end":144,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::lexer::LexError::__Nonexhaustive","value":"LexError::__Nonexhaustive","parent":{"krate":0,"index":8176},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8176},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":137381,"byte_end":137389,"line_start":97,"line_end":97,"column_start":10,"column_end":18},"name":"LexError","qualname":"::lexer::LexError","value":"pub enum LexError {\n    DanglingBlockComment,\n    Unexpected(char),\n    InvalidStringElement(char),\n    InvalidStringEscape(char),\n    InvalidHexDigit(char),\n    InvalidDigit(char),\n    Expected {\n            wanted: char,\n            found: char,\n        },\n    UnexpectedEof,\n    NumberTooBig,\n    InvalidUnicodeValue(u32),\n    LoneUnderscore,\n    __Nonexhaustive,\n}","parent":null,"children":[{"krate":0,"index":8177},{"krate":0,"index":8179},{"krate":0,"index":8182},{"krate":0,"index":8185},{"krate":0,"index":8188},{"krate":0,"index":8191},{"krate":0,"index":8194},{"krate":0,"index":8197},{"krate":0,"index":8199},{"krate":0,"index":8201},{"krate":0,"index":8204},{"krate":0,"index":8206}],"decl_id":null,"docs":" Errors that can be generated while lexing.","sig":null,"attributes":[{"value":"/ Errors that can be generated while lexing.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":137146,"byte_end":137192,"line_start":92,"line_end":92,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":137193,"byte_end":137196,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ All lexing errors have line/colum/position information as well as a","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":137197,"byte_end":137268,"line_start":94,"line_end":94,"column_start":1,"column_end":72}},{"value":"/ `LexError` indicating what kind of error happened while lexing.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":137269,"byte_end":137336,"line_start":95,"line_end":95,"column_start":1,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8217},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":139053,"byte_end":139057,"line_start":151,"line_end":151,"column_start":5,"column_end":9},"name":"Plus","qualname":"::lexer::SignToken::Plus","value":"SignToken::Plus","parent":{"krate":0,"index":8216},"children":[],"decl_id":null,"docs":" Plus sign: \"+\",\n","sig":null,"attributes":[{"value":"/ Plus sign: \"+\",","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":139029,"byte_end":139048,"line_start":150,"line_end":150,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8219},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":139088,"byte_end":139093,"line_start":153,"line_end":153,"column_start":5,"column_end":10},"name":"Minus","qualname":"::lexer::SignToken::Minus","value":"SignToken::Minus","parent":{"krate":0,"index":8216},"children":[],"decl_id":null,"docs":" Minus sign: \"-\",\n","sig":null,"attributes":[{"value":"/ Minus sign: \"-\",","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":139063,"byte_end":139083,"line_start":152,"line_end":152,"column_start":5,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":8216},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":139013,"byte_end":139022,"line_start":149,"line_end":149,"column_start":10,"column_end":19},"name":"SignToken","qualname":"::lexer::SignToken","value":"pub enum SignToken { Plus, Minus, }","parent":null,"children":[{"krate":0,"index":8217},{"krate":0,"index":8219}],"decl_id":null,"docs":" A sign token for an integer.\n","sig":null,"attributes":[{"value":"/ A sign token for an integer.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":138930,"byte_end":138962,"line_start":147,"line_end":147,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":8229},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":139242,"byte_end":139249,"line_start":160,"line_end":160,"column_start":12,"column_end":19},"name":"Integer","qualname":"::lexer::Integer","value":"","parent":null,"children":[],"decl_id":null,"docs":" A parsed integer, signed or unsigned.","sig":null,"attributes":[{"value":"/ A parsed integer, signed or unsigned.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":139098,"byte_end":139139,"line_start":156,"line_end":156,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":139140,"byte_end":139143,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ Methods can be use to access the value of the integer.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":139144,"byte_end":139202,"line_start":158,"line_end":158,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":8257},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":139541,"byte_end":139546,"line_start":174,"line_end":174,"column_start":12,"column_end":17},"name":"Float","qualname":"::lexer::Float","value":"","parent":null,"children":[],"decl_id":null,"docs":" A parsed float.","sig":null,"attributes":[{"value":"/ A parsed float.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":139421,"byte_end":139440,"line_start":170,"line_end":170,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":139441,"byte_end":139444,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ Methods can be use to access the value of the float.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":139445,"byte_end":139501,"line_start":172,"line_end":172,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":8283},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":139730,"byte_end":139740,"line_start":184,"line_end":184,"column_start":12,"column_end":22},"name":"WasmString","qualname":"::lexer::WasmString","value":"","parent":null,"children":[],"decl_id":null,"docs":" A parsed string.\n","sig":null,"attributes":[{"value":"/ A parsed string.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":139670,"byte_end":139690,"line_start":182,"line_end":182,"column_start":1,"column_end":21}}]},{"kind":"StructVariant","id":{"krate":0,"index":8311},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":140001,"byte_end":140004,"line_start":196,"line_end":196,"column_start":5,"column_end":8},"name":"Nan","qualname":"::lexer::FloatVal::Nan","value":"FloatVal::Nan { val, negative }","parent":{"krate":0,"index":8309},"children":[],"decl_id":null,"docs":" A float `NaN` representation\n","sig":null,"attributes":[{"value":"/ A float `NaN` representation","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":139964,"byte_end":139996,"line_start":195,"line_end":195,"column_start":5,"column_end":37}}]},{"kind":"StructVariant","id":{"krate":0,"index":8314},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":140237,"byte_end":140240,"line_start":203,"line_end":203,"column_start":5,"column_end":8},"name":"Inf","qualname":"::lexer::FloatVal::Inf","value":"FloatVal::Inf { negative }","parent":{"krate":0,"index":8309},"children":[],"decl_id":null,"docs":" An float infinite representation,\n","sig":null,"attributes":[{"value":"/ An float infinite representation,","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":140195,"byte_end":140232,"line_start":202,"line_end":202,"column_start":5,"column_end":42}}]},{"kind":"StructVariant","id":{"krate":0,"index":8316},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":140361,"byte_end":140364,"line_start":208,"line_end":208,"column_start":5,"column_end":8},"name":"Val","qualname":"::lexer::FloatVal::Val","value":"FloatVal::Val { hex, integral, decimal, exponent }","parent":{"krate":0,"index":8309},"children":[],"decl_id":null,"docs":" A parsed and separated floating point value\n","sig":null,"attributes":[{"value":"/ A parsed and separated floating point value","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":140309,"byte_end":140356,"line_start":207,"line_end":207,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":8309},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":139945,"byte_end":139953,"line_start":194,"line_end":194,"column_start":10,"column_end":18},"name":"FloatVal","qualname":"::lexer::FloatVal","value":"pub enum FloatVal<'a> {\n    Nan {\n            val: Option<u64>,\n            negative: bool,\n        },\n    Inf {\n            negative: bool,\n        },\n    Val {\n            hex: bool,\n            integral: Cow,\n            decimal: Option<Cow>,\n            exponent: Option<Cow>,\n        },\n}","parent":null,"children":[{"krate":0,"index":8311},{"krate":0,"index":8314},{"krate":0,"index":8316}],"decl_id":null,"docs":" Possible parsed float values\n","sig":null,"attributes":[{"value":"/ Possible parsed float values","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":139875,"byte_end":139907,"line_start":192,"line_end":192,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":525},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":140952,"byte_end":140955,"line_start":224,"line_end":224,"column_start":12,"column_end":15},"name":"new","qualname":"<Lexer>::new","value":"pub fn new(&str) -> Lexer","parent":null,"children":[],"decl_id":null,"docs":" Creates a new lexer which will lex the `input` source string.\n","sig":null,"attributes":[{"value":"/ Creates a new lexer which will lex the `input` source string.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":140875,"byte_end":140940,"line_start":223,"line_end":223,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":141157,"byte_end":141162,"line_start":232,"line_end":232,"column_start":12,"column_end":17},"name":"input","qualname":"<Lexer>::input","value":"pub fn input(&Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Returns the original source input that we're lexing.\n","sig":null,"attributes":[{"value":"/ Returns the original source input that we're lexing.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":141089,"byte_end":141145,"line_start":231,"line_end":231,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":527},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":141426,"byte_end":141431,"line_start":243,"line_end":243,"column_start":12,"column_end":17},"name":"parse","qualname":"<Lexer>::parse","value":"pub fn parse(&mut Self) -> Result<Option<Token>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Lexes the next token in the input.","sig":null,"attributes":[{"value":"/ Lexes the next token in the input.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":141213,"byte_end":141251,"line_start":236,"line_end":236,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":141256,"byte_end":141259,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Returns `Some` if a token is found or `None` if we're at EOF.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":141264,"byte_end":141329,"line_start":238,"line_end":238,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":141334,"byte_end":141337,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":141342,"byte_end":141354,"line_start":240,"line_end":240,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":141359,"byte_end":141362,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the input is malformed.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":141367,"byte_end":141414,"line_start":242,"line_end":242,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":157516,"byte_end":157519,"line_start":708,"line_end":708,"column_start":12,"column_end":15},"name":"src","qualname":"<Token>::src","value":"pub fn src(&Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Returns the original source text for this token.\n","sig":null,"attributes":[{"value":"/ Returns the original source text for this token.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":157452,"byte_end":157504,"line_start":707,"line_end":707,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":158080,"byte_end":158084,"line_start":727,"line_end":727,"column_start":12,"column_end":16},"name":"sign","qualname":"<Integer>::sign","value":"pub fn sign(&Self) -> Option<SignToken>","parent":null,"children":[],"decl_id":null,"docs":" Returns the sign token for this integer.\n","sig":null,"attributes":[{"value":"/ Returns the sign token for this integer.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":158024,"byte_end":158068,"line_start":726,"line_end":726,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":158212,"byte_end":158215,"line_start":732,"line_end":732,"column_start":12,"column_end":15},"name":"src","qualname":"<Integer>::src","value":"pub fn src(&Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Returns the original source text for this integer.\n","sig":null,"attributes":[{"value":"/ Returns the original source text for this integer.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":158146,"byte_end":158200,"line_start":731,"line_end":731,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":575},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":158399,"byte_end":158402,"line_start":738,"line_end":738,"column_start":12,"column_end":15},"name":"val","qualname":"<Integer>::val","value":"pub fn val(&Self) -> (&str, u32)","parent":null,"children":[],"decl_id":null,"docs":" Returns the value string that can be parsed for this integer, as well as\n the base that it should be parsed in\n","sig":null,"attributes":[{"value":"/ Returns the value string that can be parsed for this integer, as well as","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":158266,"byte_end":158342,"line_start":736,"line_end":736,"column_start":5,"column_end":81}},{"value":"/ the base that it should be parsed in","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":158347,"byte_end":158387,"line_start":737,"line_end":737,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":158583,"byte_end":158586,"line_start":745,"line_end":745,"column_start":12,"column_end":15},"name":"src","qualname":"<Float>::src","value":"pub fn src(&Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Returns the original source text for this integer.\n","sig":null,"attributes":[{"value":"/ Returns the original source text for this integer.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":158517,"byte_end":158571,"line_start":744,"line_end":744,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":579},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":158749,"byte_end":158752,"line_start":751,"line_end":751,"column_start":12,"column_end":15},"name":"val","qualname":"<Float>::val","value":"pub fn val(&Self) -> &FloatVal","parent":null,"children":[],"decl_id":null,"docs":" Returns a parsed value of this float with all of the components still\n listed as strings.\n","sig":null,"attributes":[{"value":"/ Returns a parsed value of this float with all of the components still","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":158637,"byte_end":158710,"line_start":749,"line_end":749,"column_start":5,"column_end":78}},{"value":"/ listed as strings.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":158715,"byte_end":158737,"line_start":750,"line_end":750,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":158903,"byte_end":158906,"line_start":758,"line_end":758,"column_start":12,"column_end":15},"name":"src","qualname":"<WasmString>::src","value":"pub fn src(&Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Returns the original source text for this string.\n","sig":null,"attributes":[{"value":"/ Returns the original source text for this string.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":158838,"byte_end":158891,"line_start":757,"line_end":757,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":159033,"byte_end":159036,"line_start":763,"line_end":763,"column_start":12,"column_end":15},"name":"val","qualname":"<WasmString>::val","value":"pub fn val(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a parsed value, as a list of bytes, for this string.\n","sig":null,"attributes":[{"value":"/ Returns a parsed value, as a list of bytes, for this string.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":158957,"byte_end":159021,"line_start":762,"line_end":762,"column_start":5,"column_end":69}}]},{"kind":"Mod","id":{"krate":0,"index":590},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"parser","qualname":"::parser","value":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","parent":null,"children":[{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":595},{"krate":0,"index":598},{"krate":0,"index":601},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":608},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":615},{"krate":0,"index":618},{"krate":0,"index":621},{"krate":0,"index":624},{"krate":0,"index":627},{"krate":0,"index":630},{"krate":0,"index":633},{"krate":0,"index":637},{"krate":0,"index":639},{"krate":0,"index":8330},{"krate":0,"index":8338},{"krate":0,"index":8339},{"krate":0,"index":8341},{"krate":0,"index":8343},{"krate":0,"index":8346},{"krate":0,"index":8348},{"krate":0,"index":646},{"krate":0,"index":8351},{"krate":0,"index":8355},{"krate":0,"index":8357},{"krate":0,"index":650},{"krate":0,"index":664},{"krate":0,"index":700},{"krate":0,"index":722},{"krate":0,"index":726}],"decl_id":null,"docs":" Traits for parsing the WebAssembly Text format","sig":null,"attributes":[{"value":"/ Traits for parsing the WebAssembly Text format","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":169862,"byte_end":169912,"line_start":1,"line_end":1,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":169913,"byte_end":169916,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains the traits, abstractions, and utilities needed to","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":169917,"byte_end":169991,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/ define custom parsers for WebAssembly text format items. This module exposes","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":169992,"byte_end":170072,"line_start":4,"line_end":4,"column_start":1,"column_end":81}},{"value":"/ a recursive descent parsing strategy and centers around the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":170073,"byte_end":170136,"line_start":5,"line_end":5,"column_start":1,"column_end":64}},{"value":"/ [`Parse`](crate::parser::Parse) trait for defining new fragments of","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":170137,"byte_end":170208,"line_start":6,"line_end":6,"column_start":1,"column_end":72}},{"value":"/ WebAssembly text syntax.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":170209,"byte_end":170237,"line_start":7,"line_end":7,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":170238,"byte_end":170241,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The top-level [`parse`](crate::parser::parse) function can be used to fully parse AST fragments:","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":170242,"byte_end":170342,"line_start":9,"line_end":9,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":170343,"byte_end":170346,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":170347,"byte_end":170354,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ use wast::Wat;","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":170355,"byte_end":170373,"line_start":12,"line_end":12,"column_start":1,"column_end":19}},{"value":"/ use wast::parser::{self, ParseBuffer};","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":170374,"byte_end":170416,"line_start":13,"line_end":13,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":170417,"byte_end":170420,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # fn foo() -> Result<(), wast::Error> {","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":170421,"byte_end":170464,"line_start":15,"line_end":15,"column_start":1,"column_end":44}},{"value":"/ let wat = \"(module (func))\";","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":170465,"byte_end":170497,"line_start":16,"line_end":16,"column_start":1,"column_end":33}},{"value":"/ let buf = ParseBuffer::new(wat)?;","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":170498,"byte_end":170535,"line_start":17,"line_end":17,"column_start":1,"column_end":38}},{"value":"/ let module = parser::parse::<Wat>(&buf)?;","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":170536,"byte_end":170581,"line_start":18,"line_end":18,"column_start":1,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":170582,"byte_end":170594,"line_start":19,"line_end":19,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":170595,"byte_end":170602,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":170603,"byte_end":170610,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":170611,"byte_end":170614,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ and you can also define your own new syntax with the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":170615,"byte_end":170671,"line_start":23,"line_end":23,"column_start":1,"column_end":57}},{"value":"/ [`Parse`](crate::parser::Parse) trait:","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":170672,"byte_end":170714,"line_start":24,"line_end":24,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":170715,"byte_end":170718,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":170719,"byte_end":170726,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ use wast::{kw, Import, Func};","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":170727,"byte_end":170760,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/ use wast::parser::{Parser, Parse, Result};","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":170761,"byte_end":170807,"line_start":28,"line_end":28,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":170808,"byte_end":170811,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ // Fields of a WebAssembly which only allow imports and functions, and all","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":170812,"byte_end":170890,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ // imports must come before all the functions","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":170891,"byte_end":170940,"line_start":31,"line_end":31,"column_start":1,"column_end":50}},{"value":"/ struct OnlyImportsAndFunctions<'a> {","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":170941,"byte_end":170981,"line_start":32,"line_end":32,"column_start":1,"column_end":41}},{"value":"/     imports: Vec<Import<'a>>,","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":170982,"byte_end":171015,"line_start":33,"line_end":33,"column_start":1,"column_end":34}},{"value":"/     functions: Vec<Func<'a>>,","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":171016,"byte_end":171049,"line_start":34,"line_end":34,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":171050,"byte_end":171055,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":171056,"byte_end":171059,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ impl<'a> Parse<'a> for OnlyImportsAndFunctions<'a> {","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":171060,"byte_end":171116,"line_start":37,"line_end":37,"column_start":1,"column_end":57}},{"value":"/     fn parse(parser: Parser<'a>) -> Result<Self> {","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":171117,"byte_end":171171,"line_start":38,"line_end":38,"column_start":1,"column_end":55}},{"value":"/         // While the second token is `import` (the first is `(`, so we care","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":171172,"byte_end":171251,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/         // about the second) we parse an `ast::ModuleImport` inside of","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":171252,"byte_end":171326,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/         // parentheses. The `parens` function here ensures that what we","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":171327,"byte_end":171402,"line_start":41,"line_end":41,"column_start":1,"column_end":76}},{"value":"/         // parse inside of it is surrounded by `(` and `)`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":171403,"byte_end":171466,"line_start":42,"line_end":42,"column_start":1,"column_end":64}},{"value":"/         let mut imports = Vec::new();","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":171467,"byte_end":171508,"line_start":43,"line_end":43,"column_start":1,"column_end":42}},{"value":"/         while parser.peek2::<kw::import>() {","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":171509,"byte_end":171557,"line_start":44,"line_end":44,"column_start":1,"column_end":49}},{"value":"/             let import = parser.parens(|p| p.parse())?;","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":171558,"byte_end":171617,"line_start":45,"line_end":45,"column_start":1,"column_end":60}},{"value":"/             imports.push(import);","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":171618,"byte_end":171655,"line_start":46,"line_end":46,"column_start":1,"column_end":38}},{"value":"/         }","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":171656,"byte_end":171669,"line_start":47,"line_end":47,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":171670,"byte_end":171673,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/         // Afterwards we assume everything else is a function. Note that","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":171674,"byte_end":171750,"line_start":49,"line_end":49,"column_start":1,"column_end":77}},{"value":"/         // `parse` here is a generic function and type inference figures out","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":171751,"byte_end":171831,"line_start":50,"line_end":50,"column_start":1,"column_end":81}},{"value":"/         // that we're parsing functions here and imports above.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":171832,"byte_end":171899,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/         let mut functions = Vec::new();","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":171900,"byte_end":171943,"line_start":52,"line_end":52,"column_start":1,"column_end":44}},{"value":"/         while !parser.is_empty() {","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":171944,"byte_end":171982,"line_start":53,"line_end":53,"column_start":1,"column_end":39}},{"value":"/             let func = parser.parens(|p| p.parse())?;","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":171983,"byte_end":172040,"line_start":54,"line_end":54,"column_start":1,"column_end":58}},{"value":"/             functions.push(func);","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":172041,"byte_end":172078,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/         }","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":172079,"byte_end":172092,"line_start":56,"line_end":56,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":172093,"byte_end":172096,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/         Ok(OnlyImportsAndFunctions { imports, functions })","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":172097,"byte_end":172159,"line_start":58,"line_end":58,"column_start":1,"column_end":63}},{"value":"/     }","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":172160,"byte_end":172169,"line_start":59,"line_end":59,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":172170,"byte_end":172175,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":172176,"byte_end":172183,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":172184,"byte_end":172187,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ This module is heavily inspired by [`syn`](https://docs.rs/syn) so you can","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":172188,"byte_end":172266,"line_start":63,"line_end":63,"column_start":1,"column_end":79}},{"value":"/ likely also draw inspiration from the excellent examples in the `syn` crate.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":172267,"byte_end":172347,"line_start":64,"line_end":64,"column_start":1,"column_end":81}}]},{"kind":"Function","id":{"krate":0,"index":627},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":173395,"byte_end":173400,"line_start":106,"line_end":106,"column_start":8,"column_end":13},"name":"parse","qualname":"::parser::parse","value":"pub fn parse<'a, T: Parse>(&'a ParseBuffer) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" A top-level convenience parseing function that parss a `T` from `buf` and\n requires that all tokens in `buf` are consume.","sig":null,"attributes":[{"value":"/ A top-level convenience parseing function that parss a `T` from `buf` and","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":172519,"byte_end":172596,"line_start":73,"line_end":73,"column_start":1,"column_end":78}},{"value":"/ requires that all tokens in `buf` are consume.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":172597,"byte_end":172647,"line_start":74,"line_end":74,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":172648,"byte_end":172651,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ This generic parsing function can be used to parse any `T` implementing the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":172652,"byte_end":172731,"line_start":76,"line_end":76,"column_start":1,"column_end":80}},{"value":"/ [`Parse`] trait. It is not used from [`Parse`] trait implementations.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":172732,"byte_end":172805,"line_start":77,"line_end":77,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":172806,"byte_end":172809,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":172810,"byte_end":172824,"line_start":79,"line_end":79,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":172825,"byte_end":172828,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":172829,"byte_end":172836,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ use wast::Wat;","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":172837,"byte_end":172855,"line_start":82,"line_end":82,"column_start":1,"column_end":19}},{"value":"/ use wast::parser::{self, ParseBuffer};","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":172856,"byte_end":172898,"line_start":83,"line_end":83,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":172899,"byte_end":172902,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ # fn foo() -> Result<(), wast::Error> {","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":172903,"byte_end":172946,"line_start":85,"line_end":85,"column_start":1,"column_end":44}},{"value":"/ let wat = \"(module (func))\";","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":172947,"byte_end":172979,"line_start":86,"line_end":86,"column_start":1,"column_end":33}},{"value":"/ let buf = ParseBuffer::new(wat)?;","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":172980,"byte_end":173017,"line_start":87,"line_end":87,"column_start":1,"column_end":38}},{"value":"/ let module = parser::parse::<Wat>(&buf)?;","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":173018,"byte_end":173063,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":173064,"byte_end":173076,"line_start":89,"line_end":89,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":173077,"byte_end":173084,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":173085,"byte_end":173092,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":173093,"byte_end":173096,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ or parsing simply a fragment","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":173097,"byte_end":173129,"line_start":93,"line_end":93,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":173130,"byte_end":173133,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":173134,"byte_end":173141,"line_start":95,"line_end":95,"column_start":1,"column_end":8}},{"value":"/ use wast::parser::{self, ParseBuffer};","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":173142,"byte_end":173184,"line_start":96,"line_end":96,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":173185,"byte_end":173188,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # fn foo() -> Result<(), wast::Error> {","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":173189,"byte_end":173232,"line_start":98,"line_end":98,"column_start":1,"column_end":44}},{"value":"/ let wat = \"12\";","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":173233,"byte_end":173252,"line_start":99,"line_end":99,"column_start":1,"column_end":20}},{"value":"/ let buf = ParseBuffer::new(wat)?;","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":173253,"byte_end":173290,"line_start":100,"line_end":100,"column_start":1,"column_end":38}},{"value":"/ let val = parser::parse::<u32>(&buf)?;","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":173291,"byte_end":173333,"line_start":101,"line_end":101,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(val, 12);","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":173334,"byte_end":173358,"line_start":102,"line_end":102,"column_start":1,"column_end":25}},{"value":"/ # Ok(())","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":173359,"byte_end":173371,"line_start":103,"line_end":103,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":173372,"byte_end":173379,"line_start":104,"line_end":104,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":173380,"byte_end":173387,"line_start":105,"line_end":105,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":630},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":177401,"byte_end":177406,"line_start":208,"line_end":208,"column_start":11,"column_end":16},"name":"Parse","qualname":"::parser::Parse","value":"Parse<'a>: Sized","parent":null,"children":[{"krate":0,"index":632}],"decl_id":null,"docs":" A trait for parsing a fragment of syntax in a recursive descent fashion.","sig":null,"attributes":[{"value":"/ A trait for parsing a fragment of syntax in a recursive descent fashion.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":173681,"byte_end":173757,"line_start":116,"line_end":116,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":173758,"byte_end":173761,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ The [`Parse`] trait is main abstraction you'll be working with when defining","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":173762,"byte_end":173842,"line_start":118,"line_end":118,"column_start":1,"column_end":81}},{"value":"/ custom parser or custom syntax for your WebAssembly text format (or when","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":173843,"byte_end":173919,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/ using the official format items). Almost all items in the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":173920,"byte_end":173981,"line_start":120,"line_end":120,"column_start":1,"column_end":62}},{"value":"/ [`ast`](crate::ast) module implement the [`Parse`] trait, and you'll","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":173982,"byte_end":174054,"line_start":121,"line_end":121,"column_start":1,"column_end":73}},{"value":"/ commonly use this with:","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":174055,"byte_end":174082,"line_start":122,"line_end":122,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":174083,"byte_end":174086,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ * The top-level [`parse`] function to parse an entire input.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":174087,"byte_end":174151,"line_start":124,"line_end":124,"column_start":1,"column_end":65}},{"value":"/ * The intermediate [`Parser::parse`] function to parse an item out of an","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":174152,"byte_end":174228,"line_start":125,"line_end":125,"column_start":1,"column_end":77}},{"value":"/   input stream and then parse remaining items.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":174229,"byte_end":174279,"line_start":126,"line_end":126,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":174280,"byte_end":174283,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ Implementation of [`Parse`] take a [`Parser`] as input and will mutate the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":174284,"byte_end":174362,"line_start":128,"line_end":128,"column_start":1,"column_end":79}},{"value":"/ parser as they parse syntax. Once a token is consume it cannot be","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":174363,"byte_end":174432,"line_start":129,"line_end":129,"column_start":1,"column_end":70}},{"value":"/ \"un-consumed\". Utilities such as [`Parser::peek`] and [`Parser::lookahead1`]","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":174433,"byte_end":174513,"line_start":130,"line_end":130,"column_start":1,"column_end":81}},{"value":"/ can be used to determine what to parse next.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":174514,"byte_end":174562,"line_start":131,"line_end":131,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":174563,"byte_end":174566,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ ## When to parse `(` and `)`?","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":174567,"byte_end":174600,"line_start":133,"line_end":133,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":174601,"byte_end":174604,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ Conventionally types are not responsible for parsing their own `(` and `)`","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":174605,"byte_end":174683,"line_start":135,"line_end":135,"column_start":1,"column_end":79}},{"value":"/ tokens which surround the type. For example WebAssembly imports look like:","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":174684,"byte_end":174762,"line_start":136,"line_end":136,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":174763,"byte_end":174766,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":174767,"byte_end":174778,"line_start":138,"line_end":138,"column_start":1,"column_end":12}},{"value":"/ (import \"foo\" \"bar\" (func (type 0)))","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":174779,"byte_end":174819,"line_start":139,"line_end":139,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":174820,"byte_end":174827,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":174828,"byte_end":174831,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ but the [`Import`](crate::ast::Import) type parser looks like:","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":174832,"byte_end":174898,"line_start":142,"line_end":142,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":174899,"byte_end":174902,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":174903,"byte_end":174910,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/ # use wast::kw;","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":174911,"byte_end":174930,"line_start":145,"line_end":145,"column_start":1,"column_end":20}},{"value":"/ # use wast::parser::{Parser, Parse, Result};","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":174931,"byte_end":174979,"line_start":146,"line_end":146,"column_start":1,"column_end":49}},{"value":"/ # struct Import<'a>(&'a str);","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":174980,"byte_end":175013,"line_start":147,"line_end":147,"column_start":1,"column_end":34}},{"value":"/ impl<'a> Parse<'a> for Import<'a> {","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":175014,"byte_end":175053,"line_start":148,"line_end":148,"column_start":1,"column_end":40}},{"value":"/     fn parse(parser: Parser<'a>) -> Result<Self> {","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":175054,"byte_end":175108,"line_start":149,"line_end":149,"column_start":1,"column_end":55}},{"value":"/         parser.parse::<kw::import>()?;","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":175109,"byte_end":175151,"line_start":150,"line_end":150,"column_start":1,"column_end":43}},{"value":"/         // ...","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":175152,"byte_end":175170,"line_start":151,"line_end":151,"column_start":1,"column_end":19}},{"value":"/ # panic!()","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":175171,"byte_end":175185,"line_start":152,"line_end":152,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":175186,"byte_end":175195,"line_start":153,"line_end":153,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":175196,"byte_end":175201,"line_start":154,"line_end":154,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":175202,"byte_end":175209,"line_start":155,"line_end":155,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":175210,"byte_end":175213,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ It is assumed here that the `(` and `)` tokens which surround an `import`","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":175214,"byte_end":175291,"line_start":157,"line_end":157,"column_start":1,"column_end":78}},{"value":"/ statement in the WebAssembly text format are parsed by the parent item","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":175292,"byte_end":175366,"line_start":158,"line_end":158,"column_start":1,"column_end":75}},{"value":"/ parsing `Import`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":175367,"byte_end":175388,"line_start":159,"line_end":159,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":175389,"byte_end":175392,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ Note that this is just a convention, so it's not necessarily required for","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":175393,"byte_end":175470,"line_start":161,"line_end":161,"column_start":1,"column_end":78}},{"value":"/ all types. It's recommended that your types stick to this convention where","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":175471,"byte_end":175549,"line_start":162,"line_end":162,"column_start":1,"column_end":79}},{"value":"/ possible to avoid nested calls to [`Parser::parens`] or accidentally trying","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":175550,"byte_end":175629,"line_start":163,"line_end":163,"column_start":1,"column_end":80}},{"value":"/ to parse too many parenthesis.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":175630,"byte_end":175664,"line_start":164,"line_end":164,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":175665,"byte_end":175668,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":175669,"byte_end":175683,"line_start":166,"line_end":166,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":175684,"byte_end":175687,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ Let's say you want to define your own WebAssembly text format which only","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":175688,"byte_end":175764,"line_start":168,"line_end":168,"column_start":1,"column_end":77}},{"value":"/ contains imports and functions. You also require all imports to be listed","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":175765,"byte_end":175842,"line_start":169,"line_end":169,"column_start":1,"column_end":78}},{"value":"/ before all functions. An example [`Parse`] implementation might look like:","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":175843,"byte_end":175921,"line_start":170,"line_end":170,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":175922,"byte_end":175925,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":175926,"byte_end":175933,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/ use wast::{Import, Func, kw};","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":175934,"byte_end":175967,"line_start":173,"line_end":173,"column_start":1,"column_end":34}},{"value":"/ use wast::parser::{Parser, Parse, Result};","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":175968,"byte_end":176014,"line_start":174,"line_end":174,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":176015,"byte_end":176018,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ // Fields of a WebAssembly which only allow imports and functions, and all","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":176019,"byte_end":176097,"line_start":176,"line_end":176,"column_start":1,"column_end":79}},{"value":"/ // imports must come before all the functions","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":176098,"byte_end":176147,"line_start":177,"line_end":177,"column_start":1,"column_end":50}},{"value":"/ struct OnlyImportsAndFunctions<'a> {","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":176148,"byte_end":176188,"line_start":178,"line_end":178,"column_start":1,"column_end":41}},{"value":"/     imports: Vec<Import<'a>>,","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":176189,"byte_end":176222,"line_start":179,"line_end":179,"column_start":1,"column_end":34}},{"value":"/     functions: Vec<Func<'a>>,","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":176223,"byte_end":176256,"line_start":180,"line_end":180,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":176257,"byte_end":176262,"line_start":181,"line_end":181,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":176263,"byte_end":176266,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ impl<'a> Parse<'a> for OnlyImportsAndFunctions<'a> {","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":176267,"byte_end":176323,"line_start":183,"line_end":183,"column_start":1,"column_end":57}},{"value":"/     fn parse(parser: Parser<'a>) -> Result<Self> {","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":176324,"byte_end":176378,"line_start":184,"line_end":184,"column_start":1,"column_end":55}},{"value":"/         // While the second token is `import` (the first is `(`, so we care","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":176379,"byte_end":176458,"line_start":185,"line_end":185,"column_start":1,"column_end":80}},{"value":"/         // about the second) we parse an `ast::ModuleImport` inside of","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":176459,"byte_end":176533,"line_start":186,"line_end":186,"column_start":1,"column_end":75}},{"value":"/         // parentheses. The `parens` function here ensures that what we","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":176534,"byte_end":176609,"line_start":187,"line_end":187,"column_start":1,"column_end":76}},{"value":"/         // parse inside of it is surrounded by `(` and `)`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":176610,"byte_end":176673,"line_start":188,"line_end":188,"column_start":1,"column_end":64}},{"value":"/         let mut imports = Vec::new();","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":176674,"byte_end":176715,"line_start":189,"line_end":189,"column_start":1,"column_end":42}},{"value":"/         while parser.peek2::<kw::import>() {","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":176716,"byte_end":176764,"line_start":190,"line_end":190,"column_start":1,"column_end":49}},{"value":"/             let import = parser.parens(|p| p.parse())?;","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":176765,"byte_end":176824,"line_start":191,"line_end":191,"column_start":1,"column_end":60}},{"value":"/             imports.push(import);","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":176825,"byte_end":176862,"line_start":192,"line_end":192,"column_start":1,"column_end":38}},{"value":"/         }","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":176863,"byte_end":176876,"line_start":193,"line_end":193,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":176877,"byte_end":176880,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/         // Afterwards we assume everything else is a function. Note that","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":176881,"byte_end":176957,"line_start":195,"line_end":195,"column_start":1,"column_end":77}},{"value":"/         // `parse` here is a generic function and type inference figures out","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":176958,"byte_end":177038,"line_start":196,"line_end":196,"column_start":1,"column_end":81}},{"value":"/         // that we're parsing functions here and imports above.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":177039,"byte_end":177106,"line_start":197,"line_end":197,"column_start":1,"column_end":68}},{"value":"/         let mut functions = Vec::new();","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":177107,"byte_end":177150,"line_start":198,"line_end":198,"column_start":1,"column_end":44}},{"value":"/         while !parser.is_empty() {","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":177151,"byte_end":177189,"line_start":199,"line_end":199,"column_start":1,"column_end":39}},{"value":"/             let func = parser.parens(|p| p.parse())?;","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":177190,"byte_end":177247,"line_start":200,"line_end":200,"column_start":1,"column_end":58}},{"value":"/             functions.push(func);","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":177248,"byte_end":177285,"line_start":201,"line_end":201,"column_start":1,"column_end":38}},{"value":"/         }","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":177286,"byte_end":177299,"line_start":202,"line_end":202,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":177300,"byte_end":177303,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/         Ok(OnlyImportsAndFunctions { imports, functions })","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":177304,"byte_end":177366,"line_start":204,"line_end":204,"column_start":1,"column_end":63}},{"value":"/     }","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":177367,"byte_end":177376,"line_start":205,"line_end":205,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":177377,"byte_end":177382,"line_start":206,"line_end":206,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":177383,"byte_end":177390,"line_start":207,"line_end":207,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":178374,"byte_end":178379,"line_start":228,"line_end":228,"column_start":8,"column_end":13},"name":"parse","qualname":"::parser::Parse::parse","value":"pub fn parse(Parser) -> Result<Self>","parent":{"krate":0,"index":630},"children":[],"decl_id":null,"docs":" Attempts to parse `Self` from `parser`, returning an error if it could\n not be parsed.","sig":null,"attributes":[{"value":"/ Attempts to parse `Self` from `parser`, returning an error if it could","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":177424,"byte_end":177498,"line_start":209,"line_end":209,"column_start":5,"column_end":79}},{"value":"/ not be parsed.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":177503,"byte_end":177521,"line_start":210,"line_end":210,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":177526,"byte_end":177529,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ This method will mutate the state of `parser` after attempting to parse","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":177534,"byte_end":177609,"line_start":212,"line_end":212,"column_start":5,"column_end":80}},{"value":"/ an instance of `Self`. If an error happens then it is likely fatal and","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":177614,"byte_end":177688,"line_start":213,"line_end":213,"column_start":5,"column_end":79}},{"value":"/ there is no guarantee of how many tokens have been consumed from","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":177693,"byte_end":177761,"line_start":214,"line_end":214,"column_start":5,"column_end":73}},{"value":"/ `parser`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":177766,"byte_end":177779,"line_start":215,"line_end":215,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":177784,"byte_end":177787,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ As recommended in the documentation of [`Parse`], implementations of","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":177792,"byte_end":177864,"line_start":217,"line_end":217,"column_start":5,"column_end":77}},{"value":"/ this function should not start out by parsing `(` and `)` tokens, but","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":177869,"byte_end":177942,"line_start":218,"line_end":218,"column_start":5,"column_end":78}},{"value":"/ rather parents calling recursive parsers should parse the `(` and `)`","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":177947,"byte_end":178020,"line_start":219,"line_end":219,"column_start":5,"column_end":78}},{"value":"/ tokens for their child item that's being parsed.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":178025,"byte_end":178077,"line_start":220,"line_end":220,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":178082,"byte_end":178085,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":178090,"byte_end":178102,"line_start":222,"line_end":222,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":178107,"byte_end":178110,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if `Self` could not be parsed. Note","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":178115,"byte_end":178189,"line_start":224,"line_end":224,"column_start":5,"column_end":79}},{"value":"/ that creating an [`Error`] is not exactly a cheap operation, so","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":178194,"byte_end":178261,"line_start":225,"line_end":225,"column_start":5,"column_end":72}},{"value":"/ [`Error`] is typically fatal and propagated all the way back to the top","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":178266,"byte_end":178341,"line_start":226,"line_end":226,"column_start":5,"column_end":80}},{"value":"/ parse call site.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":178346,"byte_end":178366,"line_start":227,"line_end":227,"column_start":5,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":633},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":179137,"byte_end":179141,"line_start":245,"line_end":245,"column_start":11,"column_end":15},"name":"Peek","qualname":"::parser::Peek","value":"Peek","parent":null,"children":[{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636}],"decl_id":null,"docs":" A trait for types which be used to \"peek\" to see if they're the next token\n in an input stream of [`Parser`].","sig":null,"attributes":[{"value":"/ A trait for types which be used to \"peek\" to see if they're the next token","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":178420,"byte_end":178498,"line_start":231,"line_end":231,"column_start":1,"column_end":79}},{"value":"/ in an input stream of [`Parser`].","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":178499,"byte_end":178536,"line_start":232,"line_end":232,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":178537,"byte_end":178540,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ Often when implementing [`Parse`] you'll need to query what the next token","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":178541,"byte_end":178619,"line_start":234,"line_end":234,"column_start":1,"column_end":79}},{"value":"/ in the stream is to figure out what to parse next. This [`Peek`] trait","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":178620,"byte_end":178694,"line_start":235,"line_end":235,"column_start":1,"column_end":75}},{"value":"/ defines the set of types that can be tested whether they're the next token","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":178695,"byte_end":178773,"line_start":236,"line_end":236,"column_start":1,"column_end":79}},{"value":"/ in the input stream.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":178774,"byte_end":178798,"line_start":237,"line_end":237,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":178799,"byte_end":178802,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ Implementations of [`Peek`] should only be present on types that consume","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":178803,"byte_end":178879,"line_start":239,"line_end":239,"column_start":1,"column_end":77}},{"value":"/ exactly one token (not zero, not more, exactly one). Types implementing","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":178880,"byte_end":178955,"line_start":240,"line_end":240,"column_start":1,"column_end":76}},{"value":"/ [`Peek`] should also typically implement [`Parse`] should also typically","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":178956,"byte_end":179032,"line_start":241,"line_end":241,"column_start":1,"column_end":77}},{"value":"/ implement [`Parse`].","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":179033,"byte_end":179057,"line_start":242,"line_end":242,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":179058,"byte_end":179061,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ See the documentation of [`Parser::peek`] for example usage.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":179062,"byte_end":179126,"line_start":244,"line_end":244,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":179438,"byte_end":179442,"line_start":252,"line_end":252,"column_start":8,"column_end":12},"name":"peek","qualname":"::parser::Peek::peek","value":"pub fn peek(Cursor) -> bool","parent":{"krate":0,"index":633},"children":[],"decl_id":null,"docs":" Tests to see whether this token is the first token within the [`Cursor`]\n specified.","sig":null,"attributes":[{"value":"/ Tests to see whether this token is the first token within the [`Cursor`]","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":179148,"byte_end":179224,"line_start":246,"line_end":246,"column_start":5,"column_end":81}},{"value":"/ specified.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":179229,"byte_end":179243,"line_start":247,"line_end":247,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":179248,"byte_end":179251,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if [`Parse`] for this type is highly likely to succeed","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":179256,"byte_end":179329,"line_start":249,"line_end":249,"column_start":5,"column_end":78}},{"value":"/ failing no other error conditions happening (like an integer literal","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":179334,"byte_end":179406,"line_start":250,"line_end":250,"column_start":5,"column_end":77}},{"value":"/ being too big).","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":179411,"byte_end":179430,"line_start":251,"line_end":251,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":179584,"byte_end":179589,"line_start":256,"line_end":256,"column_start":8,"column_end":13},"name":"peek2","qualname":"::parser::Peek::peek2","value":"pub fn peek2(Cursor) -> bool","parent":{"krate":0,"index":633},"children":[],"decl_id":null,"docs":" The same as `peek`, except it checks the token immediately following\n the current token.\n","sig":null,"attributes":[{"value":"/ The same as `peek`, except it checks the token immediately following","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":179477,"byte_end":179549,"line_start":254,"line_end":254,"column_start":5,"column_end":77}},{"value":"/ the current token.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":179554,"byte_end":179576,"line_start":255,"line_end":255,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":179880,"byte_end":179887,"line_start":266,"line_end":266,"column_start":8,"column_end":15},"name":"display","qualname":"::parser::Peek::display","value":"pub fn display() -> &'static str","parent":{"krate":0,"index":633},"children":[],"decl_id":null,"docs":" Returns a human-readable name of this token to display when generating\n errors about this token missing.\n","sig":null,"attributes":[{"value":"/ Returns a human-readable name of this token to display when generating","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":179757,"byte_end":179831,"line_start":264,"line_end":264,"column_start":5,"column_end":79}},{"value":"/ errors about this token missing.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":179836,"byte_end":179872,"line_start":265,"line_end":265,"column_start":5,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":637},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":180013,"byte_end":180019,"line_start":271,"line_end":271,"column_start":10,"column_end":16},"name":"Result","qualname":"::parser::Result","value":"std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" A convenience type definition for `Result` where the error is hardwired to\n [`Error`].\n","sig":null,"attributes":[{"value":"/ A convenience type definition for `Result` where the error is hardwired to","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":179910,"byte_end":179988,"line_start":269,"line_end":269,"column_start":1,"column_end":79}},{"value":"/ [`Error`].","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":179989,"byte_end":180003,"line_start":270,"line_end":270,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":639},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":180320,"byte_end":180331,"line_start":278,"line_end":278,"column_start":12,"column_end":23},"name":"ParseBuffer","qualname":"::parser::ParseBuffer","value":"ParseBuffer {  }","parent":null,"children":[{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645}],"decl_id":null,"docs":" A low-level buffer of tokens which represents a completely lexed file.","sig":null,"attributes":[{"value":"/ A low-level buffer of tokens which represents a completely lexed file.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":180057,"byte_end":180131,"line_start":273,"line_end":273,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":180132,"byte_end":180135,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"/ A `ParseBuffer` will immediately lex an entire file and then store all","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":180136,"byte_end":180210,"line_start":275,"line_end":275,"column_start":1,"column_end":75}},{"value":"/ tokens internally. A `ParseBuffer` only used to pass to the top-level","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":180211,"byte_end":180284,"line_start":276,"line_end":276,"column_start":1,"column_end":74}},{"value":"/ [`parse`] function.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":180285,"byte_end":180308,"line_start":277,"line_end":277,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":8343},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":181381,"byte_end":181387,"line_start":308,"line_end":308,"column_start":12,"column_end":18},"name":"Parser","qualname":"::parser::Parser","value":"Parser {  }","parent":null,"children":[{"krate":0,"index":8345}],"decl_id":null,"docs":" An in-progress parser for the tokens of a WebAssembly text file.","sig":null,"attributes":[{"value":"/ An in-progress parser for the tokens of a WebAssembly text file.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":180944,"byte_end":181012,"line_start":299,"line_end":299,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":181013,"byte_end":181016,"line_start":300,"line_end":300,"column_start":1,"column_end":4}},{"value":"/ A `Parser` is argument to the [`Parse`] trait and is now the input stream is","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":181017,"byte_end":181097,"line_start":301,"line_end":301,"column_start":1,"column_end":81}},{"value":"/ interacted with to parse new items. Cloning [`Parser`] or copying a parser","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":181098,"byte_end":181176,"line_start":302,"line_end":302,"column_start":1,"column_end":79}},{"value":"/ refers to the same stream of tokens to parse, you cannot clone a [`Parser`]","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":181177,"byte_end":181256,"line_start":303,"line_end":303,"column_start":1,"column_end":80}},{"value":"/ and clone two items.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":181257,"byte_end":181281,"line_start":304,"line_end":304,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":181282,"byte_end":181285,"line_start":305,"line_end":305,"column_start":1,"column_end":4}},{"value":"/ For more information about a [`Parser`] see its methods.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":181286,"byte_end":181346,"line_start":306,"line_end":306,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":646},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":181598,"byte_end":181608,"line_start":316,"line_end":316,"column_start":12,"column_end":22},"name":"Lookahead1","qualname":"::parser::Lookahead1","value":"Lookahead1 {  }","parent":null,"children":[{"krate":0,"index":648},{"krate":0,"index":649}],"decl_id":null,"docs":" A helpful structure to perform a lookahead of one token to determine what to\n parse.","sig":null,"attributes":[{"value":"/ A helpful structure to perform a lookahead of one token to determine what to","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":181427,"byte_end":181507,"line_start":312,"line_end":312,"column_start":1,"column_end":81}},{"value":"/ parse.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":181508,"byte_end":181518,"line_start":313,"line_end":313,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":181519,"byte_end":181522,"line_start":314,"line_end":314,"column_start":1,"column_end":4}},{"value":"/ For more information see the [`Parser::lookahead1`] method.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":181523,"byte_end":181586,"line_start":315,"line_end":315,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":8351},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":181991,"byte_end":181997,"line_start":327,"line_end":327,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::parser::Cursor","value":"Cursor {  }","parent":null,"children":[{"krate":0,"index":8353},{"krate":0,"index":8354}],"decl_id":null,"docs":" An immutable cursor into a list of tokens.","sig":null,"attributes":[{"value":"/ An immutable cursor into a list of tokens.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":181675,"byte_end":181721,"line_start":321,"line_end":321,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":181722,"byte_end":181725,"line_start":322,"line_end":322,"column_start":1,"column_end":4}},{"value":"/ This cursor cannot be mutated but can be used to parse more tokens in a list","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":181726,"byte_end":181806,"line_start":323,"line_end":323,"column_start":1,"column_end":81}},{"value":"/ of tokens. Cursors are created from the [`Parser::step`] method. This is a","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":181807,"byte_end":181885,"line_start":324,"line_end":324,"column_start":1,"column_end":79}},{"value":"/ very low-level parsing structure and you likely won't use it much.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":181886,"byte_end":181956,"line_start":325,"line_end":325,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":182242,"byte_end":182245,"line_start":338,"line_end":338,"column_start":12,"column_end":15},"name":"new","qualname":"<ParseBuffer>::new","value":"pub fn new(&str) -> Result<ParseBuffer>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`ParseBuffer`] by lexing the given `input` completely.","sig":null,"attributes":[{"value":"/ Creates a new [`ParseBuffer`] by lexing the given `input` completely.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":182074,"byte_end":182147,"line_start":333,"line_end":333,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":182152,"byte_end":182155,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":182160,"byte_end":182172,"line_start":335,"line_end":335,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":182177,"byte_end":182180,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ Returns an error if `input` fails to lex.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":182185,"byte_end":182230,"line_start":337,"line_end":337,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":666},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":185674,"byte_end":185682,"line_start":425,"line_end":425,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Parser>::is_empty","value":"pub fn is_empty(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether there are no more `Token` tokens to parse from this\n [`Parser`].","sig":null,"attributes":[{"value":"/ Returns whether there are no more `Token` tokens to parse from this","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":185220,"byte_end":185291,"line_start":416,"line_end":416,"column_start":5,"column_end":76}},{"value":"/ [`Parser`].","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":185296,"byte_end":185311,"line_start":417,"line_end":417,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":185316,"byte_end":185319,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ This indicates that either we've reached the end of the input, or we're","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":185324,"byte_end":185399,"line_start":419,"line_end":419,"column_start":5,"column_end":80}},{"value":"/ a sub-[`Parser`] inside of a parenthesized expression and we've hit the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":185404,"byte_end":185479,"line_start":420,"line_end":420,"column_start":5,"column_end":80}},{"value":"/ `)` token.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":185484,"byte_end":185498,"line_start":421,"line_end":421,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":185503,"byte_end":185506,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ Note that if `false` is returned there *may* be more comments. Comments","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":185511,"byte_end":185586,"line_start":423,"line_end":423,"column_start":5,"column_end":80}},{"value":"/ and whitespace are not considered for whether this parser is empty.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":185591,"byte_end":185662,"line_start":424,"line_end":424,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":669},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":187884,"byte_end":187889,"line_start":489,"line_end":489,"column_start":12,"column_end":17},"name":"parse","qualname":"<Parser>::parse","value":"pub fn parse<T: Parse>(Self) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Parses a `T` from this [`Parser`].","sig":null,"attributes":[{"value":"/ Parses a `T` from this [`Parser`].","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":186174,"byte_end":186212,"line_start":441,"line_end":441,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":186217,"byte_end":186220,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ This method has a trivial definition (it simply calls","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":186225,"byte_end":186282,"line_start":443,"line_end":443,"column_start":5,"column_end":62}},{"value":"/ [`T::parse`](Parse::parse)) but is here for syntactic purposes. This is","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":186287,"byte_end":186362,"line_start":444,"line_end":444,"column_start":5,"column_end":80}},{"value":"/ what you'll call 99% of the time in a [`Parse`] implementation in order","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":186367,"byte_end":186442,"line_start":445,"line_end":445,"column_start":5,"column_end":80}},{"value":"/ to parse sub-items.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":186447,"byte_end":186470,"line_start":446,"line_end":446,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":186475,"byte_end":186478,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ Typically you always want to use `?` with the result of this method, you","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":186483,"byte_end":186559,"line_start":448,"line_end":448,"column_start":5,"column_end":81}},{"value":"/ should not handle errors and decide what else to parse. To handle","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":186564,"byte_end":186633,"line_start":449,"line_end":449,"column_start":5,"column_end":74}},{"value":"/ branches in parsing, use [`Parser::peek`].","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":186638,"byte_end":186684,"line_start":450,"line_end":450,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":186689,"byte_end":186692,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":186697,"byte_end":186711,"line_start":452,"line_end":452,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":186716,"byte_end":186719,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ A good example of using `parse` is to see how the [`TableType`] type is","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":186724,"byte_end":186799,"line_start":454,"line_end":454,"column_start":5,"column_end":80}},{"value":"/ parsed in this crate. A [`TableType`] is defined in the official","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":186804,"byte_end":186872,"line_start":455,"line_end":455,"column_start":5,"column_end":73}},{"value":"/ specification as [`tabletype`][spec] and is defined as:","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":186877,"byte_end":186936,"line_start":456,"line_end":456,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":186941,"byte_end":186944,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ [spec]: https://webassembly.github.io/spec/core/text/types.html#table-types","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":186949,"byte_end":187028,"line_start":458,"line_end":458,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":187033,"byte_end":187036,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":187041,"byte_end":187052,"line_start":460,"line_end":460,"column_start":5,"column_end":16}},{"value":"/ tabletype ::= lim:limits et:reftype","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":187057,"byte_end":187096,"line_start":461,"line_end":461,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":187101,"byte_end":187108,"line_start":462,"line_end":462,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":187113,"byte_end":187116,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ so to parse a [`TableType`] we recursively need to parse a [`Limits`]","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":187121,"byte_end":187194,"line_start":464,"line_end":464,"column_start":5,"column_end":78}},{"value":"/ and a [`RefType`]","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":187199,"byte_end":187220,"line_start":465,"line_end":465,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":187225,"byte_end":187228,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":187233,"byte_end":187240,"line_start":467,"line_end":467,"column_start":5,"column_end":12}},{"value":"/ # use wast::*;","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":187245,"byte_end":187263,"line_start":468,"line_end":468,"column_start":5,"column_end":23}},{"value":"/ # use wast::parser::*;","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":187268,"byte_end":187294,"line_start":469,"line_end":469,"column_start":5,"column_end":31}},{"value":"/ struct TableType<'a> {","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":187299,"byte_end":187325,"line_start":470,"line_end":470,"column_start":5,"column_end":31}},{"value":"/     limits: Limits,","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":187330,"byte_end":187353,"line_start":471,"line_end":471,"column_start":5,"column_end":28}},{"value":"/     elem: RefType<'a>,","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":187358,"byte_end":187384,"line_start":472,"line_end":472,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":187389,"byte_end":187394,"line_start":473,"line_end":473,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":187399,"byte_end":187402,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ impl<'a> Parse<'a> for TableType<'a> {","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":187407,"byte_end":187449,"line_start":475,"line_end":475,"column_start":5,"column_end":47}},{"value":"/     fn parse(parser: Parser<'a>) -> Result<Self> {","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":187454,"byte_end":187508,"line_start":476,"line_end":476,"column_start":5,"column_end":59}},{"value":"/         // parse the `lim` then `et` in sequence","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":187513,"byte_end":187565,"line_start":477,"line_end":477,"column_start":5,"column_end":57}},{"value":"/         Ok(TableType {","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":187570,"byte_end":187596,"line_start":478,"line_end":478,"column_start":5,"column_end":31}},{"value":"/             limits: parser.parse()?,","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":187601,"byte_end":187641,"line_start":479,"line_end":479,"column_start":5,"column_end":45}},{"value":"/             elem: parser.parse()?,","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":187646,"byte_end":187684,"line_start":480,"line_end":480,"column_start":5,"column_end":43}},{"value":"/         })","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":187689,"byte_end":187703,"line_start":481,"line_end":481,"column_start":5,"column_end":19}},{"value":"/     }","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":187708,"byte_end":187717,"line_start":482,"line_end":482,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":187722,"byte_end":187727,"line_start":483,"line_end":483,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":187732,"byte_end":187739,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":187744,"byte_end":187747,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ [`Limits`]: crate::ast::Limits","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":187752,"byte_end":187786,"line_start":486,"line_end":486,"column_start":5,"column_end":39}},{"value":"/ [`TableType`]: crate::ast::TableType","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":187791,"byte_end":187831,"line_start":487,"line_end":487,"column_start":5,"column_end":45}},{"value":"/ [`RefType`]: crate::ast::RefType","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":187836,"byte_end":187872,"line_start":488,"line_end":488,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":671},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":189827,"byte_end":189831,"line_start":546,"line_end":546,"column_start":12,"column_end":16},"name":"peek","qualname":"<Parser>::peek","value":"pub fn peek<T: Peek>(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Performs a cheap test to see whether the current token in this stream is\n `T`.","sig":null,"attributes":[{"value":"/ Performs a cheap test to see whether the current token in this stream is","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":187959,"byte_end":188035,"line_start":493,"line_end":493,"column_start":5,"column_end":81}},{"value":"/ `T`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":188040,"byte_end":188048,"line_start":494,"line_end":494,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":188053,"byte_end":188056,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ This method can be used to efficiently determine what next to parse. The","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":188061,"byte_end":188137,"line_start":496,"line_end":496,"column_start":5,"column_end":81}},{"value":"/ [`Peek`] trait is defined for types which can be used to test if they're","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":188142,"byte_end":188218,"line_start":497,"line_end":497,"column_start":5,"column_end":81}},{"value":"/ the next item in the input stream.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":188223,"byte_end":188261,"line_start":498,"line_end":498,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":188266,"byte_end":188269,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ Nothing is actually parsed in this method, nor does this mutate the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":188274,"byte_end":188345,"line_start":500,"line_end":500,"column_start":5,"column_end":76}},{"value":"/ state of this [`Parser`]. Instead, this simply performs a check.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":188350,"byte_end":188418,"line_start":501,"line_end":501,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":188423,"byte_end":188426,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ This method is frequently combined with the [`Parser::lookahead1`]","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":188431,"byte_end":188501,"line_start":503,"line_end":503,"column_start":5,"column_end":75}},{"value":"/ method to automatically produce nice error messages if some tokens","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":188506,"byte_end":188576,"line_start":504,"line_end":504,"column_start":5,"column_end":75}},{"value":"/ aren't found.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":188581,"byte_end":188598,"line_start":505,"line_end":505,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":188603,"byte_end":188606,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":188611,"byte_end":188625,"line_start":507,"line_end":507,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":188630,"byte_end":188633,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ For an example of using the `peek` method let's take a look at parsing","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":188638,"byte_end":188712,"line_start":509,"line_end":509,"column_start":5,"column_end":79}},{"value":"/ the [`Limits`] type. This is [defined in the official spec][spec] as:","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":188717,"byte_end":188790,"line_start":510,"line_end":510,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":188795,"byte_end":188798,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":188803,"byte_end":188814,"line_start":512,"line_end":512,"column_start":5,"column_end":16}},{"value":"/ limits ::= n:u32","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":188819,"byte_end":188839,"line_start":513,"line_end":513,"column_start":5,"column_end":25}},{"value":"/          | n:u32 m:u32","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":188844,"byte_end":188870,"line_start":514,"line_end":514,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":188875,"byte_end":188882,"line_start":515,"line_end":515,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":188887,"byte_end":188890,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ which means that it's either one `u32` token or two, so we need to know","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":188895,"byte_end":188970,"line_start":517,"line_end":517,"column_start":5,"column_end":80}},{"value":"/ whether to consume two tokens or one:","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":188975,"byte_end":189016,"line_start":518,"line_end":518,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":189021,"byte_end":189024,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":189029,"byte_end":189036,"line_start":520,"line_end":520,"column_start":5,"column_end":12}},{"value":"/ # use wast::parser::*;","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":189041,"byte_end":189067,"line_start":521,"line_end":521,"column_start":5,"column_end":31}},{"value":"/ struct Limits {","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":189072,"byte_end":189091,"line_start":522,"line_end":522,"column_start":5,"column_end":24}},{"value":"/     min: u32,","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":189096,"byte_end":189113,"line_start":523,"line_end":523,"column_start":5,"column_end":22}},{"value":"/     max: Option<u32>,","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":189118,"byte_end":189143,"line_start":524,"line_end":524,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":189148,"byte_end":189153,"line_start":525,"line_end":525,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":189158,"byte_end":189161,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ impl<'a> Parse<'a> for Limits {","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":189166,"byte_end":189201,"line_start":527,"line_end":527,"column_start":5,"column_end":40}},{"value":"/     fn parse(parser: Parser<'a>) -> Result<Self> {","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":189206,"byte_end":189260,"line_start":528,"line_end":528,"column_start":5,"column_end":59}},{"value":"/         // Always parse the first number...","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":189265,"byte_end":189312,"line_start":529,"line_end":529,"column_start":5,"column_end":52}},{"value":"/         let min = parser.parse()?;","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":189317,"byte_end":189355,"line_start":530,"line_end":530,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":189360,"byte_end":189363,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/         // ... and then test if there's a second number before parsing","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":189368,"byte_end":189442,"line_start":532,"line_end":532,"column_start":5,"column_end":79}},{"value":"/         let max = if parser.peek::<u32>() {","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":189447,"byte_end":189494,"line_start":533,"line_end":533,"column_start":5,"column_end":52}},{"value":"/             Some(parser.parse()?)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":189499,"byte_end":189536,"line_start":534,"line_end":534,"column_start":5,"column_end":42}},{"value":"/         } else {","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":189541,"byte_end":189561,"line_start":535,"line_end":535,"column_start":5,"column_end":25}},{"value":"/             None","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":189566,"byte_end":189586,"line_start":536,"line_end":536,"column_start":5,"column_end":25}},{"value":"/         };","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":189591,"byte_end":189605,"line_start":537,"line_end":537,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":189610,"byte_end":189613,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/         Ok(Limits { min, max })","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":189618,"byte_end":189653,"line_start":539,"line_end":539,"column_start":5,"column_end":40}},{"value":"/     }","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":189658,"byte_end":189667,"line_start":540,"line_end":540,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":189672,"byte_end":189677,"line_start":541,"line_end":541,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":189682,"byte_end":189689,"line_start":542,"line_end":542,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":189694,"byte_end":189697,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ [spec]: https://webassembly.github.io/spec/core/text/types.html#limits","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":189702,"byte_end":189776,"line_start":544,"line_end":544,"column_start":5,"column_end":79}},{"value":"/ [`Limits`]: crate::ast::Limits","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":189781,"byte_end":189815,"line_start":545,"line_end":545,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":190012,"byte_end":190017,"line_start":552,"line_end":552,"column_start":12,"column_end":17},"name":"peek2","qualname":"<Parser>::peek2","value":"pub fn peek2<T: Peek>(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Same as the [`Parser::peek`] method, except checks the next token, not\n the current token.\n","sig":null,"attributes":[{"value":"/ Same as the [`Parser::peek`] method, except checks the next token, not","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":189899,"byte_end":189973,"line_start":550,"line_end":550,"column_start":5,"column_end":79}},{"value":"/ the current token.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":189978,"byte_end":190000,"line_start":551,"line_end":551,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":192009,"byte_end":192019,"line_start":610,"line_end":610,"column_start":12,"column_end":22},"name":"lookahead1","qualname":"<Parser>::lookahead1","value":"pub fn lookahead1(Self) -> Lookahead1","parent":null,"children":[],"decl_id":null,"docs":" A helper structure to perform a sequence of `peek` operations and if\n they all fail produce a nice error message.","sig":null,"attributes":[{"value":"/ A helper structure to perform a sequence of `peek` operations and if","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":190213,"byte_end":190285,"line_start":561,"line_end":561,"column_start":5,"column_end":77}},{"value":"/ they all fail produce a nice error message.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":190290,"byte_end":190337,"line_start":562,"line_end":562,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":190342,"byte_end":190345,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ This method purely exists for conveniently producing error messages and","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":190350,"byte_end":190425,"line_start":564,"line_end":564,"column_start":5,"column_end":80}},{"value":"/ provides no functionality that [`Parser::peek`] doesn't already give.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":190430,"byte_end":190503,"line_start":565,"line_end":565,"column_start":5,"column_end":78}},{"value":"/ The [`Lookahead1`] structure has one main method [`Lookahead1::peek`],","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":190508,"byte_end":190582,"line_start":566,"line_end":566,"column_start":5,"column_end":79}},{"value":"/ which is the same method as [`Parser::peek`]. The difference is that the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":190587,"byte_end":190663,"line_start":567,"line_end":567,"column_start":5,"column_end":81}},{"value":"/ [`Lookahead1::error`] method needs no arguments.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":190668,"byte_end":190720,"line_start":568,"line_end":568,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":190725,"byte_end":190728,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":190733,"byte_end":190747,"line_start":570,"line_end":570,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":190752,"byte_end":190755,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ Let's look at the parsing of [`Index`]. This type is either a `u32` or","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":190760,"byte_end":190834,"line_start":572,"line_end":572,"column_start":5,"column_end":79}},{"value":"/ an [`Id`] and is used in name resolution primarily. The [official","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":190839,"byte_end":190908,"line_start":573,"line_end":573,"column_start":5,"column_end":74}},{"value":"/ grammar for an index][spec] is:","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":190913,"byte_end":190948,"line_start":574,"line_end":574,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":190953,"byte_end":190956,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":190961,"byte_end":190972,"line_start":576,"line_end":576,"column_start":5,"column_end":16}},{"value":"/ idx ::= x:u32","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":190977,"byte_end":190994,"line_start":577,"line_end":577,"column_start":5,"column_end":22}},{"value":"/       | v:id","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":190999,"byte_end":191015,"line_start":578,"line_end":578,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":191020,"byte_end":191027,"line_start":579,"line_end":579,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":191032,"byte_end":191035,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ Which is to say that an index is either a `u32` or an [`Id`]. When","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":191040,"byte_end":191110,"line_start":581,"line_end":581,"column_start":5,"column_end":75}},{"value":"/ parsing an [`Index`] we can do:","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":191115,"byte_end":191150,"line_start":582,"line_end":582,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":191155,"byte_end":191158,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":191163,"byte_end":191170,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/ # use wast::*;","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":191175,"byte_end":191193,"line_start":585,"line_end":585,"column_start":5,"column_end":23}},{"value":"/ # use wast::parser::*;","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":191198,"byte_end":191224,"line_start":586,"line_end":586,"column_start":5,"column_end":31}},{"value":"/ enum Index<'a> {","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":191229,"byte_end":191249,"line_start":587,"line_end":587,"column_start":5,"column_end":25}},{"value":"/     Num(u32),","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":191254,"byte_end":191271,"line_start":588,"line_end":588,"column_start":5,"column_end":22}},{"value":"/     Id(Id<'a>),","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":191276,"byte_end":191295,"line_start":589,"line_end":589,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":191300,"byte_end":191305,"line_start":590,"line_end":590,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":191310,"byte_end":191313,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ impl<'a> Parse<'a> for Index<'a> {","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":191318,"byte_end":191356,"line_start":592,"line_end":592,"column_start":5,"column_end":43}},{"value":"/     fn parse(parser: Parser<'a>) -> Result<Self> {","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":191361,"byte_end":191415,"line_start":593,"line_end":593,"column_start":5,"column_end":59}},{"value":"/         let mut l = parser.lookahead1();","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":191420,"byte_end":191464,"line_start":594,"line_end":594,"column_start":5,"column_end":49}},{"value":"/         if l.peek::<Id>() {","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":191469,"byte_end":191500,"line_start":595,"line_end":595,"column_start":5,"column_end":36}},{"value":"/             Ok(Index::Id(parser.parse()?))","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":191505,"byte_end":191551,"line_start":596,"line_end":596,"column_start":5,"column_end":51}},{"value":"/         } else if l.peek::<u32>() {","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":191556,"byte_end":191595,"line_start":597,"line_end":597,"column_start":5,"column_end":44}},{"value":"/             Ok(Index::Num(parser.parse()?))","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":191600,"byte_end":191647,"line_start":598,"line_end":598,"column_start":5,"column_end":52}},{"value":"/         } else {","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":191652,"byte_end":191672,"line_start":599,"line_end":599,"column_start":5,"column_end":25}},{"value":"/             // produces error message of `expected identifier or u32`","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":191677,"byte_end":191750,"line_start":600,"line_end":600,"column_start":5,"column_end":78}},{"value":"/             Err(l.error())","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":191755,"byte_end":191785,"line_start":601,"line_end":601,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":191790,"byte_end":191803,"line_start":602,"line_end":602,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":191808,"byte_end":191817,"line_start":603,"line_end":603,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":191822,"byte_end":191827,"line_start":604,"line_end":604,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":191832,"byte_end":191839,"line_start":605,"line_end":605,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":191844,"byte_end":191847,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ [spec]: https://webassembly.github.io/spec/core/text/modules.html#indices","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":191852,"byte_end":191929,"line_start":607,"line_end":607,"column_start":5,"column_end":82}},{"value":"/ [`Index`]: crate::ast::Index","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":191934,"byte_end":191966,"line_start":608,"line_end":608,"column_start":5,"column_end":37}},{"value":"/ [`Id`]: crate::ast::Id","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":191971,"byte_end":191997,"line_start":609,"line_end":609,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":193978,"byte_end":193984,"line_start":660,"line_end":660,"column_start":12,"column_end":18},"name":"parens","qualname":"<Parser>::parens","value":"pub fn parens<T, impl FnOnce(Parser<'a>) -> Result<T>: FnOnce(Parser) ->\nResult<T>>(Self, impl FnOnce(Parser<'a>) -> Result<T>) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Parse an item surrounded by parentheses.","sig":null,"attributes":[{"value":"/ Parse an item surrounded by parentheses.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":192148,"byte_end":192192,"line_start":617,"line_end":617,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":192197,"byte_end":192200,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ WebAssembly's text format is all based on s-expressions, so naturally","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":192205,"byte_end":192278,"line_start":619,"line_end":619,"column_start":5,"column_end":78}},{"value":"/ you're going to want to parse a lot of parenthesized things! As noted in","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":192283,"byte_end":192359,"line_start":620,"line_end":620,"column_start":5,"column_end":81}},{"value":"/ the documentation of [`Parse`] you typically don't parse your own","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":192364,"byte_end":192433,"line_start":621,"line_end":621,"column_start":5,"column_end":74}},{"value":"/ surrounding `(` and `)` tokens, but the parser above you parsed them for","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":192438,"byte_end":192514,"line_start":622,"line_end":622,"column_start":5,"column_end":81}},{"value":"/ you. This is method method the parser above you uses.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":192519,"byte_end":192576,"line_start":623,"line_end":623,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":192581,"byte_end":192584,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ This method will parse a `(` token, and then call `f` on a sub-parser","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":192589,"byte_end":192662,"line_start":625,"line_end":625,"column_start":5,"column_end":78}},{"value":"/ which when finished asserts that a `)` token is the next token. This","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":192667,"byte_end":192739,"line_start":626,"line_end":626,"column_start":5,"column_end":77}},{"value":"/ requires that `f` consumes all tokens leading up to the paired `)`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":192744,"byte_end":192815,"line_start":627,"line_end":627,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":192820,"byte_end":192823,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ Usage will often simply be `parser.parens(|p| p.parse())?` to","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":192828,"byte_end":192893,"line_start":629,"line_end":629,"column_start":5,"column_end":70}},{"value":"/ automatically parse a type within parentheses, but you can, as always,","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":192898,"byte_end":192972,"line_start":630,"line_end":630,"column_start":5,"column_end":79}},{"value":"/ go crazy and do whatever you'd like too.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":192977,"byte_end":193021,"line_start":631,"line_end":631,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":193026,"byte_end":193029,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":193034,"byte_end":193048,"line_start":633,"line_end":633,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":193053,"byte_end":193056,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ A good example of this is to see how a `Module` is parsed. This isn't","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":193061,"byte_end":193134,"line_start":635,"line_end":635,"column_start":5,"column_end":78}},{"value":"/ the exact definition, but it's close enough!","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":193139,"byte_end":193187,"line_start":636,"line_end":636,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":193192,"byte_end":193195,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":193200,"byte_end":193207,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/ # use wast::*;","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":193212,"byte_end":193230,"line_start":639,"line_end":639,"column_start":5,"column_end":23}},{"value":"/ # use wast::parser::*;","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":193235,"byte_end":193261,"line_start":640,"line_end":640,"column_start":5,"column_end":31}},{"value":"/ struct Module<'a> {","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":193266,"byte_end":193289,"line_start":641,"line_end":641,"column_start":5,"column_end":28}},{"value":"/     fields: Vec<ModuleField<'a>>,","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":193294,"byte_end":193331,"line_start":642,"line_end":642,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":193336,"byte_end":193341,"line_start":643,"line_end":643,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":193346,"byte_end":193349,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ impl<'a> Parse<'a> for Module<'a> {","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":193354,"byte_end":193393,"line_start":645,"line_end":645,"column_start":5,"column_end":44}},{"value":"/     fn parse(parser: Parser<'a>) -> Result<Self> {","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":193398,"byte_end":193452,"line_start":646,"line_end":646,"column_start":5,"column_end":59}},{"value":"/         // Modules start out with a `module` keyword","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":193457,"byte_end":193513,"line_start":647,"line_end":647,"column_start":5,"column_end":61}},{"value":"/         parser.parse::<kw::module>()?;","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":193518,"byte_end":193560,"line_start":648,"line_end":648,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":193565,"byte_end":193568,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/         // And then everything else is `(field ...)`, so while we've got","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":193573,"byte_end":193649,"line_start":650,"line_end":650,"column_start":5,"column_end":81}},{"value":"/         // items left we continuously parse parenthesized items.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":193654,"byte_end":193722,"line_start":651,"line_end":651,"column_start":5,"column_end":73}},{"value":"/         let mut fields = Vec::new();","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":193727,"byte_end":193767,"line_start":652,"line_end":652,"column_start":5,"column_end":45}},{"value":"/         while !parser.is_empty() {","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":193772,"byte_end":193810,"line_start":653,"line_end":653,"column_start":5,"column_end":43}},{"value":"/             fields.push(parser.parens(|p| p.parse())?);","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":193815,"byte_end":193874,"line_start":654,"line_end":654,"column_start":5,"column_end":64}},{"value":"/         }","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":193879,"byte_end":193892,"line_start":655,"line_end":655,"column_start":5,"column_end":18}},{"value":"/         Ok(Module { fields })","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":193897,"byte_end":193930,"line_start":656,"line_end":656,"column_start":5,"column_end":38}},{"value":"/     }","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":193935,"byte_end":193944,"line_start":657,"line_end":657,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":193949,"byte_end":193954,"line_start":658,"line_end":658,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":193959,"byte_end":193966,"line_start":659,"line_end":659,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":195027,"byte_end":195039,"line_start":687,"line_end":687,"column_start":12,"column_end":24},"name":"parens_depth","qualname":"<Parser>::parens_depth","value":"pub fn parens_depth(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the depth of nested parens we've parsed so far.","sig":null,"attributes":[{"value":"/ Return the depth of nested parens we've parsed so far.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":194833,"byte_end":194891,"line_start":683,"line_end":683,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":194896,"byte_end":194899,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ This is a low-level method that is only useful for implementing","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":194904,"byte_end":194971,"line_start":685,"line_end":685,"column_start":5,"column_end":72}},{"value":"/ recursion limits in custom parsers.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":194976,"byte_end":195015,"line_start":686,"line_end":686,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":195552,"byte_end":195556,"line_start":704,"line_end":704,"column_start":12,"column_end":16},"name":"step","qualname":"<Parser>::step","value":"pub fn step<F, T>(Self, F) -> Result<T> where F: FnOnce(Cursor) ->\nResult<(T, Cursor)>","parent":null,"children":[],"decl_id":null,"docs":" A low-level parsing method you probably won't use.","sig":null,"attributes":[{"value":"/ A low-level parsing method you probably won't use.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":195231,"byte_end":195285,"line_start":698,"line_end":698,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":195290,"byte_end":195293,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ This is used to implement parsing of the most primitive types in the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":195298,"byte_end":195370,"line_start":700,"line_end":700,"column_start":5,"column_end":77}},{"value":"/ [`ast`](crate::ast) module. You probably don't want to use this, but","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":195375,"byte_end":195447,"line_start":701,"line_end":701,"column_start":5,"column_end":77}},{"value":"/ probably want to use something like [`Parser::parse`] or","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":195452,"byte_end":195512,"line_start":702,"line_end":702,"column_start":5,"column_end":65}},{"value":"/ [`Parser::parens`].","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":195517,"byte_end":195540,"line_start":703,"line_end":703,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":196130,"byte_end":196135,"line_start":719,"line_end":719,"column_start":12,"column_end":17},"name":"error","qualname":"<Parser>::error","value":"pub fn error<impl fmt::Display: fmt::Display>(Self, impl fmt::Display)\n-> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error whose line/column information is pointing at the\n current token.","sig":null,"attributes":[{"value":"/ Creates an error whose line/column information is pointing at the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":195780,"byte_end":195849,"line_start":713,"line_end":713,"column_start":5,"column_end":74}},{"value":"/ current token.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":195854,"byte_end":195872,"line_start":714,"line_end":714,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":195877,"byte_end":195880,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ This is used to produce human-readable error messages which point to the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":195885,"byte_end":195961,"line_start":716,"line_end":716,"column_start":5,"column_end":81}},{"value":"/ right location in the input stream, and the `msg` here is arbitrary text","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":195966,"byte_end":196042,"line_start":717,"line_end":717,"column_start":5,"column_end":81}},{"value":"/ used to associate with the error and indicate why it was generated.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":196047,"byte_end":196118,"line_start":718,"line_end":718,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":196431,"byte_end":196439,"line_start":728,"line_end":728,"column_start":12,"column_end":20},"name":"cur_span","qualname":"<Parser>::cur_span","value":"pub fn cur_span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the span of the current token\n","sig":null,"attributes":[{"value":"/ Returns the span of the current token","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":196378,"byte_end":196419,"line_start":727,"line_end":727,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":196555,"byte_end":196564,"line_start":733,"line_end":733,"column_start":12,"column_end":21},"name":"prev_span","qualname":"<Parser>::prev_span","value":"pub fn prev_span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the span of the previous token\n","sig":null,"attributes":[{"value":"/ Returns the span of the previous token","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":196501,"byte_end":196543,"line_start":732,"line_end":732,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":202291,"byte_end":202310,"line_start":865,"line_end":865,"column_start":12,"column_end":31},"name":"register_annotation","qualname":"<Parser>::register_annotation","value":"pub fn register_annotation<'b>(Self, &'b str) -> /*impl Trait*/ where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":" Registers a new known annotation with this parser to allow parsing\n annotations with this name.","sig":null,"attributes":[{"value":"/ Registers a new known annotation with this parser to allow parsing","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":196659,"byte_end":196729,"line_start":737,"line_end":737,"column_start":5,"column_end":75}},{"value":"/ annotations with this name.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":196734,"byte_end":196765,"line_start":738,"line_end":738,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":196770,"byte_end":196773,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ [WebAssembly annotations][annotation] are a proposal for the text format","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":196778,"byte_end":196854,"line_start":740,"line_end":740,"column_start":5,"column_end":81}},{"value":"/ which allows decorating the text format with custom structured","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":196859,"byte_end":196925,"line_start":741,"line_end":741,"column_start":5,"column_end":71}},{"value":"/ information. By default all annotations are ignored when parsing, but","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":196930,"byte_end":197003,"line_start":742,"line_end":742,"column_start":5,"column_end":78}},{"value":"/ the whole purpose of them is to sometimes parse them!","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":197008,"byte_end":197065,"line_start":743,"line_end":743,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":197070,"byte_end":197073,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ To support parsing text annotations this method is used to allow","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":197078,"byte_end":197146,"line_start":745,"line_end":745,"column_start":5,"column_end":73}},{"value":"/ annotations and their tokens to *not* be skipped. Once an annotation is","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":197151,"byte_end":197226,"line_start":746,"line_end":746,"column_start":5,"column_end":80}},{"value":"/ registered with this method, then while the return value has not been","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":197231,"byte_end":197304,"line_start":747,"line_end":747,"column_start":5,"column_end":78}},{"value":"/ dropped (e.g. the scope of where this function is called) annotations","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":197309,"byte_end":197382,"line_start":748,"line_end":748,"column_start":5,"column_end":78}},{"value":"/ with the name `annotation` will be parse of the token stream and not","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":197387,"byte_end":197459,"line_start":749,"line_end":749,"column_start":5,"column_end":77}},{"value":"/ implicitly skipped.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":197464,"byte_end":197487,"line_start":750,"line_end":750,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":197492,"byte_end":197495,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ # Skipping annotations","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":197500,"byte_end":197526,"line_start":752,"line_end":752,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":197531,"byte_end":197534,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ The behavior of skipping unknown/unregistered annotations can be","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":197539,"byte_end":197607,"line_start":754,"line_end":754,"column_start":5,"column_end":73}},{"value":"/ somewhat subtle and surprising, so if you're interested in parsing","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":197612,"byte_end":197682,"line_start":755,"line_end":755,"column_start":5,"column_end":75}},{"value":"/ annotations it's important to point out the importance of this method","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":197687,"byte_end":197760,"line_start":756,"line_end":756,"column_start":5,"column_end":78}},{"value":"/ and where to call it.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":197765,"byte_end":197790,"line_start":757,"line_end":757,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":197795,"byte_end":197798,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ Generally when parsing tokens you'll be bottoming out in various","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":197803,"byte_end":197871,"line_start":759,"line_end":759,"column_start":5,"column_end":73}},{"value":"/ `Cursor` methods. These are all documented as advancing the stream as","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":197876,"byte_end":197949,"line_start":760,"line_end":760,"column_start":5,"column_end":78}},{"value":"/ much as possible to the next token, skipping \"irrelevant stuff\" like","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":197954,"byte_end":198026,"line_start":761,"line_end":761,"column_start":5,"column_end":77}},{"value":"/ comments, whitespace, etc. The `Cursor` methods will also skip unknown","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":198031,"byte_end":198105,"line_start":762,"line_end":762,"column_start":5,"column_end":79}},{"value":"/ annotations. This means that if you parse *any* token, it will skip over","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":198110,"byte_end":198186,"line_start":763,"line_end":763,"column_start":5,"column_end":81}},{"value":"/ any number of annotations that are unknown at all times.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":198191,"byte_end":198251,"line_start":764,"line_end":764,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":198256,"byte_end":198259,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ To parse an annotation you must, before parsing any token of the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":198264,"byte_end":198332,"line_start":766,"line_end":766,"column_start":5,"column_end":73}},{"value":"/ annotation, register the annotation via this method. This includes the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":198337,"byte_end":198411,"line_start":767,"line_end":767,"column_start":5,"column_end":79}},{"value":"/ beginning `(` token, which is otherwise skipped if the annotation isn't","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":198416,"byte_end":198491,"line_start":768,"line_end":768,"column_start":5,"column_end":80}},{"value":"/ marked as registered. Typically parser parse the *contents* of an","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":198496,"byte_end":198565,"line_start":769,"line_end":769,"column_start":5,"column_end":74}},{"value":"/ s-expression, so this means that the outer parser of an s-expression","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":198570,"byte_end":198642,"line_start":770,"line_end":770,"column_start":5,"column_end":77}},{"value":"/ must register the custom annotation name, rather than the inner parser.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":198647,"byte_end":198722,"line_start":771,"line_end":771,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":198727,"byte_end":198730,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":198735,"byte_end":198747,"line_start":773,"line_end":773,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":198752,"byte_end":198755,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ This function returns an RAII guard which, when dropped, will unregister","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":198760,"byte_end":198836,"line_start":775,"line_end":775,"column_start":5,"column_end":81}},{"value":"/ the `annotation` given. Parsing `annotation` is only supported while the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":198841,"byte_end":198917,"line_start":776,"line_end":776,"column_start":5,"column_end":81}},{"value":"/ returned value is still alive, and once dropped the parser will go back","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":198922,"byte_end":198997,"line_start":777,"line_end":777,"column_start":5,"column_end":80}},{"value":"/ to skipping annotations with the name `annotation`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":199002,"byte_end":199057,"line_start":778,"line_end":778,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":199062,"byte_end":199065,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":199070,"byte_end":199083,"line_start":780,"line_end":780,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":199088,"byte_end":199091,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ Let's see an example of how the `@name` annotation is parsed for modules","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":199096,"byte_end":199172,"line_start":782,"line_end":782,"column_start":5,"column_end":81}},{"value":"/ to get an idea of how this works:","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":199177,"byte_end":199214,"line_start":783,"line_end":783,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":199219,"byte_end":199222,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":199227,"byte_end":199234,"line_start":785,"line_end":785,"column_start":5,"column_end":12}},{"value":"/ # use wast::*;","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":199239,"byte_end":199257,"line_start":786,"line_end":786,"column_start":5,"column_end":23}},{"value":"/ # use wast::parser::*;","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":199262,"byte_end":199288,"line_start":787,"line_end":787,"column_start":5,"column_end":31}},{"value":"/ struct Module<'a> {","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":199293,"byte_end":199316,"line_start":788,"line_end":788,"column_start":5,"column_end":28}},{"value":"/     name: Option<NameAnnotation<'a>>,","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":199321,"byte_end":199362,"line_start":789,"line_end":789,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":199367,"byte_end":199372,"line_start":790,"line_end":790,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":199377,"byte_end":199380,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ impl<'a> Parse<'a> for Module<'a> {","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":199385,"byte_end":199424,"line_start":792,"line_end":792,"column_start":5,"column_end":44}},{"value":"/     fn parse(parser: Parser<'a>) -> Result<Self> {","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":199429,"byte_end":199483,"line_start":793,"line_end":793,"column_start":5,"column_end":59}},{"value":"/         // Modules start out with a `module` keyword","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":199488,"byte_end":199544,"line_start":794,"line_end":794,"column_start":5,"column_end":61}},{"value":"/         parser.parse::<kw::module>()?;","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":199549,"byte_end":199591,"line_start":795,"line_end":795,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":199596,"byte_end":199599,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/         // Next may be `(@name \"foo\")`. Typically this annotation would","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":199604,"byte_end":199679,"line_start":797,"line_end":797,"column_start":5,"column_end":80}},{"value":"/         // skipped, but we don't want it skipped, so we register it.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":199684,"byte_end":199756,"line_start":798,"line_end":798,"column_start":5,"column_end":77}},{"value":"/         // Note that the parse implementation of","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":199761,"byte_end":199813,"line_start":799,"line_end":799,"column_start":5,"column_end":57}},{"value":"/         // `Option<NameAnnotation>` is the one that consumes the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":199818,"byte_end":199886,"line_start":800,"line_end":800,"column_start":5,"column_end":73}},{"value":"/         // parentheses here.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":199891,"byte_end":199923,"line_start":801,"line_end":801,"column_start":5,"column_end":37}},{"value":"/         let _r = parser.register_annotation(\"name\");","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":199928,"byte_end":199984,"line_start":802,"line_end":802,"column_start":5,"column_end":61}},{"value":"/         let name = parser.parse()?;","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":199989,"byte_end":200028,"line_start":803,"line_end":803,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":200033,"byte_end":200036,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/         // ... and normally you'd otherwise parse module fields here ...","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":200041,"byte_end":200117,"line_start":805,"line_end":805,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":200122,"byte_end":200125,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/         Ok(Module { name })","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":200130,"byte_end":200161,"line_start":807,"line_end":807,"column_start":5,"column_end":36}},{"value":"/     }","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":200166,"byte_end":200175,"line_start":808,"line_end":808,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":200180,"byte_end":200185,"line_start":809,"line_end":809,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":200190,"byte_end":200197,"line_start":810,"line_end":810,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":200202,"byte_end":200205,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ Another example is how we parse the `@custom` annotation. Note that this","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":200210,"byte_end":200286,"line_start":812,"line_end":812,"column_start":5,"column_end":81}},{"value":"/ is parsed as part of `ModuleField`, so note how the annotation is","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":200291,"byte_end":200360,"line_start":813,"line_end":813,"column_start":5,"column_end":74}},{"value":"/ registered *before* we parse the parentheses of the annotation.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":200365,"byte_end":200432,"line_start":814,"line_end":814,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":200437,"byte_end":200440,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":200445,"byte_end":200452,"line_start":816,"line_end":816,"column_start":5,"column_end":12}},{"value":"/ # use wast::*;","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":200457,"byte_end":200475,"line_start":817,"line_end":817,"column_start":5,"column_end":23}},{"value":"/ # use wast::parser::*;","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":200480,"byte_end":200506,"line_start":818,"line_end":818,"column_start":5,"column_end":31}},{"value":"/ struct Module<'a> {","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":200511,"byte_end":200534,"line_start":819,"line_end":819,"column_start":5,"column_end":28}},{"value":"/     fields: Vec<ModuleField<'a>>,","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":200539,"byte_end":200576,"line_start":820,"line_end":820,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":200581,"byte_end":200586,"line_start":821,"line_end":821,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":200591,"byte_end":200594,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ impl<'a> Parse<'a> for Module<'a> {","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":200599,"byte_end":200638,"line_start":823,"line_end":823,"column_start":5,"column_end":44}},{"value":"/     fn parse(parser: Parser<'a>) -> Result<Self> {","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":200643,"byte_end":200697,"line_start":824,"line_end":824,"column_start":5,"column_end":59}},{"value":"/         // Modules start out with a `module` keyword","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":200702,"byte_end":200758,"line_start":825,"line_end":825,"column_start":5,"column_end":61}},{"value":"/         parser.parse::<kw::module>()?;","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":200763,"byte_end":200805,"line_start":826,"line_end":826,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":200810,"byte_end":200813,"line_start":827,"line_end":827,"column_start":5,"column_end":8}},{"value":"/         // register the `@custom` annotation *first* before we start","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":200818,"byte_end":200890,"line_start":828,"line_end":828,"column_start":5,"column_end":77}},{"value":"/         // parsing fields, because each field is contained in","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":200895,"byte_end":200960,"line_start":829,"line_end":829,"column_start":5,"column_end":70}},{"value":"/         // parentheses and to parse the parentheses of an annotation we","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":200965,"byte_end":201040,"line_start":830,"line_end":830,"column_start":5,"column_end":80}},{"value":"/         // have to known to not skip it.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":201045,"byte_end":201089,"line_start":831,"line_end":831,"column_start":5,"column_end":49}},{"value":"/         let _r = parser.register_annotation(\"custom\");","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":201094,"byte_end":201152,"line_start":832,"line_end":832,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":201157,"byte_end":201160,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/         let mut fields = Vec::new();","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":201165,"byte_end":201205,"line_start":834,"line_end":834,"column_start":5,"column_end":45}},{"value":"/         while !parser.is_empty() {","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":201210,"byte_end":201248,"line_start":835,"line_end":835,"column_start":5,"column_end":43}},{"value":"/             fields.push(parser.parens(|p| p.parse())?);","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":201253,"byte_end":201312,"line_start":836,"line_end":836,"column_start":5,"column_end":64}},{"value":"/         }","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":201317,"byte_end":201330,"line_start":837,"line_end":837,"column_start":5,"column_end":18}},{"value":"/         Ok(Module { fields })","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":201335,"byte_end":201368,"line_start":838,"line_end":838,"column_start":5,"column_end":38}},{"value":"/     }","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":201373,"byte_end":201382,"line_start":839,"line_end":839,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":201387,"byte_end":201392,"line_start":840,"line_end":840,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":201397,"byte_end":201400,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ enum ModuleField<'a> {","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":201405,"byte_end":201431,"line_start":842,"line_end":842,"column_start":5,"column_end":31}},{"value":"/     Custom(Custom<'a>),","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":201436,"byte_end":201463,"line_start":843,"line_end":843,"column_start":5,"column_end":32}},{"value":"/     // ...","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":201468,"byte_end":201482,"line_start":844,"line_end":844,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":201487,"byte_end":201492,"line_start":845,"line_end":845,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":201497,"byte_end":201500,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/ impl<'a> Parse<'a> for ModuleField<'a> {","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":201505,"byte_end":201549,"line_start":847,"line_end":847,"column_start":5,"column_end":49}},{"value":"/     fn parse(parser: Parser<'a>) -> Result<Self> {","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":201554,"byte_end":201608,"line_start":848,"line_end":848,"column_start":5,"column_end":59}},{"value":"/         // Note that because we have previously registered the `@custom`","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":201613,"byte_end":201689,"line_start":849,"line_end":849,"column_start":5,"column_end":81}},{"value":"/         // annotation with the parser we known that `peek` methods like","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":201694,"byte_end":201769,"line_start":850,"line_end":850,"column_start":5,"column_end":80}},{"value":"/         // this, working on the annotation token, are enabled to ever","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":201774,"byte_end":201847,"line_start":851,"line_end":851,"column_start":5,"column_end":78}},{"value":"/         // return `true`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":201852,"byte_end":201881,"line_start":852,"line_end":852,"column_start":5,"column_end":34}},{"value":"/         if parser.peek::<annotation::custom>() {","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":201886,"byte_end":201938,"line_start":853,"line_end":853,"column_start":5,"column_end":57}},{"value":"/             return Ok(ModuleField::Custom(parser.parse()?));","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":201943,"byte_end":202007,"line_start":854,"line_end":854,"column_start":5,"column_end":69}},{"value":"/         }","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":202012,"byte_end":202025,"line_start":855,"line_end":855,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":202030,"byte_end":202033,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/         // .. typically we'd parse other module fields here...","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":202038,"byte_end":202104,"line_start":857,"line_end":857,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":202109,"byte_end":202112,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/         Err(parser.error(\"unknown module field\"))","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":202117,"byte_end":202170,"line_start":859,"line_end":859,"column_start":5,"column_end":58}},{"value":"/     }","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":202175,"byte_end":202184,"line_start":860,"line_end":860,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":202189,"byte_end":202194,"line_start":861,"line_end":861,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":202199,"byte_end":202206,"line_start":862,"line_end":862,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":202211,"byte_end":202214,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ [annotation]: https://github.com/WebAssembly/annotations","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":202219,"byte_end":202279,"line_start":864,"line_end":864,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":203176,"byte_end":203184,"line_start":893,"line_end":893,"column_start":12,"column_end":20},"name":"cur_span","qualname":"<Cursor>::cur_span","value":"pub fn cur_span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the span of the next `Token` token.","sig":null,"attributes":[{"value":"/ Returns the span of the next `Token` token.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":203050,"byte_end":203097,"line_start":890,"line_end":890,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":203102,"byte_end":203105,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ Does not take into account whitespace or comments.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":203110,"byte_end":203164,"line_start":892,"line_end":892,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":203879,"byte_end":203884,"line_start":913,"line_end":913,"column_start":12,"column_end":17},"name":"error","qualname":"<Cursor>::error","value":"pub fn error<impl fmt::Display: fmt::Display>(&Self, impl fmt::Display)\n-> Error","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Parser::error`], but works with the current token in this\n [`Cursor`] instead.\n","sig":null,"attributes":[{"value":"/ Same as [`Parser::error`], but works with the current token in this","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":203768,"byte_end":203839,"line_start":911,"line_end":911,"column_start":5,"column_end":76}},{"value":"/ [`Cursor`] instead.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":203844,"byte_end":203867,"line_start":912,"line_end":912,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":204339,"byte_end":204345,"line_start":924,"line_end":924,"column_start":12,"column_end":18},"name":"lparen","qualname":"<Cursor>::lparen","value":"pub fn lparen(Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to advance this cursor if the current token is a `(`.","sig":null,"attributes":[{"value":"/ Attempts to advance this cursor if the current token is a `(`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":203990,"byte_end":204056,"line_start":917,"line_end":917,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":204061,"byte_end":204064,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ If the current token is `(`, returns a new [`Cursor`] pointing at the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":204069,"byte_end":204142,"line_start":919,"line_end":919,"column_start":5,"column_end":78}},{"value":"/ rest of the tokens in the stream. Otherwise returns `None`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":204147,"byte_end":204210,"line_start":920,"line_end":920,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":204215,"byte_end":204218,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ This function will automatically skip over any comments, whitespace, or","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":204223,"byte_end":204298,"line_start":922,"line_end":922,"column_start":5,"column_end":80}},{"value":"/ unknown annotations.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":204303,"byte_end":204327,"line_start":923,"line_end":923,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":204849,"byte_end":204855,"line_start":938,"line_end":938,"column_start":12,"column_end":18},"name":"rparen","qualname":"<Cursor>::rparen","value":"pub fn rparen(Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to advance this cursor if the current token is a `)`.","sig":null,"attributes":[{"value":"/ Attempts to advance this cursor if the current token is a `)`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":204500,"byte_end":204566,"line_start":931,"line_end":931,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":204571,"byte_end":204574,"line_start":932,"line_end":932,"column_start":5,"column_end":8}},{"value":"/ If the current token is `)`, returns a new [`Cursor`] pointing at the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":204579,"byte_end":204652,"line_start":933,"line_end":933,"column_start":5,"column_end":78}},{"value":"/ rest of the tokens in the stream. Otherwise returns `None`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":204657,"byte_end":204720,"line_start":934,"line_end":934,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":204725,"byte_end":204728,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ This function will automatically skip over any comments, whitespace, or","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":204733,"byte_end":204808,"line_start":936,"line_end":936,"column_start":5,"column_end":80}},{"value":"/ unknown annotations.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":204813,"byte_end":204837,"line_start":937,"line_end":937,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":205464,"byte_end":205466,"line_start":954,"line_end":954,"column_start":12,"column_end":14},"name":"id","qualname":"<Cursor>::id","value":"pub fn id(Self) -> Option<(&'a str, Self)>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to advance this cursor if the current token is a\n [`Token::Id`](crate::lexer::Token)","sig":null,"attributes":[{"value":"/ Attempts to advance this cursor if the current token is a","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":205010,"byte_end":205071,"line_start":945,"line_end":945,"column_start":5,"column_end":66}},{"value":"/ [`Token::Id`](crate::lexer::Token)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":205076,"byte_end":205114,"line_start":946,"line_end":946,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":205119,"byte_end":205122,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ If the current token is `Id`, returns the identifier minus the leading","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":205127,"byte_end":205201,"line_start":948,"line_end":948,"column_start":5,"column_end":79}},{"value":"/ `$` character as well as a new [`Cursor`] pointing at the rest of the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":205206,"byte_end":205279,"line_start":949,"line_end":949,"column_start":5,"column_end":78}},{"value":"/ tokens in the stream. Otherwise returns `None`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":205284,"byte_end":205335,"line_start":950,"line_end":950,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":205340,"byte_end":205343,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ This function will automatically skip over any comments, whitespace, or","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":205348,"byte_end":205423,"line_start":952,"line_end":952,"column_start":5,"column_end":80}},{"value":"/ unknown annotations.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":205428,"byte_end":205452,"line_start":953,"line_end":953,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":206070,"byte_end":206077,"line_start":970,"line_end":970,"column_start":12,"column_end":19},"name":"keyword","qualname":"<Cursor>::keyword","value":"pub fn keyword(Self) -> Option<(&'a str, Self)>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to advance this cursor if the current token is a\n [`Token::Keyword`](crate::lexer::Token)","sig":null,"attributes":[{"value":"/ Attempts to advance this cursor if the current token is a","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":205641,"byte_end":205702,"line_start":961,"line_end":961,"column_start":5,"column_end":66}},{"value":"/ [`Token::Keyword`](crate::lexer::Token)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":205707,"byte_end":205750,"line_start":962,"line_end":962,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":205755,"byte_end":205758,"line_start":963,"line_end":963,"column_start":5,"column_end":8}},{"value":"/ If the current token is `Keyword`, returns the keyword as well as a new","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":205763,"byte_end":205838,"line_start":964,"line_end":964,"column_start":5,"column_end":80}},{"value":"/ [`Cursor`] pointing at the rest of the tokens in the stream. Otherwise","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":205843,"byte_end":205917,"line_start":965,"line_end":965,"column_start":5,"column_end":79}},{"value":"/ returns `None`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":205922,"byte_end":205941,"line_start":966,"line_end":966,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":205946,"byte_end":205949,"line_start":967,"line_end":967,"column_start":5,"column_end":8}},{"value":"/ This function will automatically skip over any comments, whitespace, or","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":205954,"byte_end":206029,"line_start":968,"line_end":968,"column_start":5,"column_end":80}},{"value":"/ unknown annotations.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":206034,"byte_end":206058,"line_start":969,"line_end":969,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":206689,"byte_end":206697,"line_start":986,"line_end":986,"column_start":12,"column_end":20},"name":"reserved","qualname":"<Cursor>::reserved","value":"pub fn reserved(Self) -> Option<(&'a str, Self)>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to advance this cursor if the current token is a\n [`Token::Reserved`](crate::lexer::Token)","sig":null,"attributes":[{"value":"/ Attempts to advance this cursor if the current token is a","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":206251,"byte_end":206312,"line_start":977,"line_end":977,"column_start":5,"column_end":66}},{"value":"/ [`Token::Reserved`](crate::lexer::Token)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":206317,"byte_end":206361,"line_start":978,"line_end":978,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":206366,"byte_end":206369,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ If the current token is `Reserved`, returns the reserved token as well","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":206374,"byte_end":206448,"line_start":980,"line_end":980,"column_start":5,"column_end":79}},{"value":"/ as a new [`Cursor`] pointing at the rest of the tokens in the stream.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":206453,"byte_end":206526,"line_start":981,"line_end":981,"column_start":5,"column_end":78}},{"value":"/ Otherwise returns `None`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":206531,"byte_end":206560,"line_start":982,"line_end":982,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":206565,"byte_end":206568,"line_start":983,"line_end":983,"column_start":5,"column_end":8}},{"value":"/ This function will automatically skip over any comments, whitespace, or","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":206573,"byte_end":206648,"line_start":984,"line_end":984,"column_start":5,"column_end":80}},{"value":"/ unknown annotations.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":206653,"byte_end":206677,"line_start":985,"line_end":985,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":207301,"byte_end":207308,"line_start":1002,"line_end":1002,"column_start":12,"column_end":19},"name":"integer","qualname":"<Cursor>::integer","value":"pub fn integer(Self) -> Option<(&'a Integer, Self)>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to advance this cursor if the current token is a\n [`Token::Integer`](crate::lexer::Token)","sig":null,"attributes":[{"value":"/ Attempts to advance this cursor if the current token is a","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":206872,"byte_end":206933,"line_start":993,"line_end":993,"column_start":5,"column_end":66}},{"value":"/ [`Token::Integer`](crate::lexer::Token)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":206938,"byte_end":206981,"line_start":994,"line_end":994,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":206986,"byte_end":206989,"line_start":995,"line_end":995,"column_start":5,"column_end":8}},{"value":"/ If the current token is `Integer`, returns the integer as well as a new","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":206994,"byte_end":207069,"line_start":996,"line_end":996,"column_start":5,"column_end":80}},{"value":"/ [`Cursor`] pointing at the rest of the tokens in the stream. Otherwise","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":207074,"byte_end":207148,"line_start":997,"line_end":997,"column_start":5,"column_end":79}},{"value":"/ returns `None`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":207153,"byte_end":207172,"line_start":998,"line_end":998,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":207177,"byte_end":207180,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/ This function will automatically skip over any comments, whitespace, or","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":207185,"byte_end":207260,"line_start":1000,"line_end":1000,"column_start":5,"column_end":80}},{"value":"/ unknown annotations.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":207265,"byte_end":207289,"line_start":1001,"line_end":1001,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":207911,"byte_end":207916,"line_start":1018,"line_end":1018,"column_start":12,"column_end":17},"name":"float","qualname":"<Cursor>::float","value":"pub fn float(Self) -> Option<(&'a Float, Self)>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to advance this cursor if the current token is a\n [`Token::Float`](crate::lexer::Token)","sig":null,"attributes":[{"value":"/ Attempts to advance this cursor if the current token is a","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":207488,"byte_end":207549,"line_start":1009,"line_end":1009,"column_start":5,"column_end":66}},{"value":"/ [`Token::Float`](crate::lexer::Token)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":207554,"byte_end":207595,"line_start":1010,"line_end":1010,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":207600,"byte_end":207603,"line_start":1011,"line_end":1011,"column_start":5,"column_end":8}},{"value":"/ If the current token is `Float`, returns the float as well as a new","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":207608,"byte_end":207679,"line_start":1012,"line_end":1012,"column_start":5,"column_end":76}},{"value":"/ [`Cursor`] pointing at the rest of the tokens in the stream. Otherwise","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":207684,"byte_end":207758,"line_start":1013,"line_end":1013,"column_start":5,"column_end":79}},{"value":"/ returns `None`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":207763,"byte_end":207782,"line_start":1014,"line_end":1014,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":207787,"byte_end":207790,"line_start":1015,"line_end":1015,"column_start":5,"column_end":8}},{"value":"/ This function will automatically skip over any comments, whitespace, or","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":207795,"byte_end":207870,"line_start":1016,"line_end":1016,"column_start":5,"column_end":80}},{"value":"/ unknown annotations.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":207875,"byte_end":207899,"line_start":1017,"line_end":1017,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":208536,"byte_end":208542,"line_start":1034,"line_end":1034,"column_start":12,"column_end":18},"name":"string","qualname":"<Cursor>::string","value":"pub fn string(Self) -> Option<(&'a [u8], Self)>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to advance this cursor if the current token is a\n [`Token::String`](crate::lexer::Token)","sig":null,"attributes":[{"value":"/ Attempts to advance this cursor if the current token is a","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":208092,"byte_end":208153,"line_start":1025,"line_end":1025,"column_start":5,"column_end":66}},{"value":"/ [`Token::String`](crate::lexer::Token)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":208158,"byte_end":208200,"line_start":1026,"line_end":1026,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":208205,"byte_end":208208,"line_start":1027,"line_end":1027,"column_start":5,"column_end":8}},{"value":"/ If the current token is `String`, returns the byte value of the string","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":208213,"byte_end":208287,"line_start":1028,"line_end":1028,"column_start":5,"column_end":79}},{"value":"/ as well as a new [`Cursor`] pointing at the rest of the tokens in the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":208292,"byte_end":208365,"line_start":1029,"line_end":1029,"column_start":5,"column_end":78}},{"value":"/ stream. Otherwise returns `None`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":208370,"byte_end":208407,"line_start":1030,"line_end":1030,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":208412,"byte_end":208415,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ This function will automatically skip over any comments, whitespace, or","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":208420,"byte_end":208495,"line_start":1032,"line_end":1032,"column_start":5,"column_end":80}},{"value":"/ unknown annotations.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":208500,"byte_end":208524,"line_start":1033,"line_end":1033,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":714},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":209723,"byte_end":209733,"line_start":1061,"line_end":1061,"column_start":12,"column_end":22},"name":"annotation","qualname":"<Cursor>::annotation","value":"pub fn annotation(Self) -> Option<(&'a str, Self)>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to advance this cursor if the current token is a\n [`Token::Reserved`](crate::lexer::Token) and looks like the start of an\n annotation.","sig":null,"attributes":[{"value":"/ Attempts to advance this cursor if the current token is a","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":208720,"byte_end":208781,"line_start":1041,"line_end":1041,"column_start":5,"column_end":66}},{"value":"/ [`Token::Reserved`](crate::lexer::Token) and looks like the start of an","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":208786,"byte_end":208861,"line_start":1042,"line_end":1042,"column_start":5,"column_end":80}},{"value":"/ annotation.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":208866,"byte_end":208881,"line_start":1043,"line_end":1043,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":208886,"byte_end":208889,"line_start":1044,"line_end":1044,"column_start":5,"column_end":8}},{"value":"/ [Annotations][annotation] are a WebAssembly proposal for the text format","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":208894,"byte_end":208970,"line_start":1045,"line_end":1045,"column_start":5,"column_end":81}},{"value":"/ which allows placing structured text inside of a text file, for example","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":208975,"byte_end":209050,"line_start":1046,"line_end":1046,"column_start":5,"column_end":80}},{"value":"/ to specify the name section or other custom sections.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":209055,"byte_end":209112,"line_start":1047,"line_end":1047,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":209117,"byte_end":209120,"line_start":1048,"line_end":1048,"column_start":5,"column_end":8}},{"value":"/ This function will attempt to see if the current token is the `@foo`","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":209125,"byte_end":209197,"line_start":1049,"line_end":1049,"column_start":5,"column_end":77}},{"value":"/ part of the annotation. This requires the previous token to be `(` and","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":209202,"byte_end":209276,"line_start":1050,"line_end":1050,"column_start":5,"column_end":79}},{"value":"/ the current token is `Reserved` which starts with `@` and has a nonzero","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":209281,"byte_end":209356,"line_start":1051,"line_end":1051,"column_start":5,"column_end":80}},{"value":"/ length for the following name.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":209361,"byte_end":209395,"line_start":1052,"line_end":1052,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":209400,"byte_end":209403,"line_start":1053,"line_end":1053,"column_start":5,"column_end":8}},{"value":"/ Note that this will skip *unknown* annoations. Only pre-registered","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":209408,"byte_end":209478,"line_start":1054,"line_end":1054,"column_start":5,"column_end":75}},{"value":"/ annotations will be returned here.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":209483,"byte_end":209521,"line_start":1055,"line_end":1055,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":209526,"byte_end":209529,"line_start":1056,"line_end":1056,"column_start":5,"column_end":8}},{"value":"/ This function will automatically skip over any comments, whitespace, or","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":209534,"byte_end":209609,"line_start":1057,"line_end":1057,"column_start":5,"column_end":80}},{"value":"/ unknown annotations.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":209614,"byte_end":209638,"line_start":1058,"line_end":1058,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":209643,"byte_end":209646,"line_start":1059,"line_end":1059,"column_start":5,"column_end":8}},{"value":"/ [annotation]: https://github.com/WebAssembly/annotations","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":209651,"byte_end":209711,"line_start":1060,"line_end":1060,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":715},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":210344,"byte_end":210351,"line_start":1077,"line_end":1077,"column_start":12,"column_end":19},"name":"comment","qualname":"<Cursor>::comment","value":"pub fn comment(Self) -> Option<(&'a str, Self)>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to advance this cursor if the current token is a\n [`Token::LineComment`](crate::lexer::Token) or a\n [`Token::BlockComment`](crate::lexer::Token)","sig":null,"attributes":[{"value":"/ Attempts to advance this cursor if the current token is a","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":210087,"byte_end":210148,"line_start":1072,"line_end":1072,"column_start":5,"column_end":66}},{"value":"/ [`Token::LineComment`](crate::lexer::Token) or a","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":210153,"byte_end":210205,"line_start":1073,"line_end":1073,"column_start":5,"column_end":57}},{"value":"/ [`Token::BlockComment`](crate::lexer::Token)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":210210,"byte_end":210258,"line_start":1074,"line_end":1074,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":210263,"byte_end":210266,"line_start":1075,"line_end":1075,"column_start":5,"column_end":8}},{"value":"/ This function will only skip whitespace, no other tokens.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":210271,"byte_end":210332,"line_start":1076,"line_end":1076,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":723},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":215692,"byte_end":215696,"line_start":1212,"line_end":1212,"column_start":12,"column_end":16},"name":"peek","qualname":"<Lookahead1>::peek","value":"pub fn peek<T: Peek>(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Attempts to see if `T` is the next token in the [`Parser`] this\n [`Lookahead1`] references.","sig":null,"attributes":[{"value":"/ Attempts to see if `T` is the next token in the [`Parser`] this","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":215493,"byte_end":215560,"line_start":1208,"line_end":1208,"column_start":5,"column_end":72}},{"value":"/ [`Lookahead1`] references.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":215565,"byte_end":215595,"line_start":1209,"line_end":1209,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":215600,"byte_end":215603,"line_start":1210,"line_end":1210,"column_start":5,"column_end":8}},{"value":"/ For more information see [`Parser::lookahead1`] and [`Parser::peek`]","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":215608,"byte_end":215680,"line_start":1211,"line_end":1211,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":216148,"byte_end":216153,"line_start":1226,"line_end":1226,"column_start":12,"column_end":17},"name":"error","qualname":"<Lookahead1>::error","value":"pub fn error(Self) -> Error","parent":null,"children":[],"decl_id":null,"docs":" Generates an error message saying that one of the tokens passed to\n [`Lookahead1::peek`] method was expected.","sig":null,"attributes":[{"value":"/ Generates an error message saying that one of the tokens passed to","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":215883,"byte_end":215953,"line_start":1221,"line_end":1221,"column_start":5,"column_end":75}},{"value":"/ [`Lookahead1::peek`] method was expected.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":215958,"byte_end":216003,"line_start":1222,"line_end":1222,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":216008,"byte_end":216011,"line_start":1223,"line_end":1223,"column_start":5,"column_end":8}},{"value":"/ Before calling this method you should call [`Lookahead1::peek`] for all","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":216016,"byte_end":216091,"line_start":1224,"line_end":1224,"column_start":5,"column_end":80}},{"value":"/ possible tokens you'd like to parse.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":216096,"byte_end":216136,"line_start":1225,"line_end":1225,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":8360},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":2996,"byte_end":3001,"line_start":75,"line_end":75,"column_start":12,"column_end":17},"name":"Error","qualname":"::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":8361}],"decl_id":null,"docs":" A convenience error type to tie together all the detailed errors produced by\n this crate.","sig":null,"attributes":[{"value":"/ A convenience error type to tie together all the detailed errors produced by","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":2526,"byte_end":2606,"line_start":64,"line_end":64,"column_start":1,"column_end":81}},{"value":"/ this crate.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":2607,"byte_end":2622,"line_start":65,"line_end":65,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":2623,"byte_end":2626,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ This type can be created from a [`lexer::LexError`] or [`parser::Error`].","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":2627,"byte_end":2704,"line_start":67,"line_end":67,"column_start":1,"column_end":78}},{"value":"/ This also contains storage for file/text information so a nice error can be","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":2705,"byte_end":2784,"line_start":68,"line_end":68,"column_start":1,"column_end":80}},{"value":"/ rendered along the same lines of rustc's own error messages (minus the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":2785,"byte_end":2859,"line_start":69,"line_end":69,"column_start":1,"column_end":75}},{"value":"/ color).","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":2860,"byte_end":2871,"line_start":70,"line_end":70,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":2872,"byte_end":2875,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ This type is typically suitable for use in public APIs for consumers of this","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":2876,"byte_end":2956,"line_start":72,"line_end":72,"column_start":1,"column_end":81}},{"value":"/ crate.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":2957,"byte_end":2967,"line_start":73,"line_end":73,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":733},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":4325,"byte_end":4328,"line_start":132,"line_end":132,"column_start":12,"column_end":15},"name":"new","qualname":"<Error>::new","value":"pub fn new(Span, String) -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates a new error with the given `message` which is targeted at the\n given `span`","sig":null,"attributes":[{"value":"/ Creates a new error with the given `message` which is targeted at the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":4053,"byte_end":4126,"line_start":127,"line_end":127,"column_start":5,"column_end":78}},{"value":"/ given `span`","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":4131,"byte_end":4147,"line_start":128,"line_end":128,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":4152,"byte_end":4155,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ Note that you'll want to ensure that `set_text` or `set_path` is called","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":4160,"byte_end":4235,"line_start":130,"line_end":130,"column_start":5,"column_end":80}},{"value":"/ on the resulting error to improve the rendering of the error message.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":4240,"byte_end":4313,"line_start":131,"line_end":131,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":4640,"byte_end":4644,"line_start":144,"line_end":144,"column_start":12,"column_end":16},"name":"span","qualname":"<Error>::span","value":"pub fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Return the `Span` for this error.\n","sig":null,"attributes":[{"value":"/ Return the `Span` for this error.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":4591,"byte_end":4628,"line_start":143,"line_end":143,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":5067,"byte_end":5075,"line_start":154,"line_end":154,"column_start":12,"column_end":20},"name":"set_text","qualname":"<Error>::set_text","value":"pub fn set_text(&mut Self, &str)","parent":null,"children":[],"decl_id":null,"docs":" To provide a more useful error this function can be used to extract\n relevant textual information about this error into the error itself.","sig":null,"attributes":[{"value":"/ To provide a more useful error this function can be used to extract","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":4697,"byte_end":4768,"line_start":148,"line_end":148,"column_start":5,"column_end":76}},{"value":"/ relevant textual information about this error into the error itself.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":4773,"byte_end":4845,"line_start":149,"line_end":149,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":4850,"byte_end":4853,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ The `contents` here should be the full text of the original file being","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":4858,"byte_end":4932,"line_start":151,"line_end":151,"column_start":5,"column_end":79}},{"value":"/ parsed, and this will extract a sub-slice as necessary to render in the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":4937,"byte_end":5012,"line_start":152,"line_end":152,"column_start":5,"column_end":80}},{"value":"/ `Display` implementation later on.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":5017,"byte_end":5055,"line_start":153,"line_end":153,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":5513,"byte_end":5521,"line_start":166,"line_end":166,"column_start":12,"column_end":20},"name":"set_path","qualname":"<Error>::set_path","value":"pub fn set_path(&mut Self, &Path)","parent":null,"children":[],"decl_id":null,"docs":" To provide a more useful error this function can be used to set\n the file name that this error is associated with.","sig":null,"attributes":[{"value":"/ To provide a more useful error this function can be used to set","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":5255,"byte_end":5322,"line_start":161,"line_end":161,"column_start":5,"column_end":72}},{"value":"/ the file name that this error is associated with.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":5327,"byte_end":5380,"line_start":162,"line_end":162,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":5385,"byte_end":5388,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ The `path` here will be stored in this error and later rendered in the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":5393,"byte_end":5467,"line_start":164,"line_end":164,"column_start":5,"column_end":79}},{"value":"/ `Display` implementation.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":5472,"byte_end":5501,"line_start":165,"line_end":165,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":5765,"byte_end":5774,"line_start":174,"line_end":174,"column_start":12,"column_end":21},"name":"lex_error","qualname":"<Error>::lex_error","value":"pub fn lex_error(&Self) -> Option<&lexer::LexError>","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying `LexError`, if any, that describes this error.\n","sig":null,"attributes":[{"value":"/ Returns the underlying `LexError`, if any, that describes this error.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":5680,"byte_end":5753,"line_start":173,"line_end":173,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":738},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":6013,"byte_end":6020,"line_start":182,"line_end":182,"column_start":12,"column_end":19},"name":"message","qualname":"<Error>::message","value":"pub fn message(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying message, if any, that describes this error.\n","sig":null,"attributes":[{"value":"/ Returns the underlying message, if any, that describes this error.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":5931,"byte_end":6001,"line_start":181,"line_end":181,"column_start":5,"column_end":75}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":12405,"byte_end":12412,"line_start":153,"line_end":153,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":13529,"byte_end":13532,"line_start":197,"line_end":197,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":14548,"byte_end":14560,"line_start":247,"line_end":247,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":14784,"byte_end":14794,"line_start":257,"line_end":257,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":15033,"byte_end":15042,"line_start":267,"line_end":267,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":15182,"byte_end":15192,"line_start":274,"line_end":274,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":15328,"byte_end":15340,"line_start":281,"line_end":281,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":15444,"byte_end":15454,"line_start":287,"line_end":287,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":15584,"byte_end":15588,"line_start":294,"line_end":294,"column_start":17,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":16287,"byte_end":16293,"line_start":321,"line_end":321,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":16601,"byte_end":16608,"line_start":334,"line_end":334,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":17158,"byte_end":17166,"line_start":354,"line_end":354,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":17621,"byte_end":17628,"line_start":370,"line_end":370,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":19037,"byte_end":19048,"line_start":419,"line_end":419,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":19324,"byte_end":19330,"line_start":431,"line_end":431,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":19631,"byte_end":19638,"line_start":445,"line_end":445,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":20518,"byte_end":20525,"line_start":480,"line_end":480,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":20729,"byte_end":20734,"line_start":489,"line_end":489,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":20962,"byte_end":20972,"line_start":498,"line_end":498,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":21076,"byte_end":21083,"line_start":504,"line_end":504,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":21413,"byte_end":21422,"line_start":516,"line_end":516,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":21554,"byte_end":21560,"line_start":523,"line_end":523,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":21903,"byte_end":21913,"line_start":539,"line_end":539,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":22829,"byte_end":22839,"line_start":566,"line_end":566,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":23043,"byte_end":23048,"line_start":577,"line_end":577,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":23325,"byte_end":23331,"line_start":587,"line_end":587,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":23610,"byte_end":23616,"line_start":597,"line_end":597,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":23928,"byte_end":23934,"line_start":608,"line_end":608,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":24161,"byte_end":24171,"line_start":618,"line_end":618,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":24650,"byte_end":24654,"line_start":633,"line_end":633,"column_start":17,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":27802,"byte_end":27813,"line_start":731,"line_end":731,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":28511,"byte_end":28515,"line_start":753,"line_end":753,"column_start":17,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":29217,"byte_end":29221,"line_start":778,"line_end":778,"column_start":17,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":29715,"byte_end":29718,"line_start":795,"line_end":795,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":30191,"byte_end":30201,"line_start":811,"line_end":811,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":30376,"byte_end":30385,"line_start":820,"line_end":820,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":31119,"byte_end":31131,"line_start":845,"line_end":845,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":31230,"byte_end":31237,"line_start":851,"line_end":851,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":31370,"byte_end":31377,"line_start":858,"line_end":858,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":31474,"byte_end":31480,"line_start":864,"line_end":864,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":31973,"byte_end":31988,"line_start":883,"line_end":883,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":32120,"byte_end":32132,"line_start":890,"line_end":890,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":32261,"byte_end":32270,"line_start":897,"line_end":897,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":32401,"byte_end":32410,"line_start":904,"line_end":904,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":32538,"byte_end":32546,"line_start":911,"line_end":911,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":32646,"byte_end":32655,"line_start":917,"line_end":917,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":32755,"byte_end":32765,"line_start":923,"line_end":923,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":32894,"byte_end":32904,"line_start":930,"line_end":930,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":33032,"byte_end":33046,"line_start":937,"line_end":937,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":33181,"byte_end":33188,"line_start":944,"line_end":944,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":33311,"byte_end":33318,"line_start":950,"line_end":950,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":36462,"byte_end":36467,"line_start":1052,"line_end":1052,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":36613,"byte_end":36618,"line_start":1058,"line_end":1058,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":37235,"byte_end":37237,"line_start":1083,"line_end":1083,"column_start":17,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":37380,"byte_end":37389,"line_start":1090,"line_end":1090,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":37511,"byte_end":37523,"line_start":1096,"line_end":1096,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":37641,"byte_end":37652,"line_start":1102,"line_end":1102,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":37906,"byte_end":37912,"line_start":1114,"line_end":1114,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":38072,"byte_end":38077,"line_start":1122,"line_end":1122,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":38176,"byte_end":38185,"line_start":1128,"line_end":1128,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":38404,"byte_end":38411,"line_start":1139,"line_end":1139,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":38541,"byte_end":38549,"line_start":1146,"line_end":1146,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":38707,"byte_end":38713,"line_start":1154,"line_end":1154,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":38884,"byte_end":38891,"line_start":1162,"line_end":1162,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":39019,"byte_end":39031,"line_start":1169,"line_end":1169,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":39166,"byte_end":39178,"line_start":1176,"line_end":1176,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":39306,"byte_end":39318,"line_start":1183,"line_end":1183,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":39640,"byte_end":39648,"line_start":1194,"line_end":1194,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":40042,"byte_end":40053,"line_start":1207,"line_end":1207,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":40280,"byte_end":40285,"line_start":1217,"line_end":1217,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/aliases.rs","byte_start":47789,"byte_end":47797,"line_start":65,"line_end":65,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/names.rs","byte_start":68227,"byte_end":68235,"line_start":44,"line_end":44,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/names.rs","byte_start":84515,"byte_end":84524,"line_start":466,"line_end":466,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/names.rs","byte_start":87945,"byte_end":87957,"line_start":559,"line_end":559,"column_start":14,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/names.rs","byte_start":99283,"byte_end":99290,"line_start":877,"line_end":877,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":368},{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/names.rs","byte_start":101008,"byte_end":101015,"line_start":934,"line_end":934,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/names.rs","byte_start":101803,"byte_end":101815,"line_start":966,"line_end":966,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":388},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/names.rs","byte_start":103861,"byte_end":103873,"line_start":1023,"line_end":1023,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":395},{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/names.rs","byte_start":104367,"byte_end":104377,"line_start":1040,"line_end":1040,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":399},{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/types.rs","byte_start":105854,"byte_end":105862,"line_start":28,"line_end":28,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":413},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/types.rs","byte_start":115349,"byte_end":115361,"line_start":286,"line_end":286,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":441}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/types.rs","byte_start":115651,"byte_end":115658,"line_start":298,"line_end":298,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/types.rs","byte_start":116287,"byte_end":116299,"line_start":318,"line_end":318,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/types.rs","byte_start":116701,"byte_end":116712,"line_start":335,"line_end":335,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/types.rs","byte_start":117561,"byte_end":117571,"line_start":364,"line_end":364,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/types.rs","byte_start":118308,"byte_end":118317,"line_start":391,"line_end":391,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/types.rs","byte_start":119578,"byte_end":119582,"line_start":437,"line_end":437,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":480},{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/mod.rs","byte_start":41196,"byte_end":41198,"line_start":22,"line_end":22,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":483}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/mod.rs","byte_start":43581,"byte_end":43586,"line_start":93,"line_end":93,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13431149,"byte_end":13431153,"line_start":14,"line_end":14,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":921},{"krate":0,"index":922}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13432400,"byte_end":13432402,"line_start":51,"line_end":51,"column_start":10,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13433052,"byte_end":13433054,"line_start":81,"line_end":81,"column_start":19,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":932}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13433204,"byte_end":13433206,"line_start":88,"line_end":88,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":936}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13433338,"byte_end":13433340,"line_start":94,"line_end":94,"column_start":17,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13433372,"byte_end":13433374,"line_start":96,"line_end":96,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":941}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13433676,"byte_end":13433678,"line_start":107,"line_end":107,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":944}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13433920,"byte_end":13433922,"line_start":117,"line_end":117,"column_start":15,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":946},{"krate":0,"index":947}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13434822,"byte_end":13434827,"line_start":145,"line_end":145,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":949},{"krate":0,"index":950}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13435225,"byte_end":13435230,"line_start":162,"line_end":162,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":953}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13435598,"byte_end":13435603,"line_start":176,"line_end":176,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":955},{"krate":0,"index":956}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13435794,"byte_end":13435799,"line_start":186,"line_end":186,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":959}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13435895,"byte_end":13435900,"line_start":192,"line_end":192,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":961}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13436150,"byte_end":13436155,"line_start":202,"line_end":202,"column_start":13,"column_end":18},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13436178,"byte_end":13436183,"line_start":204,"line_end":204,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":964}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13436892,"byte_end":13436899,"line_start":238,"line_end":238,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":969}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13437408,"byte_end":13437415,"line_start":254,"line_end":254,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":973}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13438130,"byte_end":13438137,"line_start":275,"line_end":275,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":978},{"krate":0,"index":979}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13438545,"byte_end":13438555,"line_start":292,"line_end":292,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":983}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13438966,"byte_end":13438976,"line_start":309,"line_end":309,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":987},{"krate":0,"index":988}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13439400,"byte_end":13439414,"line_start":326,"line_end":326,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":991}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13439621,"byte_end":13439627,"line_start":334,"line_end":334,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":994}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13442114,"byte_end":13442120,"line_start":420,"line_end":420,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1009}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13453236,"byte_end":13453242,"line_start":709,"line_end":709,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1018},{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/alias.rs","byte_start":13456085,"byte_end":13456090,"line_start":37,"line_end":37,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1236}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/alias.rs","byte_start":13456381,"byte_end":13456386,"line_start":47,"line_end":47,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1239}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/assert_expr.rs","byte_start":13458285,"byte_end":13458301,"line_start":30,"line_end":30,"column_start":24,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1271}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/assert_expr.rs","byte_start":13459464,"byte_end":13459474,"line_start":60,"line_end":60,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1276}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/assert_expr.rs","byte_start":13460426,"byte_end":13460437,"line_start":93,"line_end":93,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1279}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/custom.rs","byte_start":13463827,"byte_end":13463833,"line_start":54,"line_end":54,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1304}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/custom.rs","byte_start":13464402,"byte_end":13464413,"line_start":76,"line_end":76,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1308}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/custom.rs","byte_start":13465204,"byte_end":13465221,"line_start":100,"line_end":100,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1311}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/event.rs","byte_start":13468325,"byte_end":13468330,"line_start":25,"line_end":25,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1333}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/event.rs","byte_start":13468679,"byte_end":13468688,"line_start":40,"line_end":40,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1336}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/export.rs","byte_start":13469544,"byte_end":13469550,"line_start":30,"line_end":30,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1364}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/export.rs","byte_start":13469793,"byte_end":13469803,"line_start":40,"line_end":40,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1367}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/export.rs","byte_start":13471737,"byte_end":13471749,"line_start":108,"line_end":108,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1371}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/export.rs","byte_start":13472086,"byte_end":13472098,"line_start":121,"line_end":121,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1374},{"krate":0,"index":1375}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13473193,"byte_end":13473203,"line_start":16,"line_end":16,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1403}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13475841,"byte_end":13475857,"line_start":96,"line_end":96,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1451},{"krate":0,"index":1452},{"krate":0,"index":1454},{"krate":0,"index":1455}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13524347,"byte_end":13524356,"line_start":1104,"line_end":1104,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1459}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13524831,"byte_end":13524843,"line_start":1122,"line_end":1122,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1462}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13525288,"byte_end":13525295,"line_start":1140,"line_end":1140,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1465}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13525722,"byte_end":13525736,"line_start":1157,"line_end":1157,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1468}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13526245,"byte_end":13526252,"line_start":1176,"line_end":1176,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1471}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13527351,"byte_end":13527357,"line_start":1211,"line_end":1211,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1476}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13529622,"byte_end":13529637,"line_start":1278,"line_end":1278,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1483}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13530233,"byte_end":13530245,"line_start":1296,"line_end":1296,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1486}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13531259,"byte_end":13531268,"line_start":1323,"line_end":1323,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1490}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13532071,"byte_end":13532080,"line_start":1346,"line_end":1346,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1493}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13532707,"byte_end":13532715,"line_start":1366,"line_end":1366,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1496}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13533204,"byte_end":13533213,"line_start":1384,"line_end":1384,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1499}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13533816,"byte_end":13533826,"line_start":1404,"line_end":1404,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1502}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13534455,"byte_end":13534465,"line_start":1424,"line_end":1424,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1506}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13535204,"byte_end":13535216,"line_start":1446,"line_end":1446,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1509}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13535691,"byte_end":13535703,"line_start":1464,"line_end":1464,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1512}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13536162,"byte_end":13536171,"line_start":1486,"line_end":1486,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5878}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13539428,"byte_end":13539437,"line_start":1577,"line_end":1577,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1516}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13541667,"byte_end":13541679,"line_start":1647,"line_end":1647,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1519}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13542527,"byte_end":13542538,"line_start":1679,"line_end":1679,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1522}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13543196,"byte_end":13543203,"line_start":1705,"line_end":1705,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1526}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13543598,"byte_end":13543606,"line_start":1722,"line_end":1722,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1529}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13544039,"byte_end":13544045,"line_start":1740,"line_end":1740,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1532}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13544521,"byte_end":13544528,"line_start":1761,"line_end":1761,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1535}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/func.rs","byte_start":13546216,"byte_end":13546220,"line_start":46,"line_end":46,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1557}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/func.rs","byte_start":13547566,"byte_end":13547571,"line_start":93,"line_end":93,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1560}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/global.rs","byte_start":13549432,"byte_end":13549438,"line_start":34,"line_end":34,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1583}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/import.rs","byte_start":13550510,"byte_end":13550516,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1611}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/import.rs","byte_start":13551755,"byte_end":13551762,"line_start":59,"line_end":59,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1615}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/import.rs","byte_start":13554394,"byte_end":13554406,"line_start":137,"line_end":137,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1618}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/import.rs","byte_start":13554680,"byte_end":13554692,"line_start":149,"line_end":149,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1621},{"krate":0,"index":1622}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/instance.rs","byte_start":13556906,"byte_end":13556914,"line_start":47,"line_end":47,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1644}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/instance.rs","byte_start":13557796,"byte_end":13557807,"line_start":79,"line_end":79,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1648}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13559250,"byte_end":13559256,"line_start":40,"line_end":40,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1676}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13561843,"byte_end":13561847,"line_start":123,"line_end":123,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1680}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13563598,"byte_end":13563605,"line_start":180,"line_end":180,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1683},{"krate":0,"index":1684}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13564177,"byte_end":13564184,"line_start":199,"line_end":199,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1687}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13566541,"byte_end":13566544,"line_start":16,"line_end":16,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1731}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13567936,"byte_end":13567942,"line_start":59,"line_end":59,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1749},{"krate":0,"index":1750},{"krate":0,"index":1751}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13570989,"byte_end":13570995,"line_start":132,"line_end":132,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1754}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13572299,"byte_end":13572310,"line_start":179,"line_end":179,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1757}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13572584,"byte_end":13572595,"line_start":189,"line_end":189,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1760}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/nested_module.rs","byte_start":13575886,"byte_end":13575898,"line_start":39,"line_end":39,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1788}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/nested_module.rs","byte_start":13577813,"byte_end":13577823,"line_start":89,"line_end":89,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1793},{"krate":0,"index":1794}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13579798,"byte_end":13579803,"line_start":41,"line_end":41,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1816}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13582793,"byte_end":13582797,"line_start":134,"line_end":134,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1820}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13584048,"byte_end":13584059,"line_start":174,"line_end":174,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1824}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13584192,"byte_end":13584203,"line_start":180,"line_end":180,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1827}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13586421,"byte_end":13586428,"line_start":18,"line_end":18,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1862}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13587593,"byte_end":13587600,"line_start":54,"line_end":54,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1866},{"krate":0,"index":1867}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13589015,"byte_end":13589023,"line_start":96,"line_end":96,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1870}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13589965,"byte_end":13589973,"line_start":125,"line_end":125,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1873},{"krate":0,"index":1874}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13590585,"byte_end":13590592,"line_start":148,"line_end":148,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1877},{"krate":0,"index":1878},{"krate":0,"index":1879},{"krate":0,"index":1880},{"krate":0,"index":1881},{"krate":0,"index":1882}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13591741,"byte_end":13591748,"line_start":198,"line_end":198,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1885}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13593412,"byte_end":13593419,"line_start":248,"line_end":248,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1889},{"krate":0,"index":1890}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13594126,"byte_end":13594137,"line_start":273,"line_end":273,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1893}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13594894,"byte_end":13594904,"line_start":299,"line_end":299,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1896}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13595662,"byte_end":13595668,"line_start":327,"line_end":327,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1900}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13596218,"byte_end":13596226,"line_start":348,"line_end":348,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1903}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13596782,"byte_end":13596791,"line_start":369,"line_end":369,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1906}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13597521,"byte_end":13597531,"line_start":397,"line_end":397,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1909}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13598582,"byte_end":13598594,"line_start":429,"line_end":429,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1912}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13600425,"byte_end":13600437,"line_start":475,"line_end":475,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1916}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13600696,"byte_end":13600708,"line_start":486,"line_end":486,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1919},{"krate":0,"index":1920}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13601213,"byte_end":13601232,"line_start":507,"line_end":507,"column_start":24,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1923}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13601513,"byte_end":13601532,"line_start":518,"line_end":518,"column_start":19,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1926},{"krate":0,"index":1927}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13601742,"byte_end":13601754,"line_start":528,"line_end":528,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1930}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13602026,"byte_end":13602036,"line_start":541,"line_end":541,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1933}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13602893,"byte_end":13602904,"line_start":570,"line_end":570,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1937}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13603658,"byte_end":13603667,"line_start":595,"line_end":595,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1941}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13604398,"byte_end":13604408,"line_start":619,"line_end":619,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1945}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13604894,"byte_end":13604904,"line_start":636,"line_end":636,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1950},{"krate":0,"index":1951}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13605450,"byte_end":13605462,"line_start":660,"line_end":660,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1954}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13605724,"byte_end":13605736,"line_start":670,"line_end":670,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1958},{"krate":0,"index":1959}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13606397,"byte_end":13606407,"line_start":698,"line_end":698,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1962}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13607397,"byte_end":13607401,"line_start":734,"line_end":734,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1966}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13608779,"byte_end":13608786,"line_start":772,"line_end":772,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1971}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13609247,"byte_end":13609254,"line_start":787,"line_end":787,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1975}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13609590,"byte_end":13609597,"line_start":800,"line_end":800,"column_start":57,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1978}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13610363,"byte_end":13610367,"line_start":15,"line_end":15,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2020}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13611019,"byte_end":13611037,"line_start":35,"line_end":35,"column_start":15,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2025},{"krate":0,"index":2026}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13612557,"byte_end":13612570,"line_start":98,"line_end":98,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2067}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13613304,"byte_end":13613317,"line_start":116,"line_end":116,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2070}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13619552,"byte_end":13619563,"line_start":266,"line_end":266,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2098}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13620323,"byte_end":13620333,"line_start":293,"line_end":293,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2107}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13620900,"byte_end":13620911,"line_start":317,"line_end":317,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2119}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":140859,"byte_end":140864,"line_start":222,"line_end":222,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":551},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":562},{"krate":0,"index":563}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":157283,"byte_end":157288,"line_start":698,"line_end":698,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":566},{"krate":0,"index":567}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":157436,"byte_end":157441,"line_start":706,"line_end":706,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":570}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":158006,"byte_end":158013,"line_start":725,"line_end":725,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":158501,"byte_end":158506,"line_start":743,"line_end":743,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":578},{"krate":0,"index":579}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":158817,"byte_end":158827,"line_start":756,"line_end":756,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":582},{"krate":0,"index":583}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":159869,"byte_end":159877,"line_start":815,"line_end":815,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":588}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":182052,"byte_end":182063,"line_start":332,"line_end":332,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":185203,"byte_end":185209,"line_start":415,"line_end":415,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":669},{"krate":0,"index":671},{"krate":0,"index":673},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":685},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":202765,"byte_end":202777,"line_start":879,"line_end":879,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":699}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":203033,"byte_end":203039,"line_start":889,"line_end":889,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":718},{"krate":0,"index":721}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":215472,"byte_end":215482,"line_start":1207,"line_end":1207,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":723},{"krate":0,"index":725}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":217145,"byte_end":217151,"line_start":1255,"line_end":1255,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":729}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":3339,"byte_end":3344,"line_start":100,"line_end":100,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":738}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":6209,"byte_end":6214,"line_start":190,"line_end":190,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":7188,"byte_end":7193,"line_start":227,"line_end":227,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":7203,"byte_end":7207,"line_start":229,"line_end":229,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":744}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":2502,"byte_end":2507,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":500}},{"kind":"Mod","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":2517,"byte_end":2523,"line_start":62,"line_end":62,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":590}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":12405,"byte_end":12412,"line_start":153,"line_end":153,"column_start":6,"column_end":13},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":27},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":13529,"byte_end":13532,"line_start":197,"line_end":197,"column_start":28,"column_end":31},"kind":{"Impl":{"id":1}},"from":{"krate":5,"index":7089},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":14548,"byte_end":14560,"line_start":247,"line_end":247,"column_start":17,"column_end":29},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":6498},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":14784,"byte_end":14794,"line_start":257,"line_end":257,"column_start":17,"column_end":27},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":6524},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":15033,"byte_end":15042,"line_start":267,"line_end":267,"column_start":17,"column_end":26},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":6544},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":15182,"byte_end":15192,"line_start":274,"line_end":274,"column_start":17,"column_end":27},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":6554},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":15328,"byte_end":15340,"line_start":281,"line_end":281,"column_start":17,"column_end":29},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":6567},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":15444,"byte_end":15454,"line_start":287,"line_end":287,"column_start":17,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":6579},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":15584,"byte_end":15588,"line_start":294,"line_end":294,"column_start":17,"column_end":21},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":6610},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":16287,"byte_end":16293,"line_start":321,"line_end":321,"column_start":17,"column_end":23},"kind":{"Impl":{"id":16}},"from":{"krate":2,"index":45976},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":16601,"byte_end":16608,"line_start":334,"line_end":334,"column_start":21,"column_end":28},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":6245},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":17158,"byte_end":17166,"line_start":354,"line_end":354,"column_start":21,"column_end":29},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":6287},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":17621,"byte_end":17628,"line_start":370,"line_end":370,"column_start":21,"column_end":28},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":6327},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":19037,"byte_end":19048,"line_start":419,"line_end":419,"column_start":21,"column_end":32},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":6354},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":19324,"byte_end":19330,"line_start":431,"line_end":431,"column_start":17,"column_end":23},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":5972},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":19631,"byte_end":19638,"line_start":445,"line_end":445,"column_start":17,"column_end":24},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":5984},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":20518,"byte_end":20525,"line_start":480,"line_end":480,"column_start":20,"column_end":27},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":6618},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":20729,"byte_end":20734,"line_start":489,"line_end":489,"column_start":17,"column_end":22},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1031},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":20962,"byte_end":20972,"line_start":498,"line_end":498,"column_start":20,"column_end":30},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1067},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":21076,"byte_end":21083,"line_start":504,"line_end":504,"column_start":20,"column_end":27},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1048},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":21413,"byte_end":21422,"line_start":516,"line_end":516,"column_start":21,"column_end":30},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":6449},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":21554,"byte_end":21560,"line_start":523,"line_end":523,"column_start":17,"column_end":23},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":6413},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":21903,"byte_end":21913,"line_start":539,"line_end":539,"column_start":17,"column_end":27},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":6476},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":22829,"byte_end":22839,"line_start":566,"line_end":566,"column_start":21,"column_end":31},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":6386},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":23043,"byte_end":23048,"line_start":577,"line_end":577,"column_start":17,"column_end":22},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":6187},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":23325,"byte_end":23331,"line_start":587,"line_end":587,"column_start":17,"column_end":23},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":6064},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":23610,"byte_end":23616,"line_start":597,"line_end":597,"column_start":17,"column_end":23},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":5951},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":23928,"byte_end":23934,"line_start":608,"line_end":608,"column_start":17,"column_end":23},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":2309},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":24161,"byte_end":24171,"line_start":618,"line_end":618,"column_start":17,"column_end":27},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":2317},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":24650,"byte_end":24654,"line_start":633,"line_end":633,"column_start":17,"column_end":21},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":6210},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":27802,"byte_end":27813,"line_start":731,"line_end":731,"column_start":17,"column_end":28},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":6231},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":28511,"byte_end":28515,"line_start":753,"line_end":753,"column_start":17,"column_end":21},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":6087},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":29217,"byte_end":29221,"line_start":778,"line_end":778,"column_start":17,"column_end":21},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":5921},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":29715,"byte_end":29718,"line_start":795,"line_end":795,"column_start":17,"column_end":20},"kind":{"Impl":{"id":40}},"from":{"krate":5,"index":7089},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":30191,"byte_end":30201,"line_start":811,"line_end":811,"column_start":17,"column_end":27},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":2386},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":30376,"byte_end":30385,"line_start":820,"line_end":820,"column_start":17,"column_end":26},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":5744},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":31119,"byte_end":31131,"line_start":845,"line_end":845,"column_start":17,"column_end":29},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":5751},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":31230,"byte_end":31237,"line_start":851,"line_end":851,"column_start":17,"column_end":24},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":5757},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":31370,"byte_end":31377,"line_start":858,"line_end":858,"column_start":17,"column_end":24},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":5771},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":31474,"byte_end":31480,"line_start":864,"line_end":864,"column_start":17,"column_end":23},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":5775},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":31973,"byte_end":31988,"line_start":883,"line_end":883,"column_start":17,"column_end":32},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":5783},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":32120,"byte_end":32132,"line_start":890,"line_end":890,"column_start":17,"column_end":29},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":5790},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":32261,"byte_end":32270,"line_start":897,"line_end":897,"column_start":17,"column_end":26},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":5797},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":32401,"byte_end":32410,"line_start":904,"line_end":904,"column_start":17,"column_end":26},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":5804},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":32538,"byte_end":32546,"line_start":911,"line_end":911,"column_start":17,"column_end":25},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":5811},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":32646,"byte_end":32655,"line_start":917,"line_end":917,"column_start":17,"column_end":26},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":5817},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":32755,"byte_end":32765,"line_start":923,"line_end":923,"column_start":17,"column_end":27},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":5823},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":32894,"byte_end":32904,"line_start":930,"line_end":930,"column_start":17,"column_end":27},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":5830},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":33032,"byte_end":33046,"line_start":937,"line_end":937,"column_start":17,"column_end":31},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":5764},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":33181,"byte_end":33188,"line_start":944,"line_end":944,"column_start":17,"column_end":24},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1209},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":33311,"byte_end":33318,"line_start":950,"line_end":950,"column_start":17,"column_end":24},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1213},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":36462,"byte_end":36467,"line_start":1052,"line_end":1052,"column_start":6,"column_end":11},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":176},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":36613,"byte_end":36618,"line_start":1058,"line_end":1058,"column_start":17,"column_end":22},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":176},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":37235,"byte_end":37237,"line_start":1083,"line_end":1083,"column_start":17,"column_end":19},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1021},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":37380,"byte_end":37389,"line_start":1090,"line_end":1090,"column_start":17,"column_end":26},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":5853},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":37511,"byte_end":37523,"line_start":1096,"line_end":1096,"column_start":17,"column_end":29},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":5880},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":37641,"byte_end":37652,"line_start":1102,"line_end":1102,"column_start":21,"column_end":32},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":5885},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":37906,"byte_end":37912,"line_start":1114,"line_end":1114,"column_start":17,"column_end":23},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":2221},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":38072,"byte_end":38077,"line_start":1122,"line_end":1122,"column_start":17,"column_end":22},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":2289},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":38176,"byte_end":38185,"line_start":1128,"line_end":1128,"column_start":17,"column_end":26},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":2298},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":38404,"byte_end":38411,"line_start":1139,"line_end":1139,"column_start":17,"column_end":24},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":5891},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":38541,"byte_end":38549,"line_start":1146,"line_end":1146,"column_start":17,"column_end":25},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":5898},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":38707,"byte_end":38713,"line_start":1154,"line_end":1154,"column_start":17,"column_end":23},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":5906},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":38884,"byte_end":38891,"line_start":1162,"line_end":1162,"column_start":17,"column_end":24},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":5914},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":39019,"byte_end":39031,"line_start":1169,"line_end":1169,"column_start":17,"column_end":29},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":5837},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":39166,"byte_end":39178,"line_start":1176,"line_end":1176,"column_start":17,"column_end":29},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":5844},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":39306,"byte_end":39318,"line_start":1183,"line_end":1183,"column_start":17,"column_end":29},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":6167},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":39640,"byte_end":39648,"line_start":1194,"line_end":1194,"column_start":17,"column_end":25},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":6037},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":40042,"byte_end":40053,"line_start":1207,"line_end":1207,"column_start":17,"column_end":28},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":6057},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/binary.rs","byte_start":40280,"byte_end":40285,"line_start":1217,"line_end":1217,"column_start":17,"column_end":22},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":2121},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/aliases.rs","byte_start":47789,"byte_end":47797,"line_start":65,"line_end":65,"column_start":10,"column_end":18},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":745},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/names.rs","byte_start":68227,"byte_end":68235,"line_start":44,"line_end":44,"column_start":10,"column_end":18},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":757},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/names.rs","byte_start":84515,"byte_end":84524,"line_start":466,"line_end":466,"column_start":10,"column_end":19},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":775},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/names.rs","byte_start":87945,"byte_end":87957,"line_start":559,"line_end":559,"column_start":14,"column_end":26},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":333},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/names.rs","byte_start":99283,"byte_end":99290,"line_start":877,"line_end":877,"column_start":14,"column_end":21},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":351},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/names.rs","byte_start":101008,"byte_end":101015,"line_start":934,"line_end":934,"column_start":23,"column_end":30},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":351},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/names.rs","byte_start":101803,"byte_end":101815,"line_start":966,"line_end":966,"column_start":32,"column_end":44},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":6498},"to":{"krate":0,"index":382}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/names.rs","byte_start":103861,"byte_end":103873,"line_start":1023,"line_end":1023,"column_start":32,"column_end":44},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":6567},"to":{"krate":0,"index":382}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/names.rs","byte_start":104367,"byte_end":104377,"line_start":1040,"line_end":1040,"column_start":32,"column_end":42},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":6554},"to":{"krate":0,"index":382}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/types.rs","byte_start":105854,"byte_end":105862,"line_start":28,"line_end":28,"column_start":10,"column_end":18},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":792},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/types.rs","byte_start":114941,"byte_end":114948,"line_start":272,"line_end":272,"column_start":26,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":3002},"to":{"krate":0,"index":424}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/types.rs","byte_start":115349,"byte_end":115361,"line_start":286,"line_end":286,"column_start":32,"column_end":44},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":6498},"to":{"krate":0,"index":424}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/types.rs","byte_start":115651,"byte_end":115658,"line_start":298,"line_end":298,"column_start":26,"column_end":33},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":434},"to":{"krate":0,"index":429}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/types.rs","byte_start":116287,"byte_end":116299,"line_start":318,"line_end":318,"column_start":32,"column_end":44},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":6567},"to":{"krate":0,"index":424}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/types.rs","byte_start":116701,"byte_end":116712,"line_start":335,"line_end":335,"column_start":26,"column_end":37},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":448},"to":{"krate":0,"index":429}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/types.rs","byte_start":117561,"byte_end":117571,"line_start":364,"line_end":364,"column_start":32,"column_end":42},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":6554},"to":{"krate":0,"index":424}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/types.rs","byte_start":118308,"byte_end":118317,"line_start":391,"line_end":391,"column_start":26,"column_end":35},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":462},"to":{"krate":0,"index":429}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/types.rs","byte_start":119578,"byte_end":119582,"line_start":437,"line_end":437,"column_start":10,"column_end":14},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":802},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/mod.rs","byte_start":41196,"byte_end":41198,"line_start":22,"line_end":22,"column_start":6,"column_end":8},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":843},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/resolve/mod.rs","byte_start":43581,"byte_end":43586,"line_start":93,"line_end":93,"column_start":10,"column_end":15},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":874},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13431149,"byte_end":13431153,"line_start":14,"line_end":14,"column_start":6,"column_end":10},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":8386},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13432400,"byte_end":13432402,"line_start":51,"line_end":51,"column_start":10,"column_end":12},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1021},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13433052,"byte_end":13433054,"line_start":81,"line_end":81,"column_start":19,"column_end":21},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1021},"to":{"krate":2,"index":9804}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13433204,"byte_end":13433206,"line_start":88,"line_end":88,"column_start":24,"column_end":26},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1021},"to":{"krate":2,"index":2675}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13433338,"byte_end":13433340,"line_start":94,"line_end":94,"column_start":17,"column_end":19},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1021},"to":{"krate":2,"index":2680}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13433372,"byte_end":13433374,"line_start":96,"line_end":96,"column_start":24,"column_end":26},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1021},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13433676,"byte_end":13433678,"line_start":107,"line_end":107,"column_start":21,"column_end":23},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1021},"to":{"krate":2,"index":9597}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13433920,"byte_end":13433922,"line_start":117,"line_end":117,"column_start":15,"column_end":17},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1021},"to":{"krate":0,"index":633}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13434822,"byte_end":13434827,"line_start":145,"line_end":145,"column_start":6,"column_end":11},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1031},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13435225,"byte_end":13435230,"line_start":162,"line_end":162,"column_start":24,"column_end":29},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1031},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13435598,"byte_end":13435603,"line_start":176,"line_end":176,"column_start":15,"column_end":20},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1031},"to":{"krate":0,"index":633}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13435794,"byte_end":13435799,"line_start":186,"line_end":186,"column_start":27,"column_end":32},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1031},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13435895,"byte_end":13435900,"line_start":192,"line_end":192,"column_start":20,"column_end":25},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1031},"to":{"krate":2,"index":2675}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13436150,"byte_end":13436155,"line_start":202,"line_end":202,"column_start":13,"column_end":18},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1031},"to":{"krate":2,"index":2680}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13436178,"byte_end":13436183,"line_start":204,"line_end":204,"column_start":15,"column_end":20},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1031},"to":{"krate":2,"index":9804}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13436892,"byte_end":13436899,"line_start":238,"line_end":238,"column_start":13,"column_end":20},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1048},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13437408,"byte_end":13437415,"line_start":254,"line_end":254,"column_start":38,"column_end":45},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1048},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13438130,"byte_end":13438137,"line_start":275,"line_end":275,"column_start":28,"column_end":35},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1048},"to":{"krate":0,"index":633}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13438545,"byte_end":13438555,"line_start":292,"line_end":292,"column_start":27,"column_end":37},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1067},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13438966,"byte_end":13438976,"line_start":309,"line_end":309,"column_start":28,"column_end":38},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1067},"to":{"krate":0,"index":633}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13439400,"byte_end":13439414,"line_start":326,"line_end":326,"column_start":24,"column_end":38},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1080},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13439621,"byte_end":13439627,"line_start":334,"line_end":334,"column_start":24,"column_end":30},"kind":{"Impl":{"id":117}},"from":{"krate":2,"index":45976},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13442114,"byte_end":13442120,"line_start":420,"line_end":420,"column_start":20,"column_end":26},"kind":{"Impl":{"id":118}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/token.rs","byte_start":13453236,"byte_end":13453242,"line_start":709,"line_end":709,"column_start":15,"column_end":21},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1015},"to":{"krate":0,"index":633}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/alias.rs","byte_start":13456085,"byte_end":13456090,"line_start":37,"line_end":37,"column_start":6,"column_end":11},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2121},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/alias.rs","byte_start":13456381,"byte_end":13456386,"line_start":47,"line_end":47,"column_start":24,"column_end":29},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2121},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/assert_expr.rs","byte_start":13458285,"byte_end":13458301,"line_start":30,"line_end":30,"column_start":24,"column_end":40},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2143},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/assert_expr.rs","byte_start":13459464,"byte_end":13459474,"line_start":60,"line_end":60,"column_start":27,"column_end":37},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2176},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/assert_expr.rs","byte_start":13460426,"byte_end":13460437,"line_start":93,"line_end":93,"column_start":24,"column_end":35},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2194},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/custom.rs","byte_start":13463827,"byte_end":13463833,"line_start":54,"line_end":54,"column_start":24,"column_end":30},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2221},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/custom.rs","byte_start":13464402,"byte_end":13464413,"line_start":76,"line_end":76,"column_start":24,"column_end":35},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2230},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/custom.rs","byte_start":13465204,"byte_end":13465221,"line_start":100,"line_end":100,"column_start":24,"column_end":41},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":2250},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/event.rs","byte_start":13468325,"byte_end":13468330,"line_start":25,"line_end":25,"column_start":24,"column_end":29},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2289},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/event.rs","byte_start":13468679,"byte_end":13468688,"line_start":40,"line_end":40,"column_start":24,"column_end":33},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2298},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/export.rs","byte_start":13469544,"byte_end":13469550,"line_start":30,"line_end":30,"column_start":24,"column_end":30},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2309},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/export.rs","byte_start":13469793,"byte_end":13469803,"line_start":40,"line_end":40,"column_start":24,"column_end":34},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2317},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/export.rs","byte_start":13471737,"byte_end":13471749,"line_start":108,"line_end":108,"column_start":24,"column_end":36},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2380},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/export.rs","byte_start":13472086,"byte_end":13472098,"line_start":121,"line_end":121,"column_start":15,"column_end":27},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2380},"to":{"krate":0,"index":633}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13473193,"byte_end":13473203,"line_start":16,"line_end":16,"column_start":24,"column_end":34},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":2386},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13475841,"byte_end":13475857,"line_start":96,"line_end":96,"column_start":10,"column_end":26},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":2392},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13524347,"byte_end":13524356,"line_start":1104,"line_end":1104,"column_start":24,"column_end":33},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":5744},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13524831,"byte_end":13524843,"line_start":1122,"line_end":1122,"column_start":24,"column_end":36},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":5751},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13525288,"byte_end":13525295,"line_start":1140,"line_end":1140,"column_start":24,"column_end":31},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":5757},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13525722,"byte_end":13525736,"line_start":1157,"line_end":1157,"column_start":24,"column_end":38},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":5764},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13526245,"byte_end":13526252,"line_start":1176,"line_end":1176,"column_start":24,"column_end":31},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":5771},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13527351,"byte_end":13527357,"line_start":1211,"line_end":1211,"column_start":10,"column_end":16},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":5775},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13529622,"byte_end":13529637,"line_start":1278,"line_end":1278,"column_start":10,"column_end":25},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":5783},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13530233,"byte_end":13530245,"line_start":1296,"line_end":1296,"column_start":24,"column_end":36},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":5790},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13531259,"byte_end":13531268,"line_start":1323,"line_end":1323,"column_start":24,"column_end":33},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":5797},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13532071,"byte_end":13532080,"line_start":1346,"line_end":1346,"column_start":24,"column_end":33},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":5804},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13532707,"byte_end":13532715,"line_start":1366,"line_end":1366,"column_start":24,"column_end":32},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":5811},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13533204,"byte_end":13533213,"line_start":1384,"line_end":1384,"column_start":24,"column_end":33},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":5817},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13533816,"byte_end":13533826,"line_start":1404,"line_end":1404,"column_start":24,"column_end":34},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":5823},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13534455,"byte_end":13534465,"line_start":1424,"line_end":1424,"column_start":24,"column_end":34},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":5830},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13535204,"byte_end":13535216,"line_start":1446,"line_end":1446,"column_start":24,"column_end":36},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":5837},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13535691,"byte_end":13535703,"line_start":1464,"line_end":1464,"column_start":24,"column_end":36},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":5844},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13536162,"byte_end":13536171,"line_start":1486,"line_end":1486,"column_start":6,"column_end":15},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":5853},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13539428,"byte_end":13539437,"line_start":1577,"line_end":1577,"column_start":24,"column_end":33},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":5853},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13541667,"byte_end":13541679,"line_start":1647,"line_end":1647,"column_start":24,"column_end":36},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":5880},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13542527,"byte_end":13542538,"line_start":1679,"line_end":1679,"column_start":24,"column_end":35},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":5885},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13543196,"byte_end":13543203,"line_start":1705,"line_end":1705,"column_start":24,"column_end":31},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":5891},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13543598,"byte_end":13543606,"line_start":1722,"line_end":1722,"column_start":24,"column_end":32},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":5898},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13544039,"byte_end":13544045,"line_start":1740,"line_end":1740,"column_start":24,"column_end":30},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":5906},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/expr.rs","byte_start":13544521,"byte_end":13544528,"line_start":1761,"line_end":1761,"column_start":24,"column_end":31},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":5914},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/func.rs","byte_start":13546216,"byte_end":13546220,"line_start":46,"line_end":46,"column_start":24,"column_end":28},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":5921},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/func.rs","byte_start":13547566,"byte_end":13547571,"line_start":93,"line_end":93,"column_start":10,"column_end":15},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":5943},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/global.rs","byte_start":13549432,"byte_end":13549438,"line_start":34,"line_end":34,"column_start":24,"column_end":30},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":5951},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/import.rs","byte_start":13550510,"byte_end":13550516,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":5972},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/import.rs","byte_start":13551755,"byte_end":13551762,"line_start":59,"line_end":59,"column_start":24,"column_end":31},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":5984},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/import.rs","byte_start":13554394,"byte_end":13554406,"line_start":137,"line_end":137,"column_start":24,"column_end":36},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":6025},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/import.rs","byte_start":13554680,"byte_end":13554692,"line_start":149,"line_end":149,"column_start":15,"column_end":27},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":6025},"to":{"krate":0,"index":633}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/instance.rs","byte_start":13556906,"byte_end":13556914,"line_start":47,"line_end":47,"column_start":24,"column_end":32},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":6037},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/instance.rs","byte_start":13557796,"byte_end":13557807,"line_start":79,"line_end":79,"column_start":24,"column_end":35},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":6057},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13559250,"byte_end":13559256,"line_start":40,"line_end":40,"column_start":24,"column_end":30},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":6064},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13561843,"byte_end":13561847,"line_start":123,"line_end":123,"column_start":24,"column_end":28},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":6087},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13563598,"byte_end":13563605,"line_start":180,"line_end":180,"column_start":6,"column_end":13},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":6106},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/memory.rs","byte_start":13564177,"byte_end":13564184,"line_start":199,"line_end":199,"column_start":24,"column_end":31},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":6106},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13566541,"byte_end":13566544,"line_start":16,"line_end":16,"column_start":24,"column_end":27},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":1726},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13567936,"byte_end":13567942,"line_start":59,"line_end":59,"column_start":10,"column_end":16},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":1733},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13570989,"byte_end":13570995,"line_start":132,"line_end":132,"column_start":24,"column_end":30},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":1733},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13572299,"byte_end":13572310,"line_start":179,"line_end":179,"column_start":10,"column_end":21},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":6117},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/module.rs","byte_start":13572584,"byte_end":13572595,"line_start":189,"line_end":189,"column_start":24,"column_end":35},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":6117},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/nested_module.rs","byte_start":13575886,"byte_end":13575898,"line_start":39,"line_end":39,"column_start":24,"column_end":36},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":6167},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/nested_module.rs","byte_start":13577813,"byte_end":13577823,"line_start":89,"line_end":89,"column_start":15,"column_end":25},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":1790},"to":{"krate":0,"index":633}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13579798,"byte_end":13579803,"line_start":41,"line_end":41,"column_start":24,"column_end":29},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":6187},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13582793,"byte_end":13582797,"line_start":134,"line_end":134,"column_start":24,"column_end":28},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":6210},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13584048,"byte_end":13584059,"line_start":174,"line_end":174,"column_start":24,"column_end":35},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":6231},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/table.rs","byte_start":13584192,"byte_end":13584203,"line_start":180,"line_end":180,"column_start":10,"column_end":21},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":6231},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13586421,"byte_end":13586428,"line_start":18,"line_end":18,"column_start":24,"column_end":31},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":6245},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13587593,"byte_end":13587600,"line_start":54,"line_end":54,"column_start":19,"column_end":26},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":6245},"to":{"krate":0,"index":633}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13589015,"byte_end":13589023,"line_start":96,"line_end":96,"column_start":24,"column_end":32},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":6287},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13589965,"byte_end":13589973,"line_start":125,"line_end":125,"column_start":19,"column_end":27},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":6287},"to":{"krate":0,"index":633}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13590585,"byte_end":13590592,"line_start":148,"line_end":148,"column_start":10,"column_end":17},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":6327},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13591741,"byte_end":13591748,"line_start":198,"line_end":198,"column_start":24,"column_end":31},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":6327},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13593412,"byte_end":13593419,"line_start":248,"line_end":248,"column_start":19,"column_end":26},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":6327},"to":{"krate":0,"index":633}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13594126,"byte_end":13594137,"line_start":273,"line_end":273,"column_start":24,"column_end":35},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":6354},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13594894,"byte_end":13594904,"line_start":299,"line_end":299,"column_start":24,"column_end":34},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":6386},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13595662,"byte_end":13595668,"line_start":327,"line_end":327,"column_start":24,"column_end":30},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":6413},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13596218,"byte_end":13596226,"line_start":348,"line_end":348,"column_start":24,"column_end":32},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":6431},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13596782,"byte_end":13596791,"line_start":369,"line_end":369,"column_start":24,"column_end":33},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":6449},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13597521,"byte_end":13597531,"line_start":397,"line_end":397,"column_start":24,"column_end":34},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":6476},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13598582,"byte_end":13598594,"line_start":429,"line_end":429,"column_start":10,"column_end":22},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":6498},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13600425,"byte_end":13600437,"line_start":475,"line_end":475,"column_start":24,"column_end":36},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":6498},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13600696,"byte_end":13600708,"line_start":486,"line_end":486,"column_start":19,"column_end":31},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":6498},"to":{"krate":0,"index":633}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13601213,"byte_end":13601232,"line_start":507,"line_end":507,"column_start":24,"column_end":43},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":6511},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13601513,"byte_end":13601532,"line_start":518,"line_end":518,"column_start":19,"column_end":38},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":6511},"to":{"krate":0,"index":633}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13601742,"byte_end":13601754,"line_start":528,"line_end":528,"column_start":44,"column_end":56},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":6498},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13602026,"byte_end":13602036,"line_start":541,"line_end":541,"column_start":24,"column_end":34},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":6524},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13602893,"byte_end":13602904,"line_start":570,"line_end":570,"column_start":10,"column_end":21},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":6533},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13603658,"byte_end":13603667,"line_start":595,"line_end":595,"column_start":24,"column_end":33},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":6544},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13604398,"byte_end":13604408,"line_start":619,"line_end":619,"column_start":24,"column_end":34},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":6554},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13604894,"byte_end":13604904,"line_start":636,"line_end":636,"column_start":19,"column_end":29},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":6554},"to":{"krate":0,"index":633}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13605450,"byte_end":13605462,"line_start":660,"line_end":660,"column_start":24,"column_end":36},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":6567},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13605724,"byte_end":13605736,"line_start":670,"line_end":670,"column_start":19,"column_end":31},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":6567},"to":{"krate":0,"index":633}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13606397,"byte_end":13606407,"line_start":698,"line_end":698,"column_start":24,"column_end":34},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":6579},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13607397,"byte_end":13607401,"line_start":734,"line_end":734,"column_start":24,"column_end":28},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":6610},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13608779,"byte_end":13608786,"line_start":772,"line_end":772,"column_start":13,"column_end":20},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":6618},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13609247,"byte_end":13609254,"line_start":787,"line_end":787,"column_start":45,"column_end":52},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":6618},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/types.rs","byte_start":13609590,"byte_end":13609597,"line_start":800,"line_end":800,"column_start":57,"column_end":64},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":6618},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13610363,"byte_end":13610367,"line_start":15,"line_end":15,"column_start":24,"column_end":28},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":2015},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13611019,"byte_end":13611037,"line_start":35,"line_end":35,"column_start":15,"column_end":33},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":2022},"to":{"krate":0,"index":633}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13612557,"byte_end":13612570,"line_start":98,"line_end":98,"column_start":6,"column_end":19},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":2027},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13613304,"byte_end":13613317,"line_start":116,"line_end":116,"column_start":24,"column_end":37},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":2027},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13619552,"byte_end":13619563,"line_start":266,"line_end":266,"column_start":24,"column_end":35},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":2085},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13620323,"byte_end":13620333,"line_start":293,"line_end":293,"column_start":24,"column_end":34},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":2099},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/ast/wast.rs","byte_start":13620900,"byte_end":13620911,"line_start":317,"line_end":317,"column_start":24,"column_end":35},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":2109},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":140859,"byte_end":140864,"line_start":222,"line_end":222,"column_start":10,"column_end":15},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":8125},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":157283,"byte_end":157288,"line_start":698,"line_end":698,"column_start":23,"column_end":28},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":8125},"to":{"krate":2,"index":7907}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":157436,"byte_end":157441,"line_start":706,"line_end":706,"column_start":10,"column_end":15},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":8132},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":158006,"byte_end":158013,"line_start":725,"line_end":725,"column_start":10,"column_end":17},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":8229},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":158501,"byte_end":158506,"line_start":743,"line_end":743,"column_start":10,"column_end":15},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":8257},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":158817,"byte_end":158827,"line_start":756,"line_end":756,"column_start":10,"column_end":20},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":8283},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lexer.rs","byte_start":159869,"byte_end":159877,"line_start":815,"line_end":815,"column_start":23,"column_end":31},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":8176},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":177412,"byte_end":177417,"line_start":208,"line_end":208,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":3029},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":182052,"byte_end":182063,"line_start":332,"line_end":332,"column_start":6,"column_end":17},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":639},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":185203,"byte_end":185209,"line_start":415,"line_end":415,"column_start":10,"column_end":16},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":8343},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":202765,"byte_end":202777,"line_start":879,"line_end":879,"column_start":23,"column_end":35},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":693},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":203033,"byte_end":203039,"line_start":889,"line_end":889,"column_start":10,"column_end":16},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":8351},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":215472,"byte_end":215482,"line_start":1207,"line_end":1207,"column_start":6,"column_end":16},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":646},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/parser.rs","byte_start":217145,"byte_end":217151,"line_start":1255,"line_end":1255,"column_start":45,"column_end":51},"kind":{"Impl":{"id":234}},"from":{"krate":2,"index":45976},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":3339,"byte_end":3344,"line_start":100,"line_end":100,"column_start":6,"column_end":11},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":8360},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":6209,"byte_end":6214,"line_start":190,"line_end":190,"column_start":23,"column_end":28},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":8360},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":7188,"byte_end":7193,"line_start":227,"line_end":227,"column_start":28,"column_end":33},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":8360},"to":{"krate":1,"index":2452}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-32.0.0/src/lib.rs","byte_start":7203,"byte_end":7207,"line_start":229,"line_end":229,"column_start":6,"column_end":10},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":8371},"to":{"krate":4294967295,"index":4294967295}}]}