{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1","program":"/Users/doviethoang/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","dynasmrt","--edition=2018","/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=18dea364fc3281fc","-C","extra-filename=-18dea364fc3281fc","--out-dir","/Users/doviethoang/Desktop/github/cw-contracts/contracts/voting/target/rls/debug/deps","-L","dependency=/Users/doviethoang/Desktop/github/cw-contracts/contracts/voting/target/rls/debug/deps","--extern","byteorder=/Users/doviethoang/Desktop/github/cw-contracts/contracts/voting/target/rls/debug/deps/libbyteorder-4338390983c34732.rmeta","--extern","dynasm=/Users/doviethoang/Desktop/github/cw-contracts/contracts/voting/target/rls/debug/deps/libdynasm-2b954367ca6fedcc.dylib","--extern","memmap2=/Users/doviethoang/Desktop/github/cw-contracts/contracts/voting/target/rls/debug/deps/libmemmap2-2ee4874b98fc6b51.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/doviethoang/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/doviethoang/Desktop/github/cw-contracts/contracts/voting/target/rls/debug/deps/libdynasmrt-18dea364fc3281fc.rmeta"},"prelude":{"crate_id":{"name":"dynasmrt","disambiguator":[13629485282647932958,0]},"crate_root":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src","external_crates":[{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8736441298905945133,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14793976659495462539,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3402831840469434398,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10266006331935790141,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3256146445313423250,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[17904618012795691138,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9322387616446168443,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3101585505833515335,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[9998121223216013160,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[13604153592636442655,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[4682215639508348019,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[681692869457277629,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[14282542057858629160,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[14550073586256240635,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[6281633846692226065,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[17361906875064838028,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[16875744454975590306,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/mmap.rs","num":18,"id":{"name":"memmap2","disambiguator":[13736792424225236038,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/mmap.rs","num":19,"id":{"name":"libc","disambiguator":[17841803516193661880,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","num":20,"id":{"name":"byteorder","disambiguator":[10818770624850102269,0]}},{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","num":21,"id":{"name":"dynasm","disambiguator":[10688266757467747273,0]}}],"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":0,"byte_end":40082,"line_start":1,"line_end":1070,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1024},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":77161,"byte_end":77163,"line_start":107,"line_end":107,"column_start":22,"column_end":24},"alias_span":null,"name":"Rh","value":"","parent":{"krate":0,"index":225}},{"kind":"Use","ref_id":{"krate":0,"index":1055},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":77165,"byte_end":77167,"line_start":107,"line_end":107,"column_start":26,"column_end":28},"alias_span":null,"name":"Rf","value":"","parent":{"krate":0,"index":225}},{"kind":"Use","ref_id":{"krate":0,"index":1098},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":77169,"byte_end":77171,"line_start":107,"line_end":107,"column_start":30,"column_end":32},"alias_span":null,"name":"Rm","value":"","parent":{"krate":0,"index":225}},{"kind":"Use","ref_id":{"krate":0,"index":1184},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":77173,"byte_end":77175,"line_start":107,"line_end":107,"column_start":34,"column_end":36},"alias_span":null,"name":"Rs","value":"","parent":{"krate":0,"index":225}},{"kind":"Use","ref_id":{"krate":0,"index":1264},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":77177,"byte_end":77179,"line_start":107,"line_end":107,"column_start":38,"column_end":40},"alias_span":null,"name":"RD","value":"","parent":{"krate":0,"index":225}},{"kind":"Use","ref_id":{"krate":0,"index":1331},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":77181,"byte_end":77183,"line_start":107,"line_end":107,"column_start":42,"column_end":44},"alias_span":null,"name":"RB","value":"","parent":{"krate":0,"index":225}},{"kind":"Use","ref_id":{"krate":0,"index":607},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":853,"byte_end":869,"line_start":32,"line_end":32,"column_start":22,"column_end":38},"alias_span":null,"name":"ExecutableBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":18930},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":888,"byte_end":894,"line_start":33,"line_end":33,"column_start":18,"column_end":24},"alias_span":null,"name":"dynasm","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":18932},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":896,"byte_end":912,"line_start":33,"line_end":33,"column_start":26,"column_end":42},"alias_span":null,"name":"dynasm_backwards","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":0,"byte_end":40082,"line_start":1,"line_end":1070,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":48},{"krate":0,"index":188},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":278},{"krate":0,"index":309},{"krate":0,"index":360},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":367},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":374},{"krate":0,"index":377},{"krate":0,"index":380},{"krate":0,"index":383},{"krate":0,"index":386},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":392},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":399},{"krate":0,"index":402},{"krate":0,"index":405},{"krate":0,"index":408},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":418},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":1725},{"krate":0,"index":1728},{"krate":0,"index":1730},{"krate":0,"index":1732},{"krate":0,"index":1733},{"krate":0,"index":1734},{"krate":0,"index":1737},{"krate":0,"index":1738},{"krate":0,"index":1740},{"krate":0,"index":1742},{"krate":0,"index":1744},{"krate":0,"index":1747},{"krate":0,"index":1750},{"krate":0,"index":1752},{"krate":0,"index":1754},{"krate":0,"index":1755},{"krate":0,"index":1756},{"krate":0,"index":1759},{"krate":0,"index":1760},{"krate":0,"index":1762},{"krate":0,"index":423},{"krate":0,"index":1765},{"krate":0,"index":1767},{"krate":0,"index":1769},{"krate":0,"index":425},{"krate":0,"index":1771},{"krate":0,"index":1781},{"krate":0,"index":1783},{"krate":0,"index":1785},{"krate":0,"index":1786},{"krate":0,"index":1787},{"krate":0,"index":1790},{"krate":0,"index":1791},{"krate":0,"index":1793},{"krate":0,"index":427},{"krate":0,"index":1796},{"krate":0,"index":1814},{"krate":0,"index":1816},{"krate":0,"index":1818},{"krate":0,"index":1819},{"krate":0,"index":1820},{"krate":0,"index":1823},{"krate":0,"index":1824},{"krate":0,"index":1826},{"krate":0,"index":429},{"krate":0,"index":1829},{"krate":0,"index":1841},{"krate":0,"index":1843},{"krate":0,"index":1845},{"krate":0,"index":1846},{"krate":0,"index":1849},{"krate":0,"index":1850},{"krate":0,"index":431},{"krate":0,"index":433},{"krate":0,"index":435},{"krate":0,"index":448},{"krate":0,"index":1852},{"krate":0,"index":1854},{"krate":0,"index":1856},{"krate":0,"index":463},{"krate":0,"index":467},{"krate":0,"index":470},{"krate":0,"index":474},{"krate":0,"index":1858},{"krate":0,"index":1865},{"krate":0,"index":478},{"krate":0,"index":484},{"krate":0,"index":488},{"krate":0,"index":493},{"krate":0,"index":498},{"krate":0,"index":1868},{"krate":0,"index":1876},{"krate":0,"index":509},{"krate":0,"index":524},{"krate":0,"index":528},{"krate":0,"index":533},{"krate":0,"index":538},{"krate":0,"index":1879},{"krate":0,"index":1890},{"krate":0,"index":549},{"krate":0,"index":556},{"krate":0,"index":561},{"krate":0,"index":567},{"krate":0,"index":573},{"krate":0,"index":1894},{"krate":0,"index":1899},{"krate":0,"index":585},{"krate":0,"index":591},{"krate":0,"index":596},{"krate":0,"index":600},{"krate":0,"index":605}],"decl_id":null,"docs":" This crate provides runtime support for dynasm-rs. It contains traits that document the interface used by the dynasm proc_macro to generate code,\n Assemblers that implement these traits, and relocation models for the various supported architectures. Additionally, it also provides the tools\n to write your own Assemblers using these components.\n","sig":null,"attributes":[{"value":"warn(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":0,"byte_end":22,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"/ This crate provides runtime support for dynasm-rs. It contains traits that document the interface used by the dynasm proc_macro to generate code,","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":24,"byte_end":173,"line_start":3,"line_end":3,"column_start":1,"column_end":150}},{"value":"/ Assemblers that implement these traits, and relocation models for the various supported architectures. Additionally, it also provides the tools","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":174,"byte_end":321,"line_start":4,"line_end":4,"column_start":1,"column_end":148}},{"value":"/ to write your own Assemblers using these components.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":322,"byte_end":378,"line_start":5,"line_end":5,"column_start":1,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/mmap.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mmap","qualname":"::mmap","value":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/mmap.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":607},{"krate":0,"index":610},{"krate":0,"index":612},{"krate":0,"index":615},{"krate":0,"index":24},{"krate":0,"index":30},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":46}],"decl_id":null,"docs":" This module implements some wrappers around Mmap/MmapMut to also support a cheap \"empty\" variant.\n","sig":null,"attributes":[{"value":"/ This module implements some wrappers around Mmap/MmapMut to also support a cheap \"empty\" variant.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/mmap.rs","byte_start":40084,"byte_end":40185,"line_start":1,"line_end":1,"column_start":1,"column_end":102}}]},{"kind":"Struct","id":{"krate":0,"index":607},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/mmap.rs","byte_start":40537,"byte_end":40553,"line_start":14,"line_end":14,"column_start":12,"column_end":28},"name":"ExecutableBuffer","qualname":"::mmap::ExecutableBuffer","value":"ExecutableBuffer {  }","parent":null,"children":[{"krate":0,"index":608},{"krate":0,"index":609}],"decl_id":null,"docs":" A structure holding a buffer of executable memory. It also derefs to a `&[u8]`.\n This structure does not allocate when its size is 0.\n","sig":null,"attributes":[{"value":"/ A structure holding a buffer of executable memory. It also derefs to a `&[u8]`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/mmap.rs","byte_start":40368,"byte_end":40451,"line_start":11,"line_end":11,"column_start":1,"column_end":84}},{"value":"/ This structure does not allocate when its size is 0.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/mmap.rs","byte_start":40452,"byte_end":40508,"line_start":12,"line_end":12,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":612},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/mmap.rs","byte_start":40905,"byte_end":40918,"line_start":24,"line_end":24,"column_start":12,"column_end":25},"name":"MutableBuffer","qualname":"::mmap::MutableBuffer","value":"MutableBuffer {  }","parent":null,"children":[{"krate":0,"index":613},{"krate":0,"index":614}],"decl_id":null,"docs":" ExecutableBuffer equivalent that holds a buffer of mutable memory instead of executable memory. It also derefs to a `&mut [u8]`.\n This structure does not allocate when its size is 0.\n","sig":null,"attributes":[{"value":"/ ExecutableBuffer equivalent that holds a buffer of mutable memory instead of executable memory. It also derefs to a `&mut [u8]`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/mmap.rs","byte_start":40687,"byte_end":40819,"line_start":21,"line_end":21,"column_start":1,"column_end":133}},{"value":"/ This structure does not allocate when its size is 0.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/mmap.rs","byte_start":40820,"byte_end":40876,"line_start":22,"line_end":22,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/mmap.rs","byte_start":41711,"byte_end":41714,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"ptr","qualname":"<ExecutableBuffer>::ptr","value":"pub fn ptr(&Self, AssemblyOffset) -> *const u8","parent":null,"children":[],"decl_id":null,"docs":" Obtain a pointer into the executable memory from an offset into it.\n When an offset returned from `DynasmLabelApi::offset` is used, the resulting pointer\n will point to the start of the first instruction after the offset call,\n which can then be jumped or called to divert control flow into the executable\n buffer. Note that if this buffer is accessed through an Executor, these pointers\n will only be valid as long as its lock is held. When no locks are held,\n The assembler is free to relocate the executable buffer when it requires\n more memory than available.\n","sig":null,"attributes":[{"value":"/ Obtain a pointer into the executable memory from an offset into it.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/mmap.rs","byte_start":41083,"byte_end":41154,"line_start":32,"line_end":32,"column_start":5,"column_end":76}},{"value":"/ When an offset returned from `DynasmLabelApi::offset` is used, the resulting pointer","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/mmap.rs","byte_start":41159,"byte_end":41247,"line_start":33,"line_end":33,"column_start":5,"column_end":93}},{"value":"/ will point to the start of the first instruction after the offset call,","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/mmap.rs","byte_start":41252,"byte_end":41327,"line_start":34,"line_end":34,"column_start":5,"column_end":80}},{"value":"/ which can then be jumped or called to divert control flow into the executable","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/mmap.rs","byte_start":41332,"byte_end":41413,"line_start":35,"line_end":35,"column_start":5,"column_end":86}},{"value":"/ buffer. Note that if this buffer is accessed through an Executor, these pointers","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/mmap.rs","byte_start":41418,"byte_end":41502,"line_start":36,"line_end":36,"column_start":5,"column_end":89}},{"value":"/ will only be valid as long as its lock is held. When no locks are held,","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/mmap.rs","byte_start":41507,"byte_end":41582,"line_start":37,"line_end":37,"column_start":5,"column_end":80}},{"value":"/ The assembler is free to relocate the executable buffer when it requires","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/mmap.rs","byte_start":41587,"byte_end":41663,"line_start":38,"line_end":38,"column_start":5,"column_end":81}},{"value":"/ more memory than available.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/mmap.rs","byte_start":41668,"byte_end":41699,"line_start":39,"line_end":39,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/mmap.rs","byte_start":41946,"byte_end":41949,"line_start":46,"line_end":46,"column_start":12,"column_end":15},"name":"new","qualname":"<ExecutableBuffer>::new","value":"pub fn new(usize) -> io::Result<ExecutableBuffer>","parent":null,"children":[],"decl_id":null,"docs":" Create a new executable buffer, backed by a buffer of size `size`.\n It will start with an initialized length of 0.\n","sig":null,"attributes":[{"value":"/ Create a new executable buffer, backed by a buffer of size `size`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/mmap.rs","byte_start":41809,"byte_end":41879,"line_start":44,"line_end":44,"column_start":5,"column_end":75}},{"value":"/ It will start with an initialized length of 0.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/mmap.rs","byte_start":41884,"byte_end":41934,"line_start":45,"line_end":45,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/mmap.rs","byte_start":42293,"byte_end":42297,"line_start":60,"line_end":60,"column_start":12,"column_end":16},"name":"size","qualname":"<ExecutableBuffer>::size","value":"pub fn size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Query the backing size of this executable buffer\n","sig":null,"attributes":[{"value":"/ Query the backing size of this executable buffer","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/mmap.rs","byte_start":42229,"byte_end":42281,"line_start":59,"line_end":59,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/mmap.rs","byte_start":42463,"byte_end":42471,"line_start":65,"line_end":65,"column_start":12,"column_end":20},"name":"make_mut","qualname":"<ExecutableBuffer>::make_mut","value":"pub fn make_mut(Self) -> io::Result<MutableBuffer>","parent":null,"children":[],"decl_id":null,"docs":" Change this executable buffer into a mutable buffer.\n","sig":null,"attributes":[{"value":"/ Change this executable buffer into a mutable buffer.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/mmap.rs","byte_start":42395,"byte_end":42451,"line_start":64,"line_end":64,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/mmap.rs","byte_start":42901,"byte_end":42904,"line_start":82,"line_end":82,"column_start":12,"column_end":15},"name":"new","qualname":"<MutableBuffer>::new","value":"pub fn new(usize) -> io::Result<MutableBuffer>","parent":null,"children":[],"decl_id":null,"docs":" Create a new mutable buffer, backed by a buffer of size `size`.\n It will start with an initialized length of 0.\n","sig":null,"attributes":[{"value":"/ Create a new mutable buffer, backed by a buffer of size `size`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/mmap.rs","byte_start":42767,"byte_end":42834,"line_start":80,"line_end":80,"column_start":5,"column_end":72}},{"value":"/ It will start with an initialized length of 0.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/mmap.rs","byte_start":42839,"byte_end":42889,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/mmap.rs","byte_start":43226,"byte_end":43230,"line_start":96,"line_end":96,"column_start":12,"column_end":16},"name":"size","qualname":"<MutableBuffer>::size","value":"pub fn size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Query the backing size of this mutable buffer\n","sig":null,"attributes":[{"value":"/ Query the backing size of this mutable buffer","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/mmap.rs","byte_start":43165,"byte_end":43214,"line_start":95,"line_end":95,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/mmap.rs","byte_start":43499,"byte_end":43506,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"set_len","qualname":"<MutableBuffer>::set_len","value":"pub fn set_len(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Set the length of the usable part of this mutable buffer. The length\n should not be set larger than the allocated size, otherwise methods can panic.\n","sig":null,"attributes":[{"value":"/ Set the length of the usable part of this mutable buffer. The length","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/mmap.rs","byte_start":43328,"byte_end":43400,"line_start":100,"line_end":100,"column_start":5,"column_end":77}},{"value":"/ should not be set larger than the allocated size, otherwise methods can panic.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/mmap.rs","byte_start":43405,"byte_end":43487,"line_start":101,"line_end":101,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/mmap.rs","byte_start":43644,"byte_end":43653,"line_start":107,"line_end":107,"column_start":12,"column_end":21},"name":"make_exec","qualname":"<MutableBuffer>::make_exec","value":"pub fn make_exec(Self) -> io::Result<ExecutableBuffer>","parent":null,"children":[],"decl_id":null,"docs":" Change this mutable buffer into an executable buffer.\n","sig":null,"attributes":[{"value":"/ Change this mutable buffer into an executable buffer.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/mmap.rs","byte_start":43575,"byte_end":43632,"line_start":106,"line_end":106,"column_start":5,"column_end":62}}]},{"kind":"Mod","id":{"krate":0,"index":48},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"components","qualname":"::components","value":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","parent":null,"children":[{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":66},{"krate":0,"index":69},{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":95},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":617},{"krate":0,"index":622},{"krate":0,"index":111},{"krate":0,"index":624},{"krate":0,"index":628},{"krate":0,"index":630},{"krate":0,"index":632},{"krate":0,"index":120},{"krate":0,"index":634},{"krate":0,"index":641},{"krate":0,"index":644},{"krate":0,"index":133},{"krate":0,"index":647},{"krate":0,"index":652},{"krate":0,"index":655},{"krate":0,"index":141},{"krate":0,"index":658},{"krate":0,"index":661},{"krate":0,"index":664},{"krate":0,"index":162},{"krate":0,"index":667},{"krate":0,"index":700},{"krate":0,"index":702},{"krate":0,"index":704},{"krate":0,"index":707},{"krate":0,"index":709},{"krate":0,"index":711},{"krate":0,"index":172}],"decl_id":null,"docs":" This module provides several reusable compoments for implementing assemblers\n","sig":null,"attributes":[{"value":"/ This module provides several reusable compoments for implementing assemblers","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":44902,"byte_end":44982,"line_start":1,"line_end":1,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":617},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":45466,"byte_end":45479,"line_start":16,"line_end":16,"column_start":12,"column_end":25},"name":"MemoryManager","qualname":"::components::MemoryManager","value":"MemoryManager {  }","parent":null,"children":[{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621}],"decl_id":null,"docs":" This struct implements a protection-swapping assembling buffer\n","sig":null,"attributes":[{"value":"/ This struct implements a protection-swapping assembling buffer","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":45371,"byte_end":45437,"line_start":14,"line_end":14,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":45974,"byte_end":45977,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"new","qualname":"<MemoryManager>::new","value":"pub fn new(usize) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new memory manager, with `initial_mmap_size` data allocated\n","sig":null,"attributes":[{"value":"/ Create a new memory manager, with `initial_mmap_size` data allocated","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":45890,"byte_end":45962,"line_start":30,"line_end":30,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":46441,"byte_end":46450,"line_start":44,"line_end":44,"column_start":12,"column_end":21},"name":"committed","qualname":"<MemoryManager>::committed","value":"pub fn committed(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of bytes already committed to the manager\n","sig":null,"attributes":[{"value":"/ Returns the amount of bytes already committed to the manager","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":46365,"byte_end":46429,"line_start":43,"line_end":43,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":46585,"byte_end":46600,"line_start":49,"line_end":49,"column_start":12,"column_end":27},"name":"execbuffer_addr","qualname":"<MemoryManager>::execbuffer_addr","value":"pub fn execbuffer_addr(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current start address of the managed executable memory\n","sig":null,"attributes":[{"value":"/ Returns the current start address of the managed executable memory","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":46503,"byte_end":46573,"line_start":48,"line_end":48,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":46829,"byte_end":46835,"line_start":55,"line_end":55,"column_start":12,"column_end":18},"name":"commit","qualname":"<MemoryManager>::commit","value":"pub fn commit<F>(&mut Self, &mut Vec<u8>, F) where\nF: FnOnce(&mut [u8], usize, usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Commits the data from `new` into the managed memory, calling `f` when the buffer is moved to fix anything\n that relies on the address of the buffer\n","sig":null,"attributes":[{"value":"/ Commits the data from `new` into the managed memory, calling `f` when the buffer is moved to fix anything","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":46659,"byte_end":46768,"line_start":53,"line_end":53,"column_start":5,"column_end":114}},{"value":"/ that relies on the address of the buffer","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":46773,"byte_end":46817,"line_start":54,"line_end":54,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":48860,"byte_end":48865,"line_start":106,"line_end":106,"column_start":12,"column_end":17},"name":"write","qualname":"<MemoryManager>::write","value":"pub fn write(&Self) -> RwLockWriteGuard<, ExecutableBuffer>","parent":null,"children":[],"decl_id":null,"docs":" Borrow the internal memory buffer mutably\n","sig":null,"attributes":[{"value":"/ Borrow the internal memory buffer mutably","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":48803,"byte_end":48848,"line_start":105,"line_end":105,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":49034,"byte_end":49042,"line_start":111,"line_end":111,"column_start":12,"column_end":20},"name":"finalize","qualname":"<MemoryManager>::finalize","value":"pub fn finalize(Self) -> Result<ExecutableBuffer, Self>","parent":null,"children":[],"decl_id":null,"docs":" finalizes the currently committed part of the buffer.\n","sig":null,"attributes":[{"value":"/ finalizes the currently committed part of the buffer.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":48965,"byte_end":49022,"line_start":110,"line_end":110,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":49420,"byte_end":49426,"line_start":122,"line_end":122,"column_start":12,"column_end":18},"name":"reader","qualname":"<MemoryManager>::reader","value":"pub fn reader(&Self) -> Arc<RwLock<ExecutableBuffer>>","parent":null,"children":[],"decl_id":null,"docs":" Create an atomically refcounted reference to the internal executable buffer\n","sig":null,"attributes":[{"value":"/ Create an atomically refcounted reference to the internal executable buffer","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":49329,"byte_end":49408,"line_start":121,"line_end":121,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":624},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":49773,"byte_end":49786,"line_start":132,"line_end":132,"column_start":12,"column_end":25},"name":"LabelRegistry","qualname":"::components::LabelRegistry","value":"LabelRegistry {  }","parent":null,"children":[{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627}],"decl_id":null,"docs":" A registry of labels. Contains all necessessities for keeping track of dynasm labels.\n This is useful when implementing your own assembler and can also be used to query\n assemblers for the offsets of labels.\n","sig":null,"attributes":[{"value":"/ A registry of labels. Contains all necessessities for keeping track of dynasm labels.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":49511,"byte_end":49600,"line_start":128,"line_end":128,"column_start":1,"column_end":90}},{"value":"/ This is useful when implementing your own assembler and can also be used to query","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":49601,"byte_end":49686,"line_start":129,"line_end":129,"column_start":1,"column_end":86}},{"value":"/ assemblers for the offsets of labels.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":49687,"byte_end":49728,"line_start":130,"line_end":130,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":50163,"byte_end":50166,"line_start":143,"line_end":143,"column_start":12,"column_end":15},"name":"new","qualname":"<LabelRegistry>::new","value":"pub fn new() -> LabelRegistry","parent":null,"children":[],"decl_id":null,"docs":" Create a new, empty label registry\n","sig":null,"attributes":[{"value":"/ Create a new, empty label registry","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":50113,"byte_end":50151,"line_start":142,"line_end":142,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":50403,"byte_end":50420,"line_start":152,"line_end":152,"column_start":12,"column_end":29},"name":"new_dynamic_label","qualname":"<LabelRegistry>::new_dynamic_label","value":"pub fn new_dynamic_label(&mut Self) -> DynamicLabel","parent":null,"children":[],"decl_id":null,"docs":" Create a new dynamic label id\n","sig":null,"attributes":[{"value":"/ Create a new dynamic label id","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":50358,"byte_end":50391,"line_start":151,"line_end":151,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":50644,"byte_end":50658,"line_start":159,"line_end":159,"column_start":12,"column_end":26},"name":"define_dynamic","qualname":"<LabelRegistry>::define_dynamic","value":"pub fn define_dynamic(&mut Self, DynamicLabel, AssemblyOffset)\n-> Result<(), DynasmError>","parent":null,"children":[],"decl_id":null,"docs":" Define a the dynamic label `id` to be located at `offset`.\n","sig":null,"attributes":[{"value":"/ Define a the dynamic label `id` to be located at `offset`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":50570,"byte_end":50632,"line_start":158,"line_end":158,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":51042,"byte_end":51055,"line_start":170,"line_end":170,"column_start":12,"column_end":25},"name":"define_global","qualname":"<LabelRegistry>::define_global","value":"pub fn define_global(&mut Self, &'static str, AssemblyOffset)\n-> Result<(), DynasmError>","parent":null,"children":[],"decl_id":null,"docs":" Define a the global label `name` to be located at `offset`.\n","sig":null,"attributes":[{"value":"/ Define a the global label `name` to be located at `offset`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":50967,"byte_end":51030,"line_start":169,"line_end":169,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":51480,"byte_end":51492,"line_start":181,"line_end":181,"column_start":12,"column_end":24},"name":"define_local","qualname":"<LabelRegistry>::define_local","value":"pub fn define_local(&mut Self, &'static str, AssemblyOffset)","parent":null,"children":[],"decl_id":null,"docs":" Define a the local label `name` to be located at `offset`.\n","sig":null,"attributes":[{"value":"/ Define a the local label `name` to be located at `offset`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":51406,"byte_end":51468,"line_start":180,"line_end":180,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":51708,"byte_end":51723,"line_start":186,"line_end":186,"column_start":12,"column_end":27},"name":"resolve_dynamic","qualname":"<LabelRegistry>::resolve_dynamic","value":"pub fn resolve_dynamic(&Self, DynamicLabel)\n-> Result<AssemblyOffset, DynasmError>","parent":null,"children":[],"decl_id":null,"docs":" Returns the offset at which the dynamic label `id` was defined, if one was defined.\n","sig":null,"attributes":[{"value":"/ Returns the offset at which the dynamic label `id` was defined, if one was defined.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":51609,"byte_end":51696,"line_start":185,"line_end":185,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":52021,"byte_end":52035,"line_start":191,"line_end":191,"column_start":12,"column_end":26},"name":"resolve_global","qualname":"<LabelRegistry>::resolve_global","value":"pub fn resolve_global(&Self, &'static str)\n-> Result<AssemblyOffset, DynasmError>","parent":null,"children":[],"decl_id":null,"docs":" Returns the offset at which the global label `name` was defined, if one was defined.\n","sig":null,"attributes":[{"value":"/ Returns the offset at which the global label `name` was defined, if one was defined.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":51921,"byte_end":52009,"line_start":190,"line_end":190,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":52336,"byte_end":52349,"line_start":196,"line_end":196,"column_start":12,"column_end":25},"name":"resolve_local","qualname":"<LabelRegistry>::resolve_local","value":"pub fn resolve_local(&Self, &'static str)\n-> Result<AssemblyOffset, DynasmError>","parent":null,"children":[],"decl_id":null,"docs":" Returns the offset at which the last local label named `id` was defined, if one was defined.\n","sig":null,"attributes":[{"value":"/ Returns the offset at which the last local label named `id` was defined, if one was defined.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":52228,"byte_end":52324,"line_start":195,"line_end":195,"column_start":5,"column_end":101}}]},{"kind":"Struct","id":{"krate":0,"index":634},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":52645,"byte_end":52653,"line_start":204,"line_end":204,"column_start":12,"column_end":20},"name":"PatchLoc","qualname":"::components::PatchLoc","value":"PatchLoc { location, field_offset, ref_offset, relocation, target_offset }","parent":null,"children":[{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640}],"decl_id":null,"docs":" An abstraction of a relocation of type `R`, located at `location`.\n","sig":null,"attributes":[{"value":"/ An abstraction of a relocation of type `R`, located at `location`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":52539,"byte_end":52609,"line_start":202,"line_end":202,"column_start":1,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":636},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":52743,"byte_end":52751,"line_start":206,"line_end":206,"column_start":9,"column_end":17},"name":"location","qualname":"::components::PatchLoc::location","value":"AssemblyOffset","parent":{"krate":0,"index":634},"children":[],"decl_id":null,"docs":" The AssemblyOffset at which this relocation was emitted\n","sig":null,"attributes":[{"value":"/ The AssemblyOffset at which this relocation was emitted","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":52675,"byte_end":52734,"line_start":205,"line_end":205,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":637},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":52869,"byte_end":52881,"line_start":208,"line_end":208,"column_start":9,"column_end":21},"name":"field_offset","qualname":"::components::PatchLoc::field_offset","value":"u8","parent":{"krate":0,"index":634},"children":[],"decl_id":null,"docs":" The offset, backwards, from location that the actual field to be modified starts at\n","sig":null,"attributes":[{"value":"/ The offset, backwards, from location that the actual field to be modified starts at","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":52773,"byte_end":52860,"line_start":207,"line_end":207,"column_start":5,"column_end":92}}]},{"kind":"Field","id":{"krate":0,"index":638},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":53030,"byte_end":53040,"line_start":210,"line_end":210,"column_start":9,"column_end":19},"name":"ref_offset","qualname":"::components::PatchLoc::ref_offset","value":"u8","parent":{"krate":0,"index":634},"children":[],"decl_id":null,"docs":" The offset, backwards, to be subtracted from location to get the address that the relocation should be calculated relative to.\n","sig":null,"attributes":[{"value":"/ The offset, backwards, to be subtracted from location to get the address that the relocation should be calculated relative to.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":52891,"byte_end":53021,"line_start":209,"line_end":209,"column_start":5,"column_end":135}}]},{"kind":"Field","id":{"krate":0,"index":639},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":53100,"byte_end":53110,"line_start":212,"line_end":212,"column_start":9,"column_end":19},"name":"relocation","qualname":"::components::PatchLoc::relocation","value":"R","parent":{"krate":0,"index":634},"children":[],"decl_id":null,"docs":" The type of relocation to be emitted.\n","sig":null,"attributes":[{"value":"/ The type of relocation to be emitted.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":53050,"byte_end":53091,"line_start":211,"line_end":211,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":640},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":53224,"byte_end":53237,"line_start":214,"line_end":214,"column_start":9,"column_end":22},"name":"target_offset","qualname":"::components::PatchLoc::target_offset","value":"isize","parent":{"krate":0,"index":634},"children":[],"decl_id":null,"docs":" A constant offset added to the destination address of this relocation when it is calculated.\n","sig":null,"attributes":[{"value":"/ A constant offset added to the destination address of this relocation when it is calculated.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":53119,"byte_end":53215,"line_start":213,"line_end":213,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":53326,"byte_end":53329,"line_start":219,"line_end":219,"column_start":12,"column_end":15},"name":"new","qualname":"<PatchLoc<R>>::new","value":"pub fn new(AssemblyOffset, isize, u8, u8, R) -> PatchLoc<R>","parent":null,"children":[],"decl_id":null,"docs":" create a new `PatchLoc`\n","sig":null,"attributes":[{"value":"/ create a new `PatchLoc`","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":53287,"byte_end":53314,"line_start":218,"line_end":218,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":53856,"byte_end":53861,"line_start":232,"line_end":232,"column_start":12,"column_end":17},"name":"range","qualname":"<PatchLoc<R>>::range","value":"pub fn range(&Self, usize) -> std::ops::Range<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns a range that covers the entire relocation in its assembling buffer\n `buf_offset` is a value that is subtracted from this range when the buffer you want to slice\n with this range is only a part of a bigger buffer.\n","sig":null,"attributes":[{"value":"/ Returns a range that covers the entire relocation in its assembling buffer","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":53606,"byte_end":53684,"line_start":229,"line_end":229,"column_start":5,"column_end":83}},{"value":"/ `buf_offset` is a value that is subtracted from this range when the buffer you want to slice","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":53689,"byte_end":53785,"line_start":230,"line_end":230,"column_start":5,"column_end":101}},{"value":"/ with this range is only a part of a bigger buffer.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":53790,"byte_end":53844,"line_start":231,"line_end":231,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":54164,"byte_end":54169,"line_start":238,"line_end":238,"column_start":12,"column_end":17},"name":"value","qualname":"<PatchLoc<R>>::value","value":"pub fn value(&Self, usize, usize) -> isize","parent":null,"children":[],"decl_id":null,"docs":" Returns the actual value that should be inserted at the relocation site.\n","sig":null,"attributes":[{"value":"/ Returns the actual value that should be inserted at the relocation site.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":54076,"byte_end":54152,"line_start":237,"line_end":237,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":54853,"byte_end":54858,"line_start":249,"line_end":249,"column_start":12,"column_end":17},"name":"patch","qualname":"<PatchLoc<R>>::patch","value":"pub fn patch(&Self, &mut [u8], usize, usize)\n-> Result<(), ImpossibleRelocation>","parent":null,"children":[],"decl_id":null,"docs":" Patch `buffer` so that this relocation patch will point to `target`.\n `buf_addr` is the address that the assembling buffer will come to reside at when it is assembled.\n `target` is the offset that this relocation will be targetting.\n","sig":null,"attributes":[{"value":"/ Patch `buffer` so that this relocation patch will point to `target`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":54591,"byte_end":54663,"line_start":246,"line_end":246,"column_start":5,"column_end":77}},{"value":"/ `buf_addr` is the address that the assembling buffer will come to reside at when it is assembled.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":54668,"byte_end":54769,"line_start":247,"line_end":247,"column_start":5,"column_end":106}},{"value":"/ `target` is the offset that this relocation will be targetting.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":54774,"byte_end":54841,"line_start":248,"line_end":248,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":55379,"byte_end":55385,"line_start":257,"line_end":257,"column_start":12,"column_end":18},"name":"adjust","qualname":"<PatchLoc<R>>::adjust","value":"pub fn adjust(&Self, &mut [u8], isize) -> Result<(), ImpossibleRelocation>","parent":null,"children":[],"decl_id":null,"docs":" Patch `buffer` so that this relocation will still point to the right location due to a change in the address of the containing buffer.\n `buffer` is a subsection of a larger buffer, located at offset `buf_offset` in this larger buffer.\n `adjustment` is `new_buf_addr - old_buf_addr`.\n","sig":null,"attributes":[{"value":"/ Patch `buffer` so that this relocation will still point to the right location due to a change in the address of the containing buffer.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":55067,"byte_end":55205,"line_start":254,"line_end":254,"column_start":5,"column_end":143}},{"value":"/ `buffer` is a subsection of a larger buffer, located at offset `buf_offset` in this larger buffer.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":55210,"byte_end":55312,"line_start":255,"line_end":255,"column_start":5,"column_end":107}},{"value":"/ `adjustment` is `new_buf_addr - old_buf_addr`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":55317,"byte_end":55367,"line_start":256,"line_end":256,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":55954,"byte_end":55970,"line_start":268,"line_end":268,"column_start":12,"column_end":28},"name":"needs_adjustment","qualname":"<PatchLoc<R>>::needs_adjustment","value":"pub fn needs_adjustment(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if this patch requires adjustment when the address of the buffer it resides in is altered.\n","sig":null,"attributes":[{"value":"/ Returns if this patch requires adjustment when the address of the buffer it resides in is altered.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":55840,"byte_end":55942,"line_start":267,"line_end":267,"column_start":5,"column_end":107}}]},{"kind":"Struct","id":{"krate":0,"index":647},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":56292,"byte_end":56305,"line_start":280,"line_end":280,"column_start":12,"column_end":25},"name":"RelocRegistry","qualname":"::components::RelocRegistry","value":"RelocRegistry {  }","parent":null,"children":[{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":651}],"decl_id":null,"docs":" A registry of relocations and the respective labels they point towards.\n","sig":null,"attributes":[{"value":"/ A registry of relocations and the respective labels they point towards.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":56179,"byte_end":56254,"line_start":278,"line_end":278,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":56569,"byte_end":56572,"line_start":288,"line_end":288,"column_start":12,"column_end":15},"name":"new","qualname":"<RelocRegistry<R>>::new","value":"pub fn new() -> RelocRegistry<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, empty relocation registry.\n","sig":null,"attributes":[{"value":"/ Create a new, empty relocation registry.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":56513,"byte_end":56557,"line_start":287,"line_end":287,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":56808,"byte_end":56818,"line_start":297,"line_end":297,"column_start":12,"column_end":22},"name":"add_global","qualname":"<RelocRegistry<R>>::add_global","value":"pub fn add_global(&mut Self, &'static str, PatchLoc<R>)","parent":null,"children":[],"decl_id":null,"docs":" Add a new patch targetting the global label `name`.\n","sig":null,"attributes":[{"value":"/ Add a new patch targetting the global label `name`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":56741,"byte_end":56796,"line_start":296,"line_end":296,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":56996,"byte_end":57007,"line_start":302,"line_end":302,"column_start":12,"column_end":23},"name":"add_dynamic","qualname":"<RelocRegistry<R>>::add_dynamic","value":"pub fn add_dynamic(&mut Self, DynamicLabel, PatchLoc<R>)","parent":null,"children":[],"decl_id":null,"docs":" Add a new patch targetting the dynamic label `id`.\n","sig":null,"attributes":[{"value":"/ Add a new patch targetting the dynamic label `id`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":56930,"byte_end":56984,"line_start":301,"line_end":301,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":57304,"byte_end":57313,"line_start":308,"line_end":308,"column_start":12,"column_end":21},"name":"add_local","qualname":"<RelocRegistry<R>>::add_local","value":"pub fn add_local(&mut Self, &'static str, PatchLoc<R>)","parent":null,"children":[],"decl_id":null,"docs":" Add a new patch targetting the next local label `name`.\n As any relocation targetting a previous local label can be immediately resolved these should not be recorded.\n","sig":null,"attributes":[{"value":"/ Add a new patch targetting the next local label `name`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":57115,"byte_end":57174,"line_start":306,"line_end":306,"column_start":5,"column_end":64}},{"value":"/ As any relocation targetting a previous local label can be immediately resolved these should not be recorded.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":57179,"byte_end":57292,"line_start":307,"line_end":307,"column_start":5,"column_end":118}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":57740,"byte_end":57757,"line_start":319,"line_end":319,"column_start":12,"column_end":29},"name":"take_locals_named","qualname":"<RelocRegistry<R>>::take_locals_named","value":"pub fn take_locals_named<'a>(&'a mut Self, &'static str) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator through all defined relocations targetting local label `name`.\n These relocations are removed from the registry.\n","sig":null,"attributes":[{"value":"/ Return an iterator through all defined relocations targetting local label `name`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":57586,"byte_end":57671,"line_start":317,"line_end":317,"column_start":5,"column_end":90}},{"value":"/ These relocations are removed from the registry.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":57676,"byte_end":57728,"line_start":318,"line_end":318,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":58096,"byte_end":58108,"line_start":325,"line_end":325,"column_start":12,"column_end":24},"name":"take_globals","qualname":"<RelocRegistry<R>>::take_globals","value":"pub fn take_globals<'a>(&'a mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator through all defined relocations targeting global labels and the labels they target.\n These relocations are removed from the registry.\n","sig":null,"attributes":[{"value":"/ Return an iterator through all defined relocations targeting global labels and the labels they target.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":57921,"byte_end":58027,"line_start":323,"line_end":323,"column_start":5,"column_end":111}},{"value":"/ These relocations are removed from the registry.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":58032,"byte_end":58084,"line_start":324,"line_end":324,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":58402,"byte_end":58415,"line_start":331,"line_end":331,"column_start":12,"column_end":25},"name":"take_dynamics","qualname":"<RelocRegistry<R>>::take_dynamics","value":"pub fn take_dynamics<'a>(&'a mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator through all defined relocations targeting dynamic labels and the labels they target.\n These relocations are removed from the registry.\n","sig":null,"attributes":[{"value":"/ Return an iterator through all defined relocations targeting dynamic labels and the labels they target.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":58226,"byte_end":58333,"line_start":329,"line_end":329,"column_start":5,"column_end":112}},{"value":"/ These relocations are removed from the registry.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":58338,"byte_end":58390,"line_start":330,"line_end":330,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":58708,"byte_end":58719,"line_start":337,"line_end":337,"column_start":12,"column_end":23},"name":"take_locals","qualname":"<RelocRegistry<R>>::take_locals","value":"pub fn take_locals<'a>(&'a mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator through all defined relocations targeting local labels and the labels they target.\n These relocations are removed from the registry.\n","sig":null,"attributes":[{"value":"/ Return an iterator through all defined relocations targeting local labels and the labels they target.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":58534,"byte_end":58639,"line_start":335,"line_end":335,"column_start":5,"column_end":110}},{"value":"/ These relocations are removed from the registry.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":58644,"byte_end":58696,"line_start":336,"line_end":336,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":658},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":59074,"byte_end":59087,"line_start":346,"line_end":346,"column_start":12,"column_end":25},"name":"ManagedRelocs","qualname":"::components::ManagedRelocs","value":"ManagedRelocs {  }","parent":null,"children":[{"krate":0,"index":660}],"decl_id":null,"docs":" A registry of relocations that have been encoded previously, but need to be adjusted when the address of the buffer they\n reside in changes.\n","sig":null,"attributes":[{"value":"/ A registry of relocations that have been encoded previously, but need to be adjusted when the address of the buffer they","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":58889,"byte_end":59013,"line_start":343,"line_end":343,"column_start":1,"column_end":125}},{"value":"/ reside in changes.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":59014,"byte_end":59036,"line_start":344,"line_end":344,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":59257,"byte_end":59260,"line_start":352,"line_end":352,"column_start":12,"column_end":15},"name":"new","qualname":"<ManagedRelocs<R>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new, empty managed relocation registry.\n","sig":null,"attributes":[{"value":"/ Create a new, empty managed relocation registry.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":59193,"byte_end":59245,"line_start":351,"line_end":351,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":59396,"byte_end":59399,"line_start":359,"line_end":359,"column_start":12,"column_end":15},"name":"add","qualname":"<ManagedRelocs<R>>::add","value":"pub fn add(&mut Self, PatchLoc<R>)","parent":null,"children":[],"decl_id":null,"docs":" Add a relocation to this registry.\n","sig":null,"attributes":[{"value":"/ Add a relocation to this registry.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":59346,"byte_end":59384,"line_start":358,"line_end":358,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":59622,"byte_end":59628,"line_start":364,"line_end":364,"column_start":12,"column_end":18},"name":"append","qualname":"<ManagedRelocs<R>>::append","value":"pub fn append(&mut Self, &mut ManagedRelocs<R>)","parent":null,"children":[],"decl_id":null,"docs":" Take all items from another registry and add them to this registry\n","sig":null,"attributes":[{"value":"/ Take all items from another registry and add them to this registry","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":59540,"byte_end":59610,"line_start":363,"line_end":363,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":60087,"byte_end":60101,"line_start":372,"line_end":372,"column_start":12,"column_end":26},"name":"remove_between","qualname":"<ManagedRelocs<R>>::remove_between","value":"pub fn remove_between(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Remove all managed relocations whose byte fields start in the range start .. end.\n This is useful when implementing an `Assembler::alter` API, as any managed relocations\n that were overwritten should be removed from the registry, otherwise the replacement code\n would be corrupted when managed relocations are updated.\n","sig":null,"attributes":[{"value":"/ Remove all managed relocations whose byte fields start in the range start .. end.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":59732,"byte_end":59817,"line_start":368,"line_end":368,"column_start":5,"column_end":90}},{"value":"/ This is useful when implementing an `Assembler::alter` API, as any managed relocations","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":59822,"byte_end":59912,"line_start":369,"line_end":369,"column_start":5,"column_end":95}},{"value":"/ that were overwritten should be removed from the registry, otherwise the replacement code","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":59917,"byte_end":60010,"line_start":370,"line_end":370,"column_start":5,"column_end":98}},{"value":"/ would be corrupted when managed relocations are updated.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":60015,"byte_end":60075,"line_start":371,"line_end":371,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":60432,"byte_end":60436,"line_start":384,"line_end":384,"column_start":12,"column_end":16},"name":"iter","qualname":"<ManagedRelocs<R>>::iter","value":"pub fn iter<'a>(&'a Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Iterate through all defined managed relocations.\n","sig":null,"attributes":[{"value":"/ Iterate through all defined managed relocations.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":60368,"byte_end":60420,"line_start":383,"line_end":383,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":704},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":61234,"byte_end":61241,"line_start":407,"line_end":407,"column_start":12,"column_end":19},"name":"LitPool","qualname":"::components::LitPool","value":"LitPool {  }","parent":null,"children":[{"krate":0,"index":705},{"krate":0,"index":706}],"decl_id":null,"docs":" Literal pool implementation. One can programmatically push items in this literal pool and retrieve offsets to them in the pool.\n Then later, the pool will be encoded into the instruction stream and items can be retrieved using the address of the literal pool.\n and the previously emitted offsets. Values are always at least aligned to their size.\n","sig":null,"attributes":[{"value":"/ Literal pool implementation. One can programmatically push items in this literal pool and retrieve offsets to them in the pool.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":60833,"byte_end":60964,"line_start":403,"line_end":403,"column_start":1,"column_end":132}},{"value":"/ Then later, the pool will be encoded into the instruction stream and items can be retrieved using the address of the literal pool.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":60965,"byte_end":61099,"line_start":404,"line_end":404,"column_start":1,"column_end":135}},{"value":"/ and the previously emitted offsets. Values are always at least aligned to their size.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":61100,"byte_end":61189,"line_start":405,"line_end":405,"column_start":1,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":61365,"byte_end":61368,"line_start":414,"line_end":414,"column_start":12,"column_end":15},"name":"new","qualname":"<LitPool>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new, empty literal pool\n","sig":null,"attributes":[{"value":"/ Create a new, empty literal pool","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":61317,"byte_end":61353,"line_start":413,"line_end":413,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":61871,"byte_end":61876,"line_start":431,"line_end":431,"column_start":12,"column_end":17},"name":"align","qualname":"<LitPool>::align","value":"pub fn align(&mut Self, usize, u8)","parent":null,"children":[],"decl_id":null,"docs":" Add extra alignment for the next value in the literal pool\n","sig":null,"attributes":[{"value":"/ Add extra alignment for the next value in the literal pool","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":61797,"byte_end":61859,"line_start":430,"line_end":430,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":62198,"byte_end":62205,"line_start":442,"line_end":442,"column_start":12,"column_end":19},"name":"push_u8","qualname":"<LitPool>::push_u8","value":"pub fn push_u8(&mut Self, u8) -> isize","parent":null,"children":[],"decl_id":null,"docs":" Encode `value` into the literal pool.\n","sig":null,"attributes":[{"value":"/ Encode `value` into the literal pool.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":62145,"byte_end":62186,"line_start":441,"line_end":441,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":62431,"byte_end":62439,"line_start":449,"line_end":449,"column_start":12,"column_end":20},"name":"push_u16","qualname":"<LitPool>::push_u16","value":"pub fn push_u16(&mut Self, u16) -> isize","parent":null,"children":[],"decl_id":null,"docs":" Encode `value` into the literal pool.\n","sig":null,"attributes":[{"value":"/ Encode `value` into the literal pool.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":62378,"byte_end":62419,"line_start":448,"line_end":448,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":62667,"byte_end":62675,"line_start":456,"line_end":456,"column_start":12,"column_end":20},"name":"push_u32","qualname":"<LitPool>::push_u32","value":"pub fn push_u32(&mut Self, u32) -> isize","parent":null,"children":[],"decl_id":null,"docs":" Encode `value` into the literal pool.\n","sig":null,"attributes":[{"value":"/ Encode `value` into the literal pool.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":62614,"byte_end":62655,"line_start":455,"line_end":455,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":62904,"byte_end":62912,"line_start":463,"line_end":463,"column_start":12,"column_end":20},"name":"push_u64","qualname":"<LitPool>::push_u64","value":"pub fn push_u64(&mut Self, u64) -> isize","parent":null,"children":[],"decl_id":null,"docs":" Encode `value` into the literal pool.\n","sig":null,"attributes":[{"value":"/ Encode `value` into the literal pool.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":62851,"byte_end":62892,"line_start":462,"line_end":462,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":63203,"byte_end":63215,"line_start":470,"line_end":470,"column_start":12,"column_end":24},"name":"push_dynamic","qualname":"<LitPool>::push_dynamic","value":"pub fn push_dynamic(&mut Self, DynamicLabel, RelocationSize) -> isize","parent":null,"children":[],"decl_id":null,"docs":" Encode the relative address of a label into the literal pool (relative to the location in the pool)\n","sig":null,"attributes":[{"value":"/ Encode the relative address of a label into the literal pool (relative to the location in the pool)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":63088,"byte_end":63191,"line_start":469,"line_end":469,"column_start":5,"column_end":108}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":63524,"byte_end":63535,"line_start":477,"line_end":477,"column_start":12,"column_end":23},"name":"push_global","qualname":"<LitPool>::push_global","value":"pub fn push_global(&mut Self, &'static str, RelocationSize) -> isize","parent":null,"children":[],"decl_id":null,"docs":" Encode the relative address of a label into the literal pool (relative to the location in the pool)\n","sig":null,"attributes":[{"value":"/ Encode the relative address of a label into the literal pool (relative to the location in the pool)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":63409,"byte_end":63512,"line_start":476,"line_end":476,"column_start":5,"column_end":108}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":63847,"byte_end":63859,"line_start":484,"line_end":484,"column_start":12,"column_end":24},"name":"push_forward","qualname":"<LitPool>::push_forward","value":"pub fn push_forward(&mut Self, &'static str, RelocationSize) -> isize","parent":null,"children":[],"decl_id":null,"docs":" Encode the relative address of a label into the literal pool (relative to the location in the pool)\n","sig":null,"attributes":[{"value":"/ Encode the relative address of a label into the literal pool (relative to the location in the pool)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":63732,"byte_end":63835,"line_start":483,"line_end":483,"column_start":5,"column_end":108}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":64172,"byte_end":64185,"line_start":491,"line_end":491,"column_start":12,"column_end":25},"name":"push_backward","qualname":"<LitPool>::push_backward","value":"pub fn push_backward(&mut Self, &'static str, RelocationSize) -> isize","parent":null,"children":[],"decl_id":null,"docs":" Encode the relative address of a label into the literal pool (relative to the location in the pool)\n","sig":null,"attributes":[{"value":"/ Encode the relative address of a label into the literal pool (relative to the location in the pool)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":64057,"byte_end":64160,"line_start":490,"line_end":490,"column_start":5,"column_end":108}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":64802,"byte_end":64806,"line_start":507,"line_end":507,"column_start":12,"column_end":16},"name":"emit","qualname":"<LitPool>::emit","value":"pub fn emit<D: DynasmLabelApi>(Self, &mut D)","parent":null,"children":[],"decl_id":null,"docs":" Emit this literal pool into the specified assembler\n","sig":null,"attributes":[{"value":"/ Emit this literal pool into the specified assembler","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":64735,"byte_end":64790,"line_start":506,"line_end":506,"column_start":5,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":188},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"relocations","qualname":"::relocations","value":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","parent":null,"children":[{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":193},{"krate":0,"index":196},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":199},{"krate":0,"index":716},{"krate":0,"index":726},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":737},{"krate":0,"index":208},{"krate":0,"index":740},{"krate":0,"index":753},{"krate":0,"index":755},{"krate":0,"index":756},{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":764},{"krate":0,"index":210},{"krate":0,"index":223}],"decl_id":null,"docs":" This module defines the `Relocation` trait and several utilities for implementing relocations.\n","sig":null,"attributes":[{"value":"/ This module defines the `Relocation` trait and several utilities for implementing relocations.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":68352,"byte_end":68450,"line_start":1,"line_end":1,"column_start":1,"column_end":99}}]},{"kind":"Struct","id":{"krate":0,"index":713},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":68604,"byte_end":68624,"line_start":9,"line_end":9,"column_start":12,"column_end":32},"name":"ImpossibleRelocation","qualname":"::relocations::ImpossibleRelocation","value":"ImpossibleRelocation {  }","parent":null,"children":[],"decl_id":null,"docs":" Error returned when encoding a relocation failed\n","sig":null,"attributes":[{"value":"/ Error returned when encoding a relocation failed","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":68523,"byte_end":68575,"line_start":7,"line_end":7,"column_start":1,"column_end":53}}]},{"kind":"Trait","id":{"krate":0,"index":199},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":68857,"byte_end":68867,"line_start":15,"line_end":15,"column_start":11,"column_end":21},"name":"Relocation","qualname":"::relocations::Relocation","value":"Relocation","parent":null,"children":[{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207}],"decl_id":null,"docs":" Used to inform assemblers on how to implement relocations for each architecture.\n When implementing a new architecture, one simply has to implement this trait for\n the architecture's relocation definition.\n","sig":null,"attributes":[{"value":"/ Used to inform assemblers on how to implement relocations for each architecture.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":68631,"byte_end":68715,"line_start":12,"line_end":12,"column_start":1,"column_end":85}},{"value":"/ When implementing a new architecture, one simply has to implement this trait for","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":68716,"byte_end":68800,"line_start":13,"line_end":13,"column_start":1,"column_end":85}},{"value":"/ the architecture's relocation definition.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":68801,"byte_end":68846,"line_start":14,"line_end":14,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":200},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":68972,"byte_end":68980,"line_start":17,"line_end":17,"column_start":10,"column_end":18},"name":"Encoding","qualname":"::relocations::Relocation::Encoding","value":"type Encoding;","parent":{"krate":0,"index":199},"children":[],"decl_id":null,"docs":" The encoded representation for this relocation that is emitted by the dynasm! macro.\n","sig":null,"attributes":[{"value":"/ The encoded representation for this relocation that is emitted by the dynasm! macro.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":68874,"byte_end":68962,"line_start":16,"line_end":16,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":69055,"byte_end":69068,"line_start":19,"line_end":19,"column_start":8,"column_end":21},"name":"from_encoding","qualname":"::relocations::Relocation::from_encoding","value":"pub fn from_encoding(Self::Encoding) -> Self","parent":{"krate":0,"index":199},"children":[],"decl_id":null,"docs":" construct this relocation from an encoded representation.\n","sig":null,"attributes":[{"value":"/ construct this relocation from an encoded representation.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":68986,"byte_end":69047,"line_start":18,"line_end":18,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":69236,"byte_end":69245,"line_start":21,"line_end":21,"column_start":8,"column_end":17},"name":"from_size","qualname":"::relocations::Relocation::from_size","value":"pub fn from_size(RelocationSize) -> Self","parent":{"krate":0,"index":199},"children":[],"decl_id":null,"docs":" construct this relocation from a simple size. This is used to implement relocations in directives and literal pools.\n","sig":null,"attributes":[{"value":"/ construct this relocation from a simple size. This is used to implement relocations in directives and literal pools.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":69108,"byte_end":69228,"line_start":20,"line_end":20,"column_start":5,"column_end":125}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":69351,"byte_end":69355,"line_start":23,"line_end":23,"column_start":8,"column_end":12},"name":"size","qualname":"::relocations::Relocation::size","value":"pub fn size(&Self) -> usize","parent":{"krate":0,"index":199},"children":[],"decl_id":null,"docs":" The size of the slice of bytes affected by this relocation\n","sig":null,"attributes":[{"value":"/ The size of the slice of bytes affected by this relocation","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":69281,"byte_end":69343,"line_start":22,"line_end":22,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":69537,"byte_end":69548,"line_start":26,"line_end":26,"column_start":8,"column_end":19},"name":"write_value","qualname":"::relocations::Relocation::write_value","value":"pub fn write_value(&Self, &mut [u8], isize)\n-> Result<(), ImpossibleRelocation>","parent":{"krate":0,"index":199},"children":[],"decl_id":null,"docs":" Write a value into a buffer of size `self.size()` in the format of this relocation.\n Any bits not part of the relocation should be preserved.\n","sig":null,"attributes":[{"value":"/ Write a value into a buffer of size `self.size()` in the format of this relocation.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":69377,"byte_end":69464,"line_start":24,"line_end":24,"column_start":5,"column_end":92}},{"value":"/ Any bits not part of the relocation should be preserved.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":69469,"byte_end":69529,"line_start":25,"line_end":25,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":69721,"byte_end":69731,"line_start":28,"line_end":28,"column_start":8,"column_end":18},"name":"read_value","qualname":"::relocations::Relocation::read_value","value":"pub fn read_value(&Self, &[u8]) -> isize","parent":{"krate":0,"index":199},"children":[],"decl_id":null,"docs":" Read a value from a buffer of size `self.size()` in the format of this relocation.\n","sig":null,"attributes":[{"value":"/ Read a value from a buffer of size `self.size()` in the format of this relocation.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":69627,"byte_end":69713,"line_start":27,"line_end":27,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":69839,"byte_end":69843,"line_start":30,"line_end":30,"column_start":8,"column_end":12},"name":"kind","qualname":"::relocations::Relocation::kind","value":"pub fn kind(&Self) -> RelocationKind","parent":{"krate":0,"index":199},"children":[],"decl_id":null,"docs":" Specifies what kind of relocation this relocation instance is.\n","sig":null,"attributes":[{"value":"/ Specifies what kind of relocation this relocation instance is.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":69765,"byte_end":69831,"line_start":29,"line_end":29,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":69935,"byte_end":69944,"line_start":32,"line_end":32,"column_start":8,"column_end":17},"name":"page_size","qualname":"::relocations::Relocation::page_size","value":"pub fn page_size() -> usize","parent":{"krate":0,"index":199},"children":[],"decl_id":null,"docs":" Specifies the default page size on this platform.\n","sig":null,"attributes":[{"value":"/ Specifies the default page size on this platform.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":69874,"byte_end":69927,"line_start":31,"line_end":31,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":717},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":70241,"byte_end":70249,"line_start":41,"line_end":41,"column_start":5,"column_end":13},"name":"Relative","qualname":"::relocations::RelocationKind::Relative","value":"RelocationKind::Relative","parent":{"krate":0,"index":716},"children":[],"decl_id":null,"docs":" A simple, PC-relative relocation. These can be encoded once and do not need\n to be adjusted when the executable buffer is moved.\n","sig":null,"attributes":[{"value":"/ A simple, PC-relative relocation. These can be encoded once and do not need","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":70097,"byte_end":70176,"line_start":39,"line_end":39,"column_start":5,"column_end":84}},{"value":"/ to be adjusted when the executable buffer is moved.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":70181,"byte_end":70236,"line_start":40,"line_end":40,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":720},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":70470,"byte_end":70478,"line_start":45,"line_end":45,"column_start":5,"column_end":13},"name":"AbsToRel","qualname":"::relocations::RelocationKind::AbsToRel","value":"RelocationKind::AbsToRel","parent":{"krate":0,"index":716},"children":[],"decl_id":null,"docs":" An absolute relocation to a relative address,\n i.e. trying to put the address of a dynasm x86 function in a register\n This means adjustment is necessary when the executable buffer is moved\n","sig":null,"attributes":[{"value":"/ An absolute relocation to a relative address,","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":70259,"byte_end":70308,"line_start":42,"line_end":42,"column_start":5,"column_end":54}},{"value":"/ i.e. trying to put the address of a dynasm x86 function in a register","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":70313,"byte_end":70386,"line_start":43,"line_end":43,"column_start":5,"column_end":78}},{"value":"/ This means adjustment is necessary when the executable buffer is moved","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":70391,"byte_end":70465,"line_start":44,"line_end":44,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":723},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":70689,"byte_end":70697,"line_start":49,"line_end":49,"column_start":5,"column_end":13},"name":"RelToAbs","qualname":"::relocations::RelocationKind::RelToAbs","value":"RelocationKind::RelToAbs","parent":{"krate":0,"index":716},"children":[],"decl_id":null,"docs":" A relative relocation to an absolute address,\n i.e. trying to call a rust function with a dynasm x86 call.\n This means adjustment is necessary when the executable buffer is moved\n","sig":null,"attributes":[{"value":"/ A relative relocation to an absolute address,","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":70488,"byte_end":70537,"line_start":46,"line_end":46,"column_start":5,"column_end":54}},{"value":"/ i.e. trying to call a rust function with a dynasm x86 call.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":70542,"byte_end":70605,"line_start":47,"line_end":47,"column_start":5,"column_end":68}},{"value":"/ This means adjustment is necessary when the executable buffer is moved","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":70610,"byte_end":70684,"line_start":48,"line_end":48,"column_start":5,"column_end":79}}]},{"kind":"Enum","id":{"krate":0,"index":716},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":70076,"byte_end":70090,"line_start":38,"line_end":38,"column_start":10,"column_end":24},"name":"RelocationKind","qualname":"::relocations::RelocationKind","value":"pub enum RelocationKind { Relative = , AbsToRel = , RelToAbs = , }","parent":null,"children":[{"krate":0,"index":717},{"krate":0,"index":720},{"krate":0,"index":723}],"decl_id":null,"docs":" Specifies what kind of relocation a relocation is.\n","sig":null,"attributes":[{"value":"/ Specifies what kind of relocation a relocation is.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":69961,"byte_end":70015,"line_start":36,"line_end":36,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":70798,"byte_end":70811,"line_start":54,"line_end":54,"column_start":12,"column_end":25},"name":"from_encoding","qualname":"<RelocationKind>::from_encoding","value":"pub fn from_encoding(u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Converts back from numeric value to RelocationKind\n","sig":null,"attributes":[{"value":"/ Converts back from numeric value to RelocationKind","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":70732,"byte_end":70786,"line_start":53,"line_end":53,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":741},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":71377,"byte_end":71381,"line_start":71,"line_end":71,"column_start":5,"column_end":9},"name":"Byte","qualname":"::relocations::RelocationSize::Byte","value":"RelocationSize::Byte","parent":{"krate":0,"index":740},"children":[],"decl_id":null,"docs":" A byte-sized relocation\n","sig":null,"attributes":[{"value":"/ A byte-sized relocation","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":71345,"byte_end":71372,"line_start":70,"line_end":70,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":744},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":71421,"byte_end":71425,"line_start":73,"line_end":73,"column_start":5,"column_end":9},"name":"Word","qualname":"::relocations::RelocationSize::Word","value":"RelocationSize::Word","parent":{"krate":0,"index":740},"children":[],"decl_id":null,"docs":" A two-byte relocation\n","sig":null,"attributes":[{"value":"/ A two-byte relocation","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":71391,"byte_end":71416,"line_start":72,"line_end":72,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":747},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":71472,"byte_end":71477,"line_start":75,"line_end":75,"column_start":5,"column_end":10},"name":"DWord","qualname":"::relocations::RelocationSize::DWord","value":"RelocationSize::DWord","parent":{"krate":0,"index":740},"children":[],"decl_id":null,"docs":" A four-byte sized relocation\n","sig":null,"attributes":[{"value":"/ A four-byte sized relocation","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":71435,"byte_end":71467,"line_start":74,"line_end":74,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":750},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":71522,"byte_end":71527,"line_start":77,"line_end":77,"column_start":5,"column_end":10},"name":"QWord","qualname":"::relocations::RelocationSize::QWord","value":"RelocationSize::QWord","parent":{"krate":0,"index":740},"children":[],"decl_id":null,"docs":" An 8-byte sized relocation\n","sig":null,"attributes":[{"value":"/ An 8-byte sized relocation","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":71487,"byte_end":71517,"line_start":76,"line_end":76,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":740},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":71324,"byte_end":71338,"line_start":69,"line_end":69,"column_start":10,"column_end":24},"name":"RelocationSize","qualname":"::relocations::RelocationSize","value":"pub enum RelocationSize { Byte = , Word = , DWord = , QWord = , }","parent":null,"children":[{"krate":0,"index":741},{"krate":0,"index":744},{"krate":0,"index":747},{"krate":0,"index":750}],"decl_id":null,"docs":" A descriptor for the size of a relocation. This also doubles as a relocation itself\n for relocations in data directives. Can be converted to relocations of any kind of architecture\n using `Relocation::from_size`.\n","sig":null,"attributes":[{"value":"/ A descriptor for the size of a relocation. This also doubles as a relocation itself","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":71041,"byte_end":71128,"line_start":65,"line_end":65,"column_start":1,"column_end":88}},{"value":"/ for relocations in data directives. Can be converted to relocations of any kind of architecture","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":71129,"byte_end":71228,"line_start":66,"line_end":66,"column_start":1,"column_end":100}},{"value":"/ using `Relocation::from_size`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":71229,"byte_end":71263,"line_start":67,"line_end":67,"column_start":1,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":225},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"x64","qualname":"::x64","value":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","parent":null,"children":[{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":230},{"krate":0,"index":233},{"krate":0,"index":236},{"krate":0,"index":239},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":767},{"krate":0,"index":769},{"krate":0,"index":771},{"krate":0,"index":245},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":257},{"krate":0,"index":773},{"krate":0,"index":822},{"krate":0,"index":824},{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":833},{"krate":0,"index":836},{"krate":0,"index":838},{"krate":0,"index":840},{"krate":0,"index":889},{"krate":0,"index":891},{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":900},{"krate":0,"index":903},{"krate":0,"index":905},{"krate":0,"index":907},{"krate":0,"index":956},{"krate":0,"index":958},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":967},{"krate":0,"index":970},{"krate":0,"index":972},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":263},{"krate":0,"index":266},{"krate":0,"index":269},{"krate":0,"index":272},{"krate":0,"index":275}],"decl_id":null,"docs":" Runtime support for the x64 architecture assembling target.","sig":null,"attributes":[{"value":"/ Runtime support for the x64 architecture assembling target.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":73486,"byte_end":73549,"line_start":1,"line_end":1,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":73550,"byte_end":73553,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The x64 instruction set features variable-length instructions and","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":73554,"byte_end":73623,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"/ relative relocations up to 32 bits in size.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":73624,"byte_end":73671,"line_start":4,"line_end":4,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":73672,"byte_end":73675,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ The core relocation behaviour for this architecture is provided by the [`X64Relocation`] type.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":73676,"byte_end":73774,"line_start":6,"line_end":6,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":73775,"byte_end":73778,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Next to that, this module contains the following:","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":73779,"byte_end":73832,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":73833,"byte_end":73836,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ## Type aliases","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":73837,"byte_end":73856,"line_start":10,"line_end":10,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":73857,"byte_end":73860,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Several specialized type aliases of the generic [`Assembler`] are provided as these are by far the most common usecase.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":73861,"byte_end":73984,"line_start":12,"line_end":12,"column_start":1,"column_end":124}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":73985,"byte_end":73988,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ## Enums","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":73989,"byte_end":74001,"line_start":14,"line_end":14,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":74002,"byte_end":74005,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ There are enumerator of every logically distinct register family usable in x64. ","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":74006,"byte_end":74090,"line_start":16,"line_end":16,"column_start":1,"column_end":85}},{"value":"/ These enums implement the [`Register`] trait and their discriminant values match their numeric encoding in dynamic register literals.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":74091,"byte_end":74228,"line_start":17,"line_end":17,"column_start":1,"column_end":138}},{"value":"/ Some of these are re-exported from the x86 architecture.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":74229,"byte_end":74289,"line_start":18,"line_end":18,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":74290,"byte_end":74293,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ *Note: The presence of some registers listed here is purely what is encodable. Check the relevant architecture documentation to find what is architecturally valid.*","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":74294,"byte_end":74462,"line_start":20,"line_end":20,"column_start":1,"column_end":169}}]},{"kind":"Struct","id":{"krate":0,"index":767},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":74692,"byte_end":74705,"line_start":30,"line_end":30,"column_start":12,"column_end":25},"name":"X64Relocation","qualname":"::x64::X64Relocation","value":"X64Relocation {  }","parent":null,"children":[{"krate":0,"index":768}],"decl_id":null,"docs":" Relocation implementation for the x64 architecture.\n","sig":null,"attributes":[{"value":"/ Relocation implementation for the x64 architecture.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":74601,"byte_end":74656,"line_start":28,"line_end":28,"column_start":1,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":254},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":75549,"byte_end":75558,"line_start":64,"line_end":64,"column_start":10,"column_end":19},"name":"Assembler","qualname":"::x64::Assembler","value":"crate::Assembler<X64Relocation>","parent":null,"children":[],"decl_id":null,"docs":" An x64 Assembler. This is aliased here for backwards compatability.\n","sig":null,"attributes":[{"value":"/ An x64 Assembler. This is aliased here for backwards compatability.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":75468,"byte_end":75539,"line_start":63,"line_end":63,"column_start":1,"column_end":72}}]},{"kind":"Type","id":{"krate":0,"index":255},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":75682,"byte_end":75698,"line_start":66,"line_end":66,"column_start":10,"column_end":26},"name":"AssemblyModifier","qualname":"::x64::AssemblyModifier","value":"crate::Modifier","parent":null,"children":[],"decl_id":null,"docs":" An x64 AssemblyModifier. This is aliased here for backwards compatability.\n","sig":null,"attributes":[{"value":"/ An x64 AssemblyModifier. This is aliased here for backwards compatability.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":75594,"byte_end":75672,"line_start":65,"line_end":65,"column_start":1,"column_end":79}}]},{"kind":"Type","id":{"krate":0,"index":257},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":75832,"byte_end":75851,"line_start":68,"line_end":68,"column_start":10,"column_end":29},"name":"UncommittedModifier","qualname":"::x64::UncommittedModifier","value":"crate::UncommittedModifier","parent":null,"children":[],"decl_id":null,"docs":" An x64 UncommittedModifier. This is aliased here for backwards compatability.\n","sig":null,"attributes":[{"value":"/ An x64 UncommittedModifier. This is aliased here for backwards compatability.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":75741,"byte_end":75822,"line_start":67,"line_end":67,"column_start":1,"column_end":82}}]},{"kind":"TupleVariant","id":{"krate":0,"index":774},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76117,"byte_end":76120,"line_start":77,"line_end":77,"column_start":5,"column_end":8},"name":"RAX","qualname":"::x64::Rq::RAX","value":"Rq::RAX","parent":{"krate":0,"index":773},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":777},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76128,"byte_end":76131,"line_start":77,"line_end":77,"column_start":16,"column_end":19},"name":"RCX","qualname":"::x64::Rq::RCX","value":"Rq::RCX","parent":{"krate":0,"index":773},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":780},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76139,"byte_end":76142,"line_start":77,"line_end":77,"column_start":27,"column_end":30},"name":"RDX","qualname":"::x64::Rq::RDX","value":"Rq::RDX","parent":{"krate":0,"index":773},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":783},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76150,"byte_end":76153,"line_start":77,"line_end":77,"column_start":38,"column_end":41},"name":"RBX","qualname":"::x64::Rq::RBX","value":"Rq::RBX","parent":{"krate":0,"index":773},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":786},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76165,"byte_end":76168,"line_start":78,"line_end":78,"column_start":5,"column_end":8},"name":"RSP","qualname":"::x64::Rq::RSP","value":"Rq::RSP","parent":{"krate":0,"index":773},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":789},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76176,"byte_end":76179,"line_start":78,"line_end":78,"column_start":16,"column_end":19},"name":"RBP","qualname":"::x64::Rq::RBP","value":"Rq::RBP","parent":{"krate":0,"index":773},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":792},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76187,"byte_end":76190,"line_start":78,"line_end":78,"column_start":27,"column_end":30},"name":"RSI","qualname":"::x64::Rq::RSI","value":"Rq::RSI","parent":{"krate":0,"index":773},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":795},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76198,"byte_end":76201,"line_start":78,"line_end":78,"column_start":38,"column_end":41},"name":"RDI","qualname":"::x64::Rq::RDI","value":"Rq::RDI","parent":{"krate":0,"index":773},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":798},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76213,"byte_end":76215,"line_start":79,"line_end":79,"column_start":5,"column_end":7},"name":"R8","qualname":"::x64::Rq::R8","value":"Rq::R8","parent":{"krate":0,"index":773},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":801},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76224,"byte_end":76226,"line_start":79,"line_end":79,"column_start":16,"column_end":18},"name":"R9","qualname":"::x64::Rq::R9","value":"Rq::R9","parent":{"krate":0,"index":773},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":804},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76235,"byte_end":76238,"line_start":79,"line_end":79,"column_start":27,"column_end":30},"name":"R10","qualname":"::x64::Rq::R10","value":"Rq::R10","parent":{"krate":0,"index":773},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":807},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76246,"byte_end":76249,"line_start":79,"line_end":79,"column_start":38,"column_end":41},"name":"R11","qualname":"::x64::Rq::R11","value":"Rq::R11","parent":{"krate":0,"index":773},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":810},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76261,"byte_end":76264,"line_start":80,"line_end":80,"column_start":5,"column_end":8},"name":"R12","qualname":"::x64::Rq::R12","value":"Rq::R12","parent":{"krate":0,"index":773},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":813},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76272,"byte_end":76275,"line_start":80,"line_end":80,"column_start":16,"column_end":19},"name":"R13","qualname":"::x64::Rq::R13","value":"Rq::R13","parent":{"krate":0,"index":773},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":816},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76283,"byte_end":76286,"line_start":80,"line_end":80,"column_start":27,"column_end":30},"name":"R14","qualname":"::x64::Rq::R14","value":"Rq::R14","parent":{"krate":0,"index":773},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":819},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76294,"byte_end":76297,"line_start":80,"line_end":80,"column_start":38,"column_end":41},"name":"R15","qualname":"::x64::Rq::R15","value":"Rq::R15","parent":{"krate":0,"index":773},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":773},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76108,"byte_end":76110,"line_start":76,"line_end":76,"column_start":10,"column_end":12},"name":"Rq","qualname":"::x64::Rq","value":"pub enum Rq {\n    RAX = ,\n    RCX = ,\n    RDX = ,\n    RBX = ,\n    RSP = ,\n    RBP = ,\n    RSI = ,\n    RDI = ,\n    R8 = ,\n    R9 = ,\n    R10 = ,\n    R11 = ,\n    R12 = ,\n    R13 = ,\n    R14 = ,\n    R15 = ,\n}","parent":null,"children":[{"krate":0,"index":774},{"krate":0,"index":777},{"krate":0,"index":780},{"krate":0,"index":783},{"krate":0,"index":786},{"krate":0,"index":789},{"krate":0,"index":792},{"krate":0,"index":795},{"krate":0,"index":798},{"krate":0,"index":801},{"krate":0,"index":804},{"krate":0,"index":807},{"krate":0,"index":810},{"krate":0,"index":813},{"krate":0,"index":816},{"krate":0,"index":819}],"decl_id":null,"docs":" 1, 2, 4 or 8-byte general purpose \"quad-word\" registers.","sig":null,"attributes":[{"value":"/ 1, 2, 4 or 8-byte general purpose \"quad-word\" registers.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":75892,"byte_end":75952,"line_start":71,"line_end":71,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":75953,"byte_end":75956,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ RIP does not appear here as it cannot be addressed dynamically.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":75957,"byte_end":76024,"line_start":73,"line_end":73,"column_start":1,"column_end":68}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76025,"byte_end":76047,"line_start":74,"line_end":74,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":841},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76449,"byte_end":76453,"line_start":88,"line_end":88,"column_start":5,"column_end":9},"name":"XMM0","qualname":"::x64::Rx::XMM0","value":"Rx::XMM0","parent":{"krate":0,"index":840},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":844},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76462,"byte_end":76466,"line_start":88,"line_end":88,"column_start":18,"column_end":22},"name":"XMM1","qualname":"::x64::Rx::XMM1","value":"Rx::XMM1","parent":{"krate":0,"index":840},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":847},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76475,"byte_end":76479,"line_start":88,"line_end":88,"column_start":31,"column_end":35},"name":"XMM2","qualname":"::x64::Rx::XMM2","value":"Rx::XMM2","parent":{"krate":0,"index":840},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":850},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76488,"byte_end":76492,"line_start":88,"line_end":88,"column_start":44,"column_end":48},"name":"XMM3","qualname":"::x64::Rx::XMM3","value":"Rx::XMM3","parent":{"krate":0,"index":840},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":853},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76505,"byte_end":76509,"line_start":89,"line_end":89,"column_start":5,"column_end":9},"name":"XMM4","qualname":"::x64::Rx::XMM4","value":"Rx::XMM4","parent":{"krate":0,"index":840},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":856},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76518,"byte_end":76522,"line_start":89,"line_end":89,"column_start":18,"column_end":22},"name":"XMM5","qualname":"::x64::Rx::XMM5","value":"Rx::XMM5","parent":{"krate":0,"index":840},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":859},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76531,"byte_end":76535,"line_start":89,"line_end":89,"column_start":31,"column_end":35},"name":"XMM6","qualname":"::x64::Rx::XMM6","value":"Rx::XMM6","parent":{"krate":0,"index":840},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":862},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76544,"byte_end":76548,"line_start":89,"line_end":89,"column_start":44,"column_end":48},"name":"XMM7","qualname":"::x64::Rx::XMM7","value":"Rx::XMM7","parent":{"krate":0,"index":840},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":865},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76561,"byte_end":76565,"line_start":90,"line_end":90,"column_start":5,"column_end":9},"name":"XMM8","qualname":"::x64::Rx::XMM8","value":"Rx::XMM8","parent":{"krate":0,"index":840},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":868},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76574,"byte_end":76578,"line_start":90,"line_end":90,"column_start":18,"column_end":22},"name":"XMM9","qualname":"::x64::Rx::XMM9","value":"Rx::XMM9","parent":{"krate":0,"index":840},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":871},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76587,"byte_end":76592,"line_start":90,"line_end":90,"column_start":31,"column_end":36},"name":"XMM10","qualname":"::x64::Rx::XMM10","value":"Rx::XMM10","parent":{"krate":0,"index":840},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":874},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76600,"byte_end":76605,"line_start":90,"line_end":90,"column_start":44,"column_end":49},"name":"XMM11","qualname":"::x64::Rx::XMM11","value":"Rx::XMM11","parent":{"krate":0,"index":840},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":877},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76617,"byte_end":76622,"line_start":91,"line_end":91,"column_start":5,"column_end":10},"name":"XMM12","qualname":"::x64::Rx::XMM12","value":"Rx::XMM12","parent":{"krate":0,"index":840},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":880},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76630,"byte_end":76635,"line_start":91,"line_end":91,"column_start":18,"column_end":23},"name":"XMM13","qualname":"::x64::Rx::XMM13","value":"Rx::XMM13","parent":{"krate":0,"index":840},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":883},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76643,"byte_end":76648,"line_start":91,"line_end":91,"column_start":31,"column_end":36},"name":"XMM14","qualname":"::x64::Rx::XMM14","value":"Rx::XMM14","parent":{"krate":0,"index":840},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":886},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76656,"byte_end":76661,"line_start":91,"line_end":91,"column_start":44,"column_end":49},"name":"XMM15","qualname":"::x64::Rx::XMM15","value":"Rx::XMM15","parent":{"krate":0,"index":840},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":840},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76440,"byte_end":76442,"line_start":87,"line_end":87,"column_start":10,"column_end":12},"name":"Rx","qualname":"::x64::Rx","value":"pub enum Rx {\n    XMM0 = ,\n    XMM1 = ,\n    XMM2 = ,\n    XMM3 = ,\n    XMM4 = ,\n    XMM5 = ,\n    XMM6 = ,\n    XMM7 = ,\n    XMM8 = ,\n    XMM9 = ,\n    XMM10 = ,\n    XMM11 = ,\n    XMM12 = ,\n    XMM13 = ,\n    XMM14 = ,\n    XMM15 = ,\n}","parent":null,"children":[{"krate":0,"index":841},{"krate":0,"index":844},{"krate":0,"index":847},{"krate":0,"index":850},{"krate":0,"index":853},{"krate":0,"index":856},{"krate":0,"index":859},{"krate":0,"index":862},{"krate":0,"index":865},{"krate":0,"index":868},{"krate":0,"index":871},{"krate":0,"index":874},{"krate":0,"index":877},{"krate":0,"index":880},{"krate":0,"index":883},{"krate":0,"index":886}],"decl_id":null,"docs":" 16 or 32-byte SSE registers.\n","sig":null,"attributes":[{"value":"/ 16 or 32-byte SSE registers.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76324,"byte_end":76356,"line_start":84,"line_end":84,"column_start":1,"column_end":33}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76357,"byte_end":76379,"line_start":85,"line_end":85,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":908},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76810,"byte_end":76813,"line_start":99,"line_end":99,"column_start":5,"column_end":8},"name":"CR0","qualname":"::x64::RC::CR0","value":"RC::CR0","parent":{"krate":0,"index":907},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":911},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76822,"byte_end":76825,"line_start":99,"line_end":99,"column_start":17,"column_end":20},"name":"CR1","qualname":"::x64::RC::CR1","value":"RC::CR1","parent":{"krate":0,"index":907},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":914},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76834,"byte_end":76837,"line_start":99,"line_end":99,"column_start":29,"column_end":32},"name":"CR2","qualname":"::x64::RC::CR2","value":"RC::CR2","parent":{"krate":0,"index":907},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":917},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76846,"byte_end":76849,"line_start":99,"line_end":99,"column_start":41,"column_end":44},"name":"CR3","qualname":"::x64::RC::CR3","value":"RC::CR3","parent":{"krate":0,"index":907},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":920},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76862,"byte_end":76865,"line_start":100,"line_end":100,"column_start":5,"column_end":8},"name":"CR4","qualname":"::x64::RC::CR4","value":"RC::CR4","parent":{"krate":0,"index":907},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":923},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76874,"byte_end":76877,"line_start":100,"line_end":100,"column_start":17,"column_end":20},"name":"CR5","qualname":"::x64::RC::CR5","value":"RC::CR5","parent":{"krate":0,"index":907},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":926},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76886,"byte_end":76889,"line_start":100,"line_end":100,"column_start":29,"column_end":32},"name":"CR6","qualname":"::x64::RC::CR6","value":"RC::CR6","parent":{"krate":0,"index":907},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":929},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76898,"byte_end":76901,"line_start":100,"line_end":100,"column_start":41,"column_end":44},"name":"CR7","qualname":"::x64::RC::CR7","value":"RC::CR7","parent":{"krate":0,"index":907},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":932},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76914,"byte_end":76917,"line_start":101,"line_end":101,"column_start":5,"column_end":8},"name":"CR8","qualname":"::x64::RC::CR8","value":"RC::CR8","parent":{"krate":0,"index":907},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":935},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76926,"byte_end":76929,"line_start":101,"line_end":101,"column_start":17,"column_end":20},"name":"CR9","qualname":"::x64::RC::CR9","value":"RC::CR9","parent":{"krate":0,"index":907},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":938},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76938,"byte_end":76942,"line_start":101,"line_end":101,"column_start":29,"column_end":33},"name":"CR10","qualname":"::x64::RC::CR10","value":"RC::CR10","parent":{"krate":0,"index":907},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":941},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76950,"byte_end":76954,"line_start":101,"line_end":101,"column_start":41,"column_end":45},"name":"CR11","qualname":"::x64::RC::CR11","value":"RC::CR11","parent":{"krate":0,"index":907},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":944},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76966,"byte_end":76970,"line_start":102,"line_end":102,"column_start":5,"column_end":9},"name":"CR12","qualname":"::x64::RC::CR12","value":"RC::CR12","parent":{"krate":0,"index":907},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":947},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76978,"byte_end":76982,"line_start":102,"line_end":102,"column_start":17,"column_end":21},"name":"CR13","qualname":"::x64::RC::CR13","value":"RC::CR13","parent":{"krate":0,"index":907},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":950},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76990,"byte_end":76994,"line_start":102,"line_end":102,"column_start":29,"column_end":33},"name":"CR14","qualname":"::x64::RC::CR14","value":"RC::CR14","parent":{"krate":0,"index":907},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":953},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":77002,"byte_end":77006,"line_start":102,"line_end":102,"column_start":41,"column_end":45},"name":"CR15","qualname":"::x64::RC::CR15","value":"RC::CR15","parent":{"krate":0,"index":907},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":907},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76801,"byte_end":76803,"line_start":98,"line_end":98,"column_start":10,"column_end":12},"name":"RC","qualname":"::x64::RC","value":"pub enum RC {\n    CR0 = ,\n    CR1 = ,\n    CR2 = ,\n    CR3 = ,\n    CR4 = ,\n    CR5 = ,\n    CR6 = ,\n    CR7 = ,\n    CR8 = ,\n    CR9 = ,\n    CR10 = ,\n    CR11 = ,\n    CR12 = ,\n    CR13 = ,\n    CR14 = ,\n    CR15 = ,\n}","parent":null,"children":[{"krate":0,"index":908},{"krate":0,"index":911},{"krate":0,"index":914},{"krate":0,"index":917},{"krate":0,"index":920},{"krate":0,"index":923},{"krate":0,"index":926},{"krate":0,"index":929},{"krate":0,"index":932},{"krate":0,"index":935},{"krate":0,"index":938},{"krate":0,"index":941},{"krate":0,"index":944},{"krate":0,"index":947},{"krate":0,"index":950},{"krate":0,"index":953}],"decl_id":null,"docs":" 8-byte control registers.\n","sig":null,"attributes":[{"value":"/ 8-byte control registers.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76688,"byte_end":76717,"line_start":95,"line_end":95,"column_start":1,"column_end":30}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":76718,"byte_end":76740,"line_start":96,"line_end":96,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":278},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"x86","qualname":"::x86","value":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","parent":null,"children":[{"krate":0,"index":279},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":286},{"krate":0,"index":289},{"krate":0,"index":292},{"krate":0,"index":974},{"krate":0,"index":977},{"krate":0,"index":979},{"krate":0,"index":295},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":307},{"krate":0,"index":981},{"krate":0,"index":1006},{"krate":0,"index":1008},{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1017},{"krate":0,"index":1020},{"krate":0,"index":1022},{"krate":0,"index":1024},{"krate":0,"index":1037},{"krate":0,"index":1039},{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":1048},{"krate":0,"index":1051},{"krate":0,"index":1053},{"krate":0,"index":1055},{"krate":0,"index":1080},{"krate":0,"index":1082},{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1091},{"krate":0,"index":1094},{"krate":0,"index":1096},{"krate":0,"index":1098},{"krate":0,"index":1123},{"krate":0,"index":1125},{"krate":0,"index":1127},{"krate":0,"index":1128},{"krate":0,"index":1129},{"krate":0,"index":1131},{"krate":0,"index":1132},{"krate":0,"index":1134},{"krate":0,"index":1137},{"krate":0,"index":1139},{"krate":0,"index":1141},{"krate":0,"index":1166},{"krate":0,"index":1168},{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1172},{"krate":0,"index":1174},{"krate":0,"index":1175},{"krate":0,"index":1177},{"krate":0,"index":1180},{"krate":0,"index":1182},{"krate":0,"index":1184},{"krate":0,"index":1203},{"krate":0,"index":1205},{"krate":0,"index":1207},{"krate":0,"index":1208},{"krate":0,"index":1209},{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1214},{"krate":0,"index":1217},{"krate":0,"index":1219},{"krate":0,"index":1221},{"krate":0,"index":1246},{"krate":0,"index":1248},{"krate":0,"index":1250},{"krate":0,"index":1251},{"krate":0,"index":1252},{"krate":0,"index":1254},{"krate":0,"index":1255},{"krate":0,"index":1257},{"krate":0,"index":1260},{"krate":0,"index":1262},{"krate":0,"index":1264},{"krate":0,"index":1313},{"krate":0,"index":1315},{"krate":0,"index":1317},{"krate":0,"index":1318},{"krate":0,"index":1319},{"krate":0,"index":1321},{"krate":0,"index":1322},{"krate":0,"index":1324},{"krate":0,"index":1327},{"krate":0,"index":1329},{"krate":0,"index":1331},{"krate":0,"index":1344},{"krate":0,"index":1346},{"krate":0,"index":1348},{"krate":0,"index":1349},{"krate":0,"index":1350},{"krate":0,"index":1352},{"krate":0,"index":1353},{"krate":0,"index":1355},{"krate":0,"index":1358},{"krate":0,"index":1360}],"decl_id":null,"docs":" Runtime support for the x86 architecture assembling target.","sig":null,"attributes":[{"value":"/ Runtime support for the x86 architecture assembling target.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":77419,"byte_end":77482,"line_start":1,"line_end":1,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":77483,"byte_end":77486,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The x86 instruction set features variable-length instructions and","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":77487,"byte_end":77556,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"/ relative relocations up to 16 bits in size, or absolute relocations of 32 bits in size.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":77557,"byte_end":77648,"line_start":4,"line_end":4,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":77649,"byte_end":77652,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ The core relocation behaviour for this architecture is provided by the [`X86Relocation`] type.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":77653,"byte_end":77751,"line_start":6,"line_end":6,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":77752,"byte_end":77755,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Next to that, this module contains the following:","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":77756,"byte_end":77809,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":77810,"byte_end":77813,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ## Type aliases","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":77814,"byte_end":77833,"line_start":10,"line_end":10,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":77834,"byte_end":77837,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Several specialized type aliases of the generic [`Assembler`] are provided as these are by far the most common usecase.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":77838,"byte_end":77961,"line_start":12,"line_end":12,"column_start":1,"column_end":124}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":77962,"byte_end":77965,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ## Enums","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":77966,"byte_end":77978,"line_start":14,"line_end":14,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":77979,"byte_end":77982,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ There are enumerator of every logically distinct register family usable in x86. ","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":77983,"byte_end":78067,"line_start":16,"line_end":16,"column_start":1,"column_end":85}},{"value":"/ These enums implement the [`Register`] trait and their discriminant values match their numeric encoding in dynamic register literals.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":78068,"byte_end":78205,"line_start":17,"line_end":17,"column_start":1,"column_end":138}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":78206,"byte_end":78209,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ *Note: The presence of some registers listed here is purely what is encodable. Check the relevant architecture documentation to find what is architecturally valid.*","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":78210,"byte_end":78378,"line_start":19,"line_end":19,"column_start":1,"column_end":169}}]},{"kind":"Struct","id":{"krate":0,"index":974},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":78587,"byte_end":78600,"line_start":28,"line_end":28,"column_start":12,"column_end":25},"name":"X86Relocation","qualname":"::x86::X86Relocation","value":"X86Relocation {  }","parent":null,"children":[{"krate":0,"index":975},{"krate":0,"index":976}],"decl_id":null,"docs":" Relocation implementation for the x86 architecture.\n","sig":null,"attributes":[{"value":"/ Relocation implementation for the x86 architecture.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":78496,"byte_end":78551,"line_start":26,"line_end":26,"column_start":1,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":304},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":79564,"byte_end":79573,"line_start":66,"line_end":66,"column_start":10,"column_end":19},"name":"Assembler","qualname":"::x86::Assembler","value":"crate::Assembler<X86Relocation>","parent":null,"children":[],"decl_id":null,"docs":" An x86 Assembler. This is aliased here for backwards compatability.\n","sig":null,"attributes":[{"value":"/ An x86 Assembler. This is aliased here for backwards compatability.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":79483,"byte_end":79554,"line_start":65,"line_end":65,"column_start":1,"column_end":72}}]},{"kind":"Type","id":{"krate":0,"index":305},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":79697,"byte_end":79713,"line_start":68,"line_end":68,"column_start":10,"column_end":26},"name":"AssemblyModifier","qualname":"::x86::AssemblyModifier","value":"crate::Modifier","parent":null,"children":[],"decl_id":null,"docs":" An x86 AssemblyModifier. This is aliased here for backwards compatability.\n","sig":null,"attributes":[{"value":"/ An x86 AssemblyModifier. This is aliased here for backwards compatability.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":79609,"byte_end":79687,"line_start":67,"line_end":67,"column_start":1,"column_end":79}}]},{"kind":"Type","id":{"krate":0,"index":307},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":79847,"byte_end":79866,"line_start":70,"line_end":70,"column_start":10,"column_end":29},"name":"UncommittedModifier","qualname":"::x86::UncommittedModifier","value":"crate::UncommittedModifier","parent":null,"children":[],"decl_id":null,"docs":" An x86 UncommittedModifier. This is aliased here for backwards compatability.\n","sig":null,"attributes":[{"value":"/ An x86 UncommittedModifier. This is aliased here for backwards compatability.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":79756,"byte_end":79837,"line_start":69,"line_end":69,"column_start":1,"column_end":82}}]},{"kind":"TupleVariant","id":{"krate":0,"index":982},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":80131,"byte_end":80134,"line_start":79,"line_end":79,"column_start":5,"column_end":8},"name":"EAX","qualname":"::x86::Rd::EAX","value":"Rd::EAX","parent":{"krate":0,"index":981},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":985},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":80143,"byte_end":80146,"line_start":79,"line_end":79,"column_start":17,"column_end":20},"name":"ECX","qualname":"::x86::Rd::ECX","value":"Rd::ECX","parent":{"krate":0,"index":981},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":988},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":80155,"byte_end":80158,"line_start":79,"line_end":79,"column_start":29,"column_end":32},"name":"EDX","qualname":"::x86::Rd::EDX","value":"Rd::EDX","parent":{"krate":0,"index":981},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":991},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":80167,"byte_end":80170,"line_start":79,"line_end":79,"column_start":41,"column_end":44},"name":"EBX","qualname":"::x86::Rd::EBX","value":"Rd::EBX","parent":{"krate":0,"index":981},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":994},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":80183,"byte_end":80186,"line_start":80,"line_end":80,"column_start":5,"column_end":8},"name":"ESP","qualname":"::x86::Rd::ESP","value":"Rd::ESP","parent":{"krate":0,"index":981},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":997},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":80195,"byte_end":80198,"line_start":80,"line_end":80,"column_start":17,"column_end":20},"name":"EBP","qualname":"::x86::Rd::EBP","value":"Rd::EBP","parent":{"krate":0,"index":981},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1000},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":80207,"byte_end":80210,"line_start":80,"line_end":80,"column_start":29,"column_end":32},"name":"ESI","qualname":"::x86::Rd::ESI","value":"Rd::ESI","parent":{"krate":0,"index":981},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1003},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":80219,"byte_end":80222,"line_start":80,"line_end":80,"column_start":41,"column_end":44},"name":"EDI","qualname":"::x86::Rd::EDI","value":"Rd::EDI","parent":{"krate":0,"index":981},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":981},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":80122,"byte_end":80124,"line_start":78,"line_end":78,"column_start":10,"column_end":12},"name":"Rd","qualname":"::x86::Rd","value":"pub enum Rd {\n    EAX = ,\n    ECX = ,\n    EDX = ,\n    EBX = ,\n    ESP = ,\n    EBP = ,\n    ESI = ,\n    EDI = ,\n}","parent":null,"children":[{"krate":0,"index":982},{"krate":0,"index":985},{"krate":0,"index":988},{"krate":0,"index":991},{"krate":0,"index":994},{"krate":0,"index":997},{"krate":0,"index":1000},{"krate":0,"index":1003}],"decl_id":null,"docs":" 1, 2 or 4-byte general purpose \"double-word\" registers.","sig":null,"attributes":[{"value":"/ 1, 2 or 4-byte general purpose \"double-word\" registers.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":79907,"byte_end":79966,"line_start":73,"line_end":73,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":79967,"byte_end":79970,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ EIP does not appear here as it cannot be addressed dynamically.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":79971,"byte_end":80038,"line_start":75,"line_end":75,"column_start":1,"column_end":68}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":80039,"byte_end":80061,"line_start":76,"line_end":76,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1025},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":80383,"byte_end":80385,"line_start":88,"line_end":88,"column_start":5,"column_end":7},"name":"AH","qualname":"::x86::Rh::AH","value":"Rh::AH","parent":{"krate":0,"index":1024},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1028},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":80393,"byte_end":80395,"line_start":88,"line_end":88,"column_start":15,"column_end":17},"name":"CH","qualname":"::x86::Rh::CH","value":"Rh::CH","parent":{"krate":0,"index":1024},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1031},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":80403,"byte_end":80405,"line_start":88,"line_end":88,"column_start":25,"column_end":27},"name":"DH","qualname":"::x86::Rh::DH","value":"Rh::DH","parent":{"krate":0,"index":1024},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1034},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":80413,"byte_end":80415,"line_start":88,"line_end":88,"column_start":35,"column_end":37},"name":"BH","qualname":"::x86::Rh::BH","value":"Rh::BH","parent":{"krate":0,"index":1024},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1024},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":80374,"byte_end":80376,"line_start":87,"line_end":87,"column_start":10,"column_end":12},"name":"Rh","qualname":"::x86::Rh","value":"pub enum Rh { AH = , CH = , DH = , BH = , }","parent":null,"children":[{"krate":0,"index":1025},{"krate":0,"index":1028},{"krate":0,"index":1031},{"krate":0,"index":1034}],"decl_id":null,"docs":" High-byte general purpose registers.\n","sig":null,"attributes":[{"value":"/ High-byte general purpose registers.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":80250,"byte_end":80290,"line_start":84,"line_end":84,"column_start":1,"column_end":41}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":80291,"byte_end":80313,"line_start":85,"line_end":85,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1056},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":80572,"byte_end":80575,"line_start":96,"line_end":96,"column_start":5,"column_end":8},"name":"ST0","qualname":"::x86::Rf::ST0","value":"Rf::ST0","parent":{"krate":0,"index":1055},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1059},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":80583,"byte_end":80586,"line_start":96,"line_end":96,"column_start":16,"column_end":19},"name":"ST1","qualname":"::x86::Rf::ST1","value":"Rf::ST1","parent":{"krate":0,"index":1055},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1062},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":80594,"byte_end":80597,"line_start":96,"line_end":96,"column_start":27,"column_end":30},"name":"ST2","qualname":"::x86::Rf::ST2","value":"Rf::ST2","parent":{"krate":0,"index":1055},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1065},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":80605,"byte_end":80608,"line_start":96,"line_end":96,"column_start":38,"column_end":41},"name":"ST3","qualname":"::x86::Rf::ST3","value":"Rf::ST3","parent":{"krate":0,"index":1055},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1068},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":80620,"byte_end":80623,"line_start":97,"line_end":97,"column_start":5,"column_end":8},"name":"ST4","qualname":"::x86::Rf::ST4","value":"Rf::ST4","parent":{"krate":0,"index":1055},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1071},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":80631,"byte_end":80634,"line_start":97,"line_end":97,"column_start":16,"column_end":19},"name":"ST5","qualname":"::x86::Rf::ST5","value":"Rf::ST5","parent":{"krate":0,"index":1055},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1074},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":80642,"byte_end":80645,"line_start":97,"line_end":97,"column_start":27,"column_end":30},"name":"ST6","qualname":"::x86::Rf::ST6","value":"Rf::ST6","parent":{"krate":0,"index":1055},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1077},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":80653,"byte_end":80656,"line_start":97,"line_end":97,"column_start":38,"column_end":41},"name":"ST7","qualname":"::x86::Rf::ST7","value":"Rf::ST7","parent":{"krate":0,"index":1055},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1055},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":80563,"byte_end":80565,"line_start":95,"line_end":95,"column_start":10,"column_end":12},"name":"Rf","qualname":"::x86::Rf","value":"pub enum Rf {\n    ST0 = ,\n    ST1 = ,\n    ST2 = ,\n    ST3 = ,\n    ST4 = ,\n    ST5 = ,\n    ST6 = ,\n    ST7 = ,\n}","parent":null,"children":[{"krate":0,"index":1056},{"krate":0,"index":1059},{"krate":0,"index":1062},{"krate":0,"index":1065},{"krate":0,"index":1068},{"krate":0,"index":1071},{"krate":0,"index":1074},{"krate":0,"index":1077}],"decl_id":null,"docs":" 10-byte floating point registers.\n","sig":null,"attributes":[{"value":"/ 10-byte floating point registers.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":80442,"byte_end":80479,"line_start":92,"line_end":92,"column_start":1,"column_end":38}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":80480,"byte_end":80502,"line_start":93,"line_end":93,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1099},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":80801,"byte_end":80805,"line_start":105,"line_end":105,"column_start":5,"column_end":9},"name":"MMX0","qualname":"::x86::Rm::MMX0","value":"Rm::MMX0","parent":{"krate":0,"index":1098},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1102},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":80813,"byte_end":80817,"line_start":105,"line_end":105,"column_start":17,"column_end":21},"name":"MMX1","qualname":"::x86::Rm::MMX1","value":"Rm::MMX1","parent":{"krate":0,"index":1098},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1105},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":80825,"byte_end":80829,"line_start":105,"line_end":105,"column_start":29,"column_end":33},"name":"MMX2","qualname":"::x86::Rm::MMX2","value":"Rm::MMX2","parent":{"krate":0,"index":1098},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1108},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":80837,"byte_end":80841,"line_start":105,"line_end":105,"column_start":41,"column_end":45},"name":"MMX3","qualname":"::x86::Rm::MMX3","value":"Rm::MMX3","parent":{"krate":0,"index":1098},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1111},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":80853,"byte_end":80857,"line_start":106,"line_end":106,"column_start":5,"column_end":9},"name":"MMX4","qualname":"::x86::Rm::MMX4","value":"Rm::MMX4","parent":{"krate":0,"index":1098},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1114},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":80865,"byte_end":80869,"line_start":106,"line_end":106,"column_start":17,"column_end":21},"name":"MMX5","qualname":"::x86::Rm::MMX5","value":"Rm::MMX5","parent":{"krate":0,"index":1098},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1117},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":80877,"byte_end":80881,"line_start":106,"line_end":106,"column_start":29,"column_end":33},"name":"MMX6","qualname":"::x86::Rm::MMX6","value":"Rm::MMX6","parent":{"krate":0,"index":1098},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1120},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":80889,"byte_end":80893,"line_start":106,"line_end":106,"column_start":41,"column_end":45},"name":"MMX7","qualname":"::x86::Rm::MMX7","value":"Rm::MMX7","parent":{"krate":0,"index":1098},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1098},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":80792,"byte_end":80794,"line_start":104,"line_end":104,"column_start":10,"column_end":12},"name":"Rm","qualname":"::x86::Rm","value":"pub enum Rm {\n    MMX0 = ,\n    MMX1 = ,\n    MMX2 = ,\n    MMX3 = ,\n    MMX4 = ,\n    MMX5 = ,\n    MMX6 = ,\n    MMX7 = ,\n}","parent":null,"children":[{"krate":0,"index":1099},{"krate":0,"index":1102},{"krate":0,"index":1105},{"krate":0,"index":1108},{"krate":0,"index":1111},{"krate":0,"index":1114},{"krate":0,"index":1117},{"krate":0,"index":1120}],"decl_id":null,"docs":" 8-byte MMX registers.\n","sig":null,"attributes":[{"value":"/ 8-byte MMX registers.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":80683,"byte_end":80708,"line_start":101,"line_end":101,"column_start":1,"column_end":26}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":80709,"byte_end":80731,"line_start":102,"line_end":102,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1142},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":81045,"byte_end":81049,"line_start":114,"line_end":114,"column_start":5,"column_end":9},"name":"XMM0","qualname":"::x86::Rx::XMM0","value":"Rx::XMM0","parent":{"krate":0,"index":1141},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1145},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":81058,"byte_end":81062,"line_start":114,"line_end":114,"column_start":18,"column_end":22},"name":"XMM1","qualname":"::x86::Rx::XMM1","value":"Rx::XMM1","parent":{"krate":0,"index":1141},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1148},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":81071,"byte_end":81075,"line_start":114,"line_end":114,"column_start":31,"column_end":35},"name":"XMM2","qualname":"::x86::Rx::XMM2","value":"Rx::XMM2","parent":{"krate":0,"index":1141},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1151},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":81084,"byte_end":81088,"line_start":114,"line_end":114,"column_start":44,"column_end":48},"name":"XMM3","qualname":"::x86::Rx::XMM3","value":"Rx::XMM3","parent":{"krate":0,"index":1141},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1154},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":81101,"byte_end":81105,"line_start":115,"line_end":115,"column_start":5,"column_end":9},"name":"XMM4","qualname":"::x86::Rx::XMM4","value":"Rx::XMM4","parent":{"krate":0,"index":1141},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1157},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":81114,"byte_end":81118,"line_start":115,"line_end":115,"column_start":18,"column_end":22},"name":"XMM5","qualname":"::x86::Rx::XMM5","value":"Rx::XMM5","parent":{"krate":0,"index":1141},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1160},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":81127,"byte_end":81131,"line_start":115,"line_end":115,"column_start":31,"column_end":35},"name":"XMM6","qualname":"::x86::Rx::XMM6","value":"Rx::XMM6","parent":{"krate":0,"index":1141},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1163},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":81140,"byte_end":81144,"line_start":115,"line_end":115,"column_start":44,"column_end":48},"name":"XMM7","qualname":"::x86::Rx::XMM7","value":"Rx::XMM7","parent":{"krate":0,"index":1141},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1141},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":81036,"byte_end":81038,"line_start":113,"line_end":113,"column_start":10,"column_end":12},"name":"Rx","qualname":"::x86::Rx","value":"pub enum Rx {\n    XMM0 = ,\n    XMM1 = ,\n    XMM2 = ,\n    XMM3 = ,\n    XMM4 = ,\n    XMM5 = ,\n    XMM6 = ,\n    XMM7 = ,\n}","parent":null,"children":[{"krate":0,"index":1142},{"krate":0,"index":1145},{"krate":0,"index":1148},{"krate":0,"index":1151},{"krate":0,"index":1154},{"krate":0,"index":1157},{"krate":0,"index":1160},{"krate":0,"index":1163}],"decl_id":null,"docs":" 16 or 32-byte SSE registers.\n","sig":null,"attributes":[{"value":"/ 16 or 32-byte SSE registers.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":80920,"byte_end":80952,"line_start":110,"line_end":110,"column_start":1,"column_end":33}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":80953,"byte_end":80975,"line_start":111,"line_end":111,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1185},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":81294,"byte_end":81296,"line_start":123,"line_end":123,"column_start":5,"column_end":7},"name":"ES","qualname":"::x86::Rs::ES","value":"Rs::ES","parent":{"krate":0,"index":1184},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1188},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":81304,"byte_end":81306,"line_start":123,"line_end":123,"column_start":15,"column_end":17},"name":"CS","qualname":"::x86::Rs::CS","value":"Rs::CS","parent":{"krate":0,"index":1184},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1191},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":81314,"byte_end":81316,"line_start":123,"line_end":123,"column_start":25,"column_end":27},"name":"SS","qualname":"::x86::Rs::SS","value":"Rs::SS","parent":{"krate":0,"index":1184},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1194},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":81324,"byte_end":81326,"line_start":123,"line_end":123,"column_start":35,"column_end":37},"name":"DS","qualname":"::x86::Rs::DS","value":"Rs::DS","parent":{"krate":0,"index":1184},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1197},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":81338,"byte_end":81340,"line_start":124,"line_end":124,"column_start":5,"column_end":7},"name":"FS","qualname":"::x86::Rs::FS","value":"Rs::FS","parent":{"krate":0,"index":1184},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1200},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":81348,"byte_end":81350,"line_start":124,"line_end":124,"column_start":15,"column_end":17},"name":"GS","qualname":"::x86::Rs::GS","value":"Rs::GS","parent":{"krate":0,"index":1184},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1184},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":81285,"byte_end":81287,"line_start":122,"line_end":122,"column_start":10,"column_end":12},"name":"Rs","qualname":"::x86::Rs","value":"pub enum Rs { ES = , CS = , SS = , DS = , FS = , GS = , }","parent":null,"children":[{"krate":0,"index":1185},{"krate":0,"index":1188},{"krate":0,"index":1191},{"krate":0,"index":1194},{"krate":0,"index":1197},{"krate":0,"index":1200}],"decl_id":null,"docs":" 2-byte segment registers.\n","sig":null,"attributes":[{"value":"/ 2-byte segment registers.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":81172,"byte_end":81201,"line_start":119,"line_end":119,"column_start":1,"column_end":30}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":81202,"byte_end":81224,"line_start":120,"line_end":120,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1222},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":81499,"byte_end":81502,"line_start":132,"line_end":132,"column_start":5,"column_end":8},"name":"CR0","qualname":"::x86::RC::CR0","value":"RC::CR0","parent":{"krate":0,"index":1221},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1225},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":81511,"byte_end":81514,"line_start":132,"line_end":132,"column_start":17,"column_end":20},"name":"CR1","qualname":"::x86::RC::CR1","value":"RC::CR1","parent":{"krate":0,"index":1221},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1228},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":81523,"byte_end":81526,"line_start":132,"line_end":132,"column_start":29,"column_end":32},"name":"CR2","qualname":"::x86::RC::CR2","value":"RC::CR2","parent":{"krate":0,"index":1221},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1231},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":81535,"byte_end":81538,"line_start":132,"line_end":132,"column_start":41,"column_end":44},"name":"CR3","qualname":"::x86::RC::CR3","value":"RC::CR3","parent":{"krate":0,"index":1221},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1234},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":81551,"byte_end":81554,"line_start":133,"line_end":133,"column_start":5,"column_end":8},"name":"CR4","qualname":"::x86::RC::CR4","value":"RC::CR4","parent":{"krate":0,"index":1221},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1237},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":81563,"byte_end":81566,"line_start":133,"line_end":133,"column_start":17,"column_end":20},"name":"CR5","qualname":"::x86::RC::CR5","value":"RC::CR5","parent":{"krate":0,"index":1221},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1240},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":81575,"byte_end":81578,"line_start":133,"line_end":133,"column_start":29,"column_end":32},"name":"CR6","qualname":"::x86::RC::CR6","value":"RC::CR6","parent":{"krate":0,"index":1221},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1243},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":81587,"byte_end":81590,"line_start":133,"line_end":133,"column_start":41,"column_end":44},"name":"CR7","qualname":"::x86::RC::CR7","value":"RC::CR7","parent":{"krate":0,"index":1221},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1221},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":81490,"byte_end":81492,"line_start":131,"line_end":131,"column_start":10,"column_end":12},"name":"RC","qualname":"::x86::RC","value":"pub enum RC {\n    CR0 = ,\n    CR1 = ,\n    CR2 = ,\n    CR3 = ,\n    CR4 = ,\n    CR5 = ,\n    CR6 = ,\n    CR7 = ,\n}","parent":null,"children":[{"krate":0,"index":1222},{"krate":0,"index":1225},{"krate":0,"index":1228},{"krate":0,"index":1231},{"krate":0,"index":1234},{"krate":0,"index":1237},{"krate":0,"index":1240},{"krate":0,"index":1243}],"decl_id":null,"docs":" 4-byte control registers.\n","sig":null,"attributes":[{"value":"/ 4-byte control registers.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":81377,"byte_end":81406,"line_start":128,"line_end":128,"column_start":1,"column_end":30}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":81407,"byte_end":81429,"line_start":129,"line_end":129,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1265},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":81738,"byte_end":81741,"line_start":141,"line_end":141,"column_start":5,"column_end":8},"name":"DR0","qualname":"::x86::RD::DR0","value":"RD::DR0","parent":{"krate":0,"index":1264},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1268},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":81750,"byte_end":81753,"line_start":141,"line_end":141,"column_start":17,"column_end":20},"name":"DR1","qualname":"::x86::RD::DR1","value":"RD::DR1","parent":{"krate":0,"index":1264},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1271},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":81762,"byte_end":81765,"line_start":141,"line_end":141,"column_start":29,"column_end":32},"name":"DR2","qualname":"::x86::RD::DR2","value":"RD::DR2","parent":{"krate":0,"index":1264},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1274},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":81774,"byte_end":81777,"line_start":141,"line_end":141,"column_start":41,"column_end":44},"name":"DR3","qualname":"::x86::RD::DR3","value":"RD::DR3","parent":{"krate":0,"index":1264},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1277},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":81790,"byte_end":81793,"line_start":142,"line_end":142,"column_start":5,"column_end":8},"name":"DR4","qualname":"::x86::RD::DR4","value":"RD::DR4","parent":{"krate":0,"index":1264},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1280},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":81802,"byte_end":81805,"line_start":142,"line_end":142,"column_start":17,"column_end":20},"name":"DR5","qualname":"::x86::RD::DR5","value":"RD::DR5","parent":{"krate":0,"index":1264},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1283},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":81814,"byte_end":81817,"line_start":142,"line_end":142,"column_start":29,"column_end":32},"name":"DR6","qualname":"::x86::RD::DR6","value":"RD::DR6","parent":{"krate":0,"index":1264},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1286},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":81826,"byte_end":81829,"line_start":142,"line_end":142,"column_start":41,"column_end":44},"name":"DR7","qualname":"::x86::RD::DR7","value":"RD::DR7","parent":{"krate":0,"index":1264},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1289},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":81842,"byte_end":81845,"line_start":143,"line_end":143,"column_start":5,"column_end":8},"name":"DR8","qualname":"::x86::RD::DR8","value":"RD::DR8","parent":{"krate":0,"index":1264},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1292},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":81854,"byte_end":81857,"line_start":143,"line_end":143,"column_start":17,"column_end":20},"name":"DR9","qualname":"::x86::RD::DR9","value":"RD::DR9","parent":{"krate":0,"index":1264},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1295},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":81866,"byte_end":81870,"line_start":143,"line_end":143,"column_start":29,"column_end":33},"name":"DR10","qualname":"::x86::RD::DR10","value":"RD::DR10","parent":{"krate":0,"index":1264},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1298},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":81878,"byte_end":81882,"line_start":143,"line_end":143,"column_start":41,"column_end":45},"name":"DR11","qualname":"::x86::RD::DR11","value":"RD::DR11","parent":{"krate":0,"index":1264},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1301},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":81894,"byte_end":81898,"line_start":144,"line_end":144,"column_start":5,"column_end":9},"name":"DR12","qualname":"::x86::RD::DR12","value":"RD::DR12","parent":{"krate":0,"index":1264},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1304},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":81906,"byte_end":81910,"line_start":144,"line_end":144,"column_start":17,"column_end":21},"name":"DR13","qualname":"::x86::RD::DR13","value":"RD::DR13","parent":{"krate":0,"index":1264},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1307},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":81918,"byte_end":81922,"line_start":144,"line_end":144,"column_start":29,"column_end":33},"name":"DR14","qualname":"::x86::RD::DR14","value":"RD::DR14","parent":{"krate":0,"index":1264},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1310},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":81930,"byte_end":81934,"line_start":144,"line_end":144,"column_start":41,"column_end":45},"name":"DR15","qualname":"::x86::RD::DR15","value":"RD::DR15","parent":{"krate":0,"index":1264},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1264},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":81729,"byte_end":81731,"line_start":140,"line_end":140,"column_start":10,"column_end":12},"name":"RD","qualname":"::x86::RD","value":"pub enum RD {\n    DR0 = ,\n    DR1 = ,\n    DR2 = ,\n    DR3 = ,\n    DR4 = ,\n    DR5 = ,\n    DR6 = ,\n    DR7 = ,\n    DR8 = ,\n    DR9 = ,\n    DR10 = ,\n    DR11 = ,\n    DR12 = ,\n    DR13 = ,\n    DR14 = ,\n    DR15 = ,\n}","parent":null,"children":[{"krate":0,"index":1265},{"krate":0,"index":1268},{"krate":0,"index":1271},{"krate":0,"index":1274},{"krate":0,"index":1277},{"krate":0,"index":1280},{"krate":0,"index":1283},{"krate":0,"index":1286},{"krate":0,"index":1289},{"krate":0,"index":1292},{"krate":0,"index":1295},{"krate":0,"index":1298},{"krate":0,"index":1301},{"krate":0,"index":1304},{"krate":0,"index":1307},{"krate":0,"index":1310}],"decl_id":null,"docs":" 4-byte debug registers.\n","sig":null,"attributes":[{"value":"/ 4-byte debug registers.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":81618,"byte_end":81645,"line_start":137,"line_end":137,"column_start":1,"column_end":28}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":81646,"byte_end":81668,"line_start":138,"line_end":138,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1332},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":82082,"byte_end":82086,"line_start":152,"line_end":152,"column_start":5,"column_end":9},"name":"BND0","qualname":"::x86::RB::BND0","value":"RB::BND0","parent":{"krate":0,"index":1331},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1335},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":82094,"byte_end":82098,"line_start":152,"line_end":152,"column_start":17,"column_end":21},"name":"BND1","qualname":"::x86::RB::BND1","value":"RB::BND1","parent":{"krate":0,"index":1331},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1338},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":82106,"byte_end":82110,"line_start":152,"line_end":152,"column_start":29,"column_end":33},"name":"BND2","qualname":"::x86::RB::BND2","value":"RB::BND2","parent":{"krate":0,"index":1331},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1341},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":82118,"byte_end":82122,"line_start":152,"line_end":152,"column_start":41,"column_end":45},"name":"BND3","qualname":"::x86::RB::BND3","value":"RB::BND3","parent":{"krate":0,"index":1331},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1331},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":82073,"byte_end":82075,"line_start":151,"line_end":151,"column_start":10,"column_end":12},"name":"RB","qualname":"::x86::RB","value":"pub enum RB { BND0 = , BND1 = , BND2 = , BND3 = , }","parent":null,"children":[{"krate":0,"index":1332},{"krate":0,"index":1335},{"krate":0,"index":1338},{"krate":0,"index":1341}],"decl_id":null,"docs":" 16-byte bound registers.\n","sig":null,"attributes":[{"value":"/ 16-byte bound registers.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":81961,"byte_end":81989,"line_start":148,"line_end":148,"column_start":1,"column_end":29}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":81990,"byte_end":82012,"line_start":149,"line_end":149,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":309},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"aarch64","qualname":"::aarch64","value":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":317},{"krate":0,"index":320},{"krate":0,"index":323},{"krate":0,"index":326},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":333},{"krate":0,"index":336},{"krate":0,"index":1362},{"krate":0,"index":1376},{"krate":0,"index":1378},{"krate":0,"index":339},{"krate":0,"index":343},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":355},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":1380},{"krate":0,"index":1477},{"krate":0,"index":1479},{"krate":0,"index":1481},{"krate":0,"index":1482},{"krate":0,"index":1483},{"krate":0,"index":1485},{"krate":0,"index":1486},{"krate":0,"index":1488},{"krate":0,"index":1491},{"krate":0,"index":1493},{"krate":0,"index":1495},{"krate":0,"index":1592},{"krate":0,"index":1594},{"krate":0,"index":1596},{"krate":0,"index":1597},{"krate":0,"index":1598},{"krate":0,"index":1600},{"krate":0,"index":1601},{"krate":0,"index":1603},{"krate":0,"index":1606},{"krate":0,"index":1608},{"krate":0,"index":1610},{"krate":0,"index":1707},{"krate":0,"index":1709},{"krate":0,"index":1711},{"krate":0,"index":1712},{"krate":0,"index":1713},{"krate":0,"index":1715},{"krate":0,"index":1716},{"krate":0,"index":1718},{"krate":0,"index":1721},{"krate":0,"index":1723}],"decl_id":null,"docs":" Runtime support for the aarch64 architecture assembling target.","sig":null,"attributes":[{"value":"/ Runtime support for the aarch64 architecture assembling target.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":82379,"byte_end":82446,"line_start":1,"line_end":1,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":82447,"byte_end":82450,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The aarch64 instruction set features fixed-width 32-bit instructions and relative relocations up to 28 bits in size.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":82451,"byte_end":82571,"line_start":3,"line_end":3,"column_start":1,"column_end":121}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":82572,"byte_end":82575,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ The core relocation behaviour for this architecture is provided by the [`Aarch64Relocation`] type.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":82576,"byte_end":82678,"line_start":5,"line_end":5,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":82679,"byte_end":82682,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Next to that, this module contains the following:","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":82683,"byte_end":82736,"line_start":7,"line_end":7,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":82737,"byte_end":82740,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ## Type aliases","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":82741,"byte_end":82760,"line_start":9,"line_end":9,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":82761,"byte_end":82764,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Several specialized type aliases of the generic [`Assembler`] are provided as these are by far the most common usecase.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":82765,"byte_end":82888,"line_start":11,"line_end":11,"column_start":1,"column_end":124}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":82889,"byte_end":82892,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ## Enums","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":82893,"byte_end":82905,"line_start":13,"line_end":13,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":82906,"byte_end":82909,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ There are enumerator of every logically distinct register family usable in aarch64. ","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":82910,"byte_end":82998,"line_start":15,"line_end":15,"column_start":1,"column_end":89}},{"value":"/ These enums implement the [`Register`] trait and their discriminant values match their numeric encoding in dynamic register literals.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":82999,"byte_end":83136,"line_start":16,"line_end":16,"column_start":1,"column_end":138}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":83137,"byte_end":83140,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ *Note: The presence of some registers listed here is purely what is encodable. Check the relevant architecture documentation to find what is architecturally valid.*","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":83141,"byte_end":83309,"line_start":18,"line_end":18,"column_start":1,"column_end":169}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":83310,"byte_end":83313,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ## Functions","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":83314,"byte_end":83330,"line_start":20,"line_end":20,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":83331,"byte_end":83334,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The aarch64 architecture allows encoding several special types of immediates. The encoding implementations for these immediate types have been exposed to assist the user","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":83335,"byte_end":83508,"line_start":22,"line_end":22,"column_start":1,"column_end":174}},{"value":"/ in correctly using these instructions. They will return `Some(encoding)` only if the given value can be encoded losslessly in that immediate type.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":83509,"byte_end":83659,"line_start":23,"line_end":23,"column_start":1,"column_end":151}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1363},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":84042,"byte_end":84043,"line_start":35,"line_end":35,"column_start":5,"column_end":6},"name":"B","qualname":"::aarch64::Aarch64Relocation::B","value":"Aarch64Relocation::B","parent":{"krate":0,"index":1362},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1365},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":84116,"byte_end":84121,"line_start":37,"line_end":37,"column_start":5,"column_end":10},"name":"BCOND","qualname":"::aarch64::Aarch64Relocation::BCOND","value":"Aarch64Relocation::BCOND","parent":{"krate":0,"index":1362},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1367},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":84165,"byte_end":84168,"line_start":39,"line_end":39,"column_start":5,"column_end":8},"name":"ADR","qualname":"::aarch64::Aarch64Relocation::ADR","value":"Aarch64Relocation::ADR","parent":{"krate":0,"index":1362},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1369},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":84218,"byte_end":84222,"line_start":41,"line_end":41,"column_start":5,"column_end":9},"name":"ADRP","qualname":"::aarch64::Aarch64Relocation::ADRP","value":"Aarch64Relocation::ADRP","parent":{"krate":0,"index":1362},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1371},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":84269,"byte_end":84272,"line_start":43,"line_end":43,"column_start":5,"column_end":8},"name":"TBZ","qualname":"::aarch64::Aarch64Relocation::TBZ","value":"Aarch64Relocation::TBZ","parent":{"krate":0,"index":1362},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1373},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":84308,"byte_end":84313,"line_start":45,"line_end":45,"column_start":5,"column_end":10},"name":"Plain","qualname":"::aarch64::Aarch64Relocation::Plain","value":"Aarch64Relocation::Plain(RelocationSize)","parent":{"krate":0,"index":1362},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1362},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":83982,"byte_end":83999,"line_start":33,"line_end":33,"column_start":10,"column_end":27},"name":"Aarch64Relocation","qualname":"::aarch64::Aarch64Relocation","value":"pub enum Aarch64Relocation {\n    B,\n    BCOND,\n    ADR,\n    ADRP,\n    TBZ,\n    Plain(RelocationSize),\n}","parent":null,"children":[{"krate":0,"index":1363},{"krate":0,"index":1365},{"krate":0,"index":1367},{"krate":0,"index":1369},{"krate":0,"index":1371},{"krate":0,"index":1373}],"decl_id":null,"docs":" Relocation implementation for the aarch64 architecture.\n","sig":null,"attributes":[{"value":"/ Relocation implementation for the aarch64 architecture.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":83866,"byte_end":83925,"line_start":30,"line_end":30,"column_start":1,"column_end":60}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":83950,"byte_end":83972,"line_start":32,"line_end":32,"column_start":1,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":352},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":88963,"byte_end":88972,"line_start":191,"line_end":191,"column_start":10,"column_end":19},"name":"Assembler","qualname":"::aarch64::Assembler","value":"crate::Assembler<Aarch64Relocation>","parent":null,"children":[],"decl_id":null,"docs":" An aarch64 Assembler. This is aliased here for backwards compatability.\n","sig":null,"attributes":[{"value":"/ An aarch64 Assembler. This is aliased here for backwards compatability.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":88878,"byte_end":88953,"line_start":190,"line_end":190,"column_start":1,"column_end":76}}]},{"kind":"Type","id":{"krate":0,"index":353},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":89104,"byte_end":89120,"line_start":193,"line_end":193,"column_start":10,"column_end":26},"name":"AssemblyModifier","qualname":"::aarch64::AssemblyModifier","value":"crate::Modifier","parent":null,"children":[],"decl_id":null,"docs":" An aarch64 AssemblyModifier. This is aliased here for backwards compatability.\n","sig":null,"attributes":[{"value":"/ An aarch64 AssemblyModifier. This is aliased here for backwards compatability.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":89012,"byte_end":89094,"line_start":192,"line_end":192,"column_start":1,"column_end":83}}]},{"kind":"Type","id":{"krate":0,"index":355},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":89262,"byte_end":89281,"line_start":195,"line_end":195,"column_start":10,"column_end":29},"name":"UncommittedModifier","qualname":"::aarch64::UncommittedModifier","value":"crate::UncommittedModifier","parent":null,"children":[],"decl_id":null,"docs":" An aarch64 UncommittedModifier. This is aliased here for backwards compatability.\n","sig":null,"attributes":[{"value":"/ An aarch64 UncommittedModifier. This is aliased here for backwards compatability.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":89167,"byte_end":89252,"line_start":194,"line_end":194,"column_start":1,"column_end":86}}]},{"kind":"Function","id":{"krate":0,"index":357},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":89428,"byte_end":89458,"line_start":199,"line_end":199,"column_start":8,"column_end":38},"name":"encode_logical_immediate_32bit","qualname":"::aarch64::encode_logical_immediate_32bit","value":"pub fn encode_logical_immediate_32bit(u32) -> Option<u16>","parent":null,"children":[],"decl_id":null,"docs":" Helper function for validating that a given value can be encoded as a 32-bit logical immediate\n","sig":null,"attributes":[{"value":"/ Helper function for validating that a given value can be encoded as a 32-bit logical immediate","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":89322,"byte_end":89420,"line_start":198,"line_end":198,"column_start":1,"column_end":99}}]},{"kind":"Function","id":{"krate":0,"index":358},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":90214,"byte_end":90244,"line_start":222,"line_end":222,"column_start":8,"column_end":38},"name":"encode_logical_immediate_64bit","qualname":"::aarch64::encode_logical_immediate_64bit","value":"pub fn encode_logical_immediate_64bit(u64) -> Option<u16>","parent":null,"children":[],"decl_id":null,"docs":" Helper function for validating that a given value can be encoded as a 64-bit logical immediate\n","sig":null,"attributes":[{"value":"/ Helper function for validating that a given value can be encoded as a 64-bit logical immediate","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":90108,"byte_end":90206,"line_start":221,"line_end":221,"column_start":1,"column_end":99}}]},{"kind":"Function","id":{"krate":0,"index":359},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":91081,"byte_end":91112,"line_start":248,"line_end":248,"column_start":8,"column_end":39},"name":"encode_floating_point_immediate","qualname":"::aarch64::encode_floating_point_immediate","value":"pub fn encode_floating_point_immediate(f32) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Helper function for validating that a given value can be encoded as a floating point immediate\n","sig":null,"attributes":[{"value":"/ Helper function for validating that a given value can be encoded as a floating point immediate","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":90975,"byte_end":91073,"line_start":247,"line_end":247,"column_start":1,"column_end":99}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1381},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":91780,"byte_end":91782,"line_start":269,"line_end":269,"column_start":5,"column_end":7},"name":"X0","qualname":"::aarch64::RX::X0","value":"RX::X0","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1384},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":91791,"byte_end":91793,"line_start":269,"line_end":269,"column_start":16,"column_end":18},"name":"X1","qualname":"::aarch64::RX::X1","value":"RX::X1","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1387},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":91802,"byte_end":91804,"line_start":269,"line_end":269,"column_start":27,"column_end":29},"name":"X2","qualname":"::aarch64::RX::X2","value":"RX::X2","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1390},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":91813,"byte_end":91815,"line_start":269,"line_end":269,"column_start":38,"column_end":40},"name":"X3","qualname":"::aarch64::RX::X3","value":"RX::X3","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1393},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":91828,"byte_end":91830,"line_start":270,"line_end":270,"column_start":5,"column_end":7},"name":"X4","qualname":"::aarch64::RX::X4","value":"RX::X4","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1396},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":91839,"byte_end":91841,"line_start":270,"line_end":270,"column_start":16,"column_end":18},"name":"X5","qualname":"::aarch64::RX::X5","value":"RX::X5","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1399},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":91850,"byte_end":91852,"line_start":270,"line_end":270,"column_start":27,"column_end":29},"name":"X6","qualname":"::aarch64::RX::X6","value":"RX::X6","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1402},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":91861,"byte_end":91863,"line_start":270,"line_end":270,"column_start":38,"column_end":40},"name":"X7","qualname":"::aarch64::RX::X7","value":"RX::X7","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1405},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":91876,"byte_end":91878,"line_start":271,"line_end":271,"column_start":5,"column_end":7},"name":"X8","qualname":"::aarch64::RX::X8","value":"RX::X8","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1408},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":91887,"byte_end":91889,"line_start":271,"line_end":271,"column_start":16,"column_end":18},"name":"X9","qualname":"::aarch64::RX::X9","value":"RX::X9","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1411},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":91898,"byte_end":91901,"line_start":271,"line_end":271,"column_start":27,"column_end":30},"name":"X10","qualname":"::aarch64::RX::X10","value":"RX::X10","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1414},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":91909,"byte_end":91912,"line_start":271,"line_end":271,"column_start":38,"column_end":41},"name":"X11","qualname":"::aarch64::RX::X11","value":"RX::X11","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1417},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":91924,"byte_end":91927,"line_start":272,"line_end":272,"column_start":5,"column_end":8},"name":"X12","qualname":"::aarch64::RX::X12","value":"RX::X12","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1420},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":91935,"byte_end":91938,"line_start":272,"line_end":272,"column_start":16,"column_end":19},"name":"X13","qualname":"::aarch64::RX::X13","value":"RX::X13","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1423},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":91946,"byte_end":91949,"line_start":272,"line_end":272,"column_start":27,"column_end":30},"name":"X14","qualname":"::aarch64::RX::X14","value":"RX::X14","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1426},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":91957,"byte_end":91960,"line_start":272,"line_end":272,"column_start":38,"column_end":41},"name":"X15","qualname":"::aarch64::RX::X15","value":"RX::X15","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1429},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":91972,"byte_end":91975,"line_start":273,"line_end":273,"column_start":5,"column_end":8},"name":"X16","qualname":"::aarch64::RX::X16","value":"RX::X16","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1432},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":91983,"byte_end":91986,"line_start":273,"line_end":273,"column_start":16,"column_end":19},"name":"X17","qualname":"::aarch64::RX::X17","value":"RX::X17","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1435},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":91994,"byte_end":91997,"line_start":273,"line_end":273,"column_start":27,"column_end":30},"name":"X18","qualname":"::aarch64::RX::X18","value":"RX::X18","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1438},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92005,"byte_end":92008,"line_start":273,"line_end":273,"column_start":38,"column_end":41},"name":"X19","qualname":"::aarch64::RX::X19","value":"RX::X19","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1441},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92020,"byte_end":92023,"line_start":274,"line_end":274,"column_start":5,"column_end":8},"name":"X20","qualname":"::aarch64::RX::X20","value":"RX::X20","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1444},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92031,"byte_end":92034,"line_start":274,"line_end":274,"column_start":16,"column_end":19},"name":"X21","qualname":"::aarch64::RX::X21","value":"RX::X21","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1447},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92042,"byte_end":92045,"line_start":274,"line_end":274,"column_start":27,"column_end":30},"name":"X22","qualname":"::aarch64::RX::X22","value":"RX::X22","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1450},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92053,"byte_end":92056,"line_start":274,"line_end":274,"column_start":38,"column_end":41},"name":"X23","qualname":"::aarch64::RX::X23","value":"RX::X23","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1453},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92068,"byte_end":92071,"line_start":275,"line_end":275,"column_start":5,"column_end":8},"name":"X24","qualname":"::aarch64::RX::X24","value":"RX::X24","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1456},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92079,"byte_end":92082,"line_start":275,"line_end":275,"column_start":16,"column_end":19},"name":"X25","qualname":"::aarch64::RX::X25","value":"RX::X25","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1459},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92090,"byte_end":92093,"line_start":275,"line_end":275,"column_start":27,"column_end":30},"name":"X26","qualname":"::aarch64::RX::X26","value":"RX::X26","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1462},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92101,"byte_end":92104,"line_start":275,"line_end":275,"column_start":38,"column_end":41},"name":"X27","qualname":"::aarch64::RX::X27","value":"RX::X27","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1465},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92116,"byte_end":92119,"line_start":276,"line_end":276,"column_start":5,"column_end":8},"name":"X28","qualname":"::aarch64::RX::X28","value":"RX::X28","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1468},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92127,"byte_end":92130,"line_start":276,"line_end":276,"column_start":16,"column_end":19},"name":"X29","qualname":"::aarch64::RX::X29","value":"RX::X29","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1471},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92138,"byte_end":92141,"line_start":276,"line_end":276,"column_start":27,"column_end":30},"name":"X30","qualname":"::aarch64::RX::X30","value":"RX::X30","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1474},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92149,"byte_end":92152,"line_start":276,"line_end":276,"column_start":38,"column_end":41},"name":"XZR","qualname":"::aarch64::RX::XZR","value":"RX::XZR","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1380},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":91771,"byte_end":91773,"line_start":268,"line_end":268,"column_start":10,"column_end":12},"name":"RX","qualname":"::aarch64::RX","value":"pub enum RX {\n    X0 = ,\n    X1 = ,\n    X2 = ,\n    X3 = ,\n    X4 = ,\n    X5 = ,\n    X6 = ,\n    X7 = ,\n    X8 = ,\n    X9 = ,\n    X10 = ,\n    X11 = ,\n    X12 = ,\n    X13 = ,\n    X14 = ,\n    X15 = ,\n    X16 = ,\n    X17 = ,\n    X18 = ,\n    X19 = ,\n    X20 = ,\n    X21 = ,\n    X22 = ,\n    X23 = ,\n    X24 = ,\n    X25 = ,\n    X26 = ,\n    X27 = ,\n    X28 = ,\n    X29 = ,\n    X30 = ,\n    XZR = ,\n}","parent":null,"children":[{"krate":0,"index":1381},{"krate":0,"index":1384},{"krate":0,"index":1387},{"krate":0,"index":1390},{"krate":0,"index":1393},{"krate":0,"index":1396},{"krate":0,"index":1399},{"krate":0,"index":1402},{"krate":0,"index":1405},{"krate":0,"index":1408},{"krate":0,"index":1411},{"krate":0,"index":1414},{"krate":0,"index":1417},{"krate":0,"index":1420},{"krate":0,"index":1423},{"krate":0,"index":1426},{"krate":0,"index":1429},{"krate":0,"index":1432},{"krate":0,"index":1435},{"krate":0,"index":1438},{"krate":0,"index":1441},{"krate":0,"index":1444},{"krate":0,"index":1447},{"krate":0,"index":1450},{"krate":0,"index":1453},{"krate":0,"index":1456},{"krate":0,"index":1459},{"krate":0,"index":1462},{"krate":0,"index":1465},{"krate":0,"index":1468},{"krate":0,"index":1471},{"krate":0,"index":1474}],"decl_id":null,"docs":" 4 or 8-byte general purpopse registers, where X31 is the zero register.\n","sig":null,"attributes":[{"value":"/ 4 or 8-byte general purpopse registers, where X31 is the zero register.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":91612,"byte_end":91687,"line_start":265,"line_end":265,"column_start":1,"column_end":76}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":91688,"byte_end":91710,"line_start":266,"line_end":266,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1496},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92402,"byte_end":92404,"line_start":285,"line_end":285,"column_start":5,"column_end":7},"name":"X0","qualname":"::aarch64::RXSP::X0","value":"RXSP::X0","parent":{"krate":0,"index":1495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1499},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92413,"byte_end":92415,"line_start":285,"line_end":285,"column_start":16,"column_end":18},"name":"X1","qualname":"::aarch64::RXSP::X1","value":"RXSP::X1","parent":{"krate":0,"index":1495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1502},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92424,"byte_end":92426,"line_start":285,"line_end":285,"column_start":27,"column_end":29},"name":"X2","qualname":"::aarch64::RXSP::X2","value":"RXSP::X2","parent":{"krate":0,"index":1495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1505},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92435,"byte_end":92437,"line_start":285,"line_end":285,"column_start":38,"column_end":40},"name":"X3","qualname":"::aarch64::RXSP::X3","value":"RXSP::X3","parent":{"krate":0,"index":1495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1508},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92450,"byte_end":92452,"line_start":286,"line_end":286,"column_start":5,"column_end":7},"name":"X4","qualname":"::aarch64::RXSP::X4","value":"RXSP::X4","parent":{"krate":0,"index":1495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1511},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92461,"byte_end":92463,"line_start":286,"line_end":286,"column_start":16,"column_end":18},"name":"X5","qualname":"::aarch64::RXSP::X5","value":"RXSP::X5","parent":{"krate":0,"index":1495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1514},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92472,"byte_end":92474,"line_start":286,"line_end":286,"column_start":27,"column_end":29},"name":"X6","qualname":"::aarch64::RXSP::X6","value":"RXSP::X6","parent":{"krate":0,"index":1495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1517},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92483,"byte_end":92485,"line_start":286,"line_end":286,"column_start":38,"column_end":40},"name":"X7","qualname":"::aarch64::RXSP::X7","value":"RXSP::X7","parent":{"krate":0,"index":1495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1520},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92498,"byte_end":92500,"line_start":287,"line_end":287,"column_start":5,"column_end":7},"name":"X8","qualname":"::aarch64::RXSP::X8","value":"RXSP::X8","parent":{"krate":0,"index":1495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1523},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92509,"byte_end":92511,"line_start":287,"line_end":287,"column_start":16,"column_end":18},"name":"X9","qualname":"::aarch64::RXSP::X9","value":"RXSP::X9","parent":{"krate":0,"index":1495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1526},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92520,"byte_end":92523,"line_start":287,"line_end":287,"column_start":27,"column_end":30},"name":"X10","qualname":"::aarch64::RXSP::X10","value":"RXSP::X10","parent":{"krate":0,"index":1495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1529},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92531,"byte_end":92534,"line_start":287,"line_end":287,"column_start":38,"column_end":41},"name":"X11","qualname":"::aarch64::RXSP::X11","value":"RXSP::X11","parent":{"krate":0,"index":1495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1532},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92546,"byte_end":92549,"line_start":288,"line_end":288,"column_start":5,"column_end":8},"name":"X12","qualname":"::aarch64::RXSP::X12","value":"RXSP::X12","parent":{"krate":0,"index":1495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1535},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92557,"byte_end":92560,"line_start":288,"line_end":288,"column_start":16,"column_end":19},"name":"X13","qualname":"::aarch64::RXSP::X13","value":"RXSP::X13","parent":{"krate":0,"index":1495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1538},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92568,"byte_end":92571,"line_start":288,"line_end":288,"column_start":27,"column_end":30},"name":"X14","qualname":"::aarch64::RXSP::X14","value":"RXSP::X14","parent":{"krate":0,"index":1495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1541},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92579,"byte_end":92582,"line_start":288,"line_end":288,"column_start":38,"column_end":41},"name":"X15","qualname":"::aarch64::RXSP::X15","value":"RXSP::X15","parent":{"krate":0,"index":1495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1544},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92594,"byte_end":92597,"line_start":289,"line_end":289,"column_start":5,"column_end":8},"name":"X16","qualname":"::aarch64::RXSP::X16","value":"RXSP::X16","parent":{"krate":0,"index":1495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1547},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92605,"byte_end":92608,"line_start":289,"line_end":289,"column_start":16,"column_end":19},"name":"X17","qualname":"::aarch64::RXSP::X17","value":"RXSP::X17","parent":{"krate":0,"index":1495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1550},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92616,"byte_end":92619,"line_start":289,"line_end":289,"column_start":27,"column_end":30},"name":"X18","qualname":"::aarch64::RXSP::X18","value":"RXSP::X18","parent":{"krate":0,"index":1495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1553},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92627,"byte_end":92630,"line_start":289,"line_end":289,"column_start":38,"column_end":41},"name":"X19","qualname":"::aarch64::RXSP::X19","value":"RXSP::X19","parent":{"krate":0,"index":1495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1556},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92642,"byte_end":92645,"line_start":290,"line_end":290,"column_start":5,"column_end":8},"name":"X20","qualname":"::aarch64::RXSP::X20","value":"RXSP::X20","parent":{"krate":0,"index":1495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1559},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92653,"byte_end":92656,"line_start":290,"line_end":290,"column_start":16,"column_end":19},"name":"X21","qualname":"::aarch64::RXSP::X21","value":"RXSP::X21","parent":{"krate":0,"index":1495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1562},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92664,"byte_end":92667,"line_start":290,"line_end":290,"column_start":27,"column_end":30},"name":"X22","qualname":"::aarch64::RXSP::X22","value":"RXSP::X22","parent":{"krate":0,"index":1495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1565},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92675,"byte_end":92678,"line_start":290,"line_end":290,"column_start":38,"column_end":41},"name":"X23","qualname":"::aarch64::RXSP::X23","value":"RXSP::X23","parent":{"krate":0,"index":1495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1568},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92690,"byte_end":92693,"line_start":291,"line_end":291,"column_start":5,"column_end":8},"name":"X24","qualname":"::aarch64::RXSP::X24","value":"RXSP::X24","parent":{"krate":0,"index":1495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1571},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92701,"byte_end":92704,"line_start":291,"line_end":291,"column_start":16,"column_end":19},"name":"X25","qualname":"::aarch64::RXSP::X25","value":"RXSP::X25","parent":{"krate":0,"index":1495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1574},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92712,"byte_end":92715,"line_start":291,"line_end":291,"column_start":27,"column_end":30},"name":"X26","qualname":"::aarch64::RXSP::X26","value":"RXSP::X26","parent":{"krate":0,"index":1495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1577},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92723,"byte_end":92726,"line_start":291,"line_end":291,"column_start":38,"column_end":41},"name":"X27","qualname":"::aarch64::RXSP::X27","value":"RXSP::X27","parent":{"krate":0,"index":1495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1580},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92738,"byte_end":92741,"line_start":292,"line_end":292,"column_start":5,"column_end":8},"name":"X28","qualname":"::aarch64::RXSP::X28","value":"RXSP::X28","parent":{"krate":0,"index":1495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1583},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92749,"byte_end":92752,"line_start":292,"line_end":292,"column_start":16,"column_end":19},"name":"X29","qualname":"::aarch64::RXSP::X29","value":"RXSP::X29","parent":{"krate":0,"index":1495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1586},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92760,"byte_end":92763,"line_start":292,"line_end":292,"column_start":27,"column_end":30},"name":"X30","qualname":"::aarch64::RXSP::X30","value":"RXSP::X30","parent":{"krate":0,"index":1495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1589},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92771,"byte_end":92773,"line_start":292,"line_end":292,"column_start":38,"column_end":40},"name":"SP","qualname":"::aarch64::RXSP::SP","value":"RXSP::SP","parent":{"krate":0,"index":1495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1495},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92391,"byte_end":92395,"line_start":284,"line_end":284,"column_start":10,"column_end":14},"name":"RXSP","qualname":"::aarch64::RXSP","value":"pub enum RXSP {\n    X0 = ,\n    X1 = ,\n    X2 = ,\n    X3 = ,\n    X4 = ,\n    X5 = ,\n    X6 = ,\n    X7 = ,\n    X8 = ,\n    X9 = ,\n    X10 = ,\n    X11 = ,\n    X12 = ,\n    X13 = ,\n    X14 = ,\n    X15 = ,\n    X16 = ,\n    X17 = ,\n    X18 = ,\n    X19 = ,\n    X20 = ,\n    X21 = ,\n    X22 = ,\n    X23 = ,\n    X24 = ,\n    X25 = ,\n    X26 = ,\n    X27 = ,\n    X28 = ,\n    X29 = ,\n    X30 = ,\n    SP = ,\n}","parent":null,"children":[{"krate":0,"index":1496},{"krate":0,"index":1499},{"krate":0,"index":1502},{"krate":0,"index":1505},{"krate":0,"index":1508},{"krate":0,"index":1511},{"krate":0,"index":1514},{"krate":0,"index":1517},{"krate":0,"index":1520},{"krate":0,"index":1523},{"krate":0,"index":1526},{"krate":0,"index":1529},{"krate":0,"index":1532},{"krate":0,"index":1535},{"krate":0,"index":1538},{"krate":0,"index":1541},{"krate":0,"index":1544},{"krate":0,"index":1547},{"krate":0,"index":1550},{"krate":0,"index":1553},{"krate":0,"index":1556},{"krate":0,"index":1559},{"krate":0,"index":1562},{"krate":0,"index":1565},{"krate":0,"index":1568},{"krate":0,"index":1571},{"krate":0,"index":1574},{"krate":0,"index":1577},{"krate":0,"index":1580},{"krate":0,"index":1583},{"krate":0,"index":1586},{"krate":0,"index":1589}],"decl_id":null,"docs":" 0x1F addresses both XZR and SP (disambiguated by context). This enum is a mirror of RX just\n with the SP in place of XZR.\n","sig":null,"attributes":[{"value":"/ 0x1F addresses both XZR and SP (disambiguated by context). This enum is a mirror of RX just","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92179,"byte_end":92274,"line_start":280,"line_end":280,"column_start":1,"column_end":96}},{"value":"/ with the SP in place of XZR.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92275,"byte_end":92307,"line_start":281,"line_end":281,"column_start":1,"column_end":33}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92308,"byte_end":92330,"line_start":282,"line_end":282,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1611},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92958,"byte_end":92960,"line_start":300,"line_end":300,"column_start":5,"column_end":7},"name":"V0","qualname":"::aarch64::RV::V0","value":"RV::V0","parent":{"krate":0,"index":1610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1614},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92969,"byte_end":92971,"line_start":300,"line_end":300,"column_start":16,"column_end":18},"name":"V1","qualname":"::aarch64::RV::V1","value":"RV::V1","parent":{"krate":0,"index":1610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1617},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92980,"byte_end":92982,"line_start":300,"line_end":300,"column_start":27,"column_end":29},"name":"V2","qualname":"::aarch64::RV::V2","value":"RV::V2","parent":{"krate":0,"index":1610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1620},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92991,"byte_end":92993,"line_start":300,"line_end":300,"column_start":38,"column_end":40},"name":"V3","qualname":"::aarch64::RV::V3","value":"RV::V3","parent":{"krate":0,"index":1610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1623},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":93006,"byte_end":93008,"line_start":301,"line_end":301,"column_start":5,"column_end":7},"name":"V4","qualname":"::aarch64::RV::V4","value":"RV::V4","parent":{"krate":0,"index":1610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1626},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":93017,"byte_end":93019,"line_start":301,"line_end":301,"column_start":16,"column_end":18},"name":"V5","qualname":"::aarch64::RV::V5","value":"RV::V5","parent":{"krate":0,"index":1610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1629},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":93028,"byte_end":93030,"line_start":301,"line_end":301,"column_start":27,"column_end":29},"name":"V6","qualname":"::aarch64::RV::V6","value":"RV::V6","parent":{"krate":0,"index":1610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1632},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":93039,"byte_end":93041,"line_start":301,"line_end":301,"column_start":38,"column_end":40},"name":"V7","qualname":"::aarch64::RV::V7","value":"RV::V7","parent":{"krate":0,"index":1610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1635},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":93054,"byte_end":93056,"line_start":302,"line_end":302,"column_start":5,"column_end":7},"name":"V8","qualname":"::aarch64::RV::V8","value":"RV::V8","parent":{"krate":0,"index":1610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1638},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":93065,"byte_end":93067,"line_start":302,"line_end":302,"column_start":16,"column_end":18},"name":"V9","qualname":"::aarch64::RV::V9","value":"RV::V9","parent":{"krate":0,"index":1610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1641},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":93076,"byte_end":93079,"line_start":302,"line_end":302,"column_start":27,"column_end":30},"name":"V10","qualname":"::aarch64::RV::V10","value":"RV::V10","parent":{"krate":0,"index":1610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1644},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":93087,"byte_end":93090,"line_start":302,"line_end":302,"column_start":38,"column_end":41},"name":"V11","qualname":"::aarch64::RV::V11","value":"RV::V11","parent":{"krate":0,"index":1610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1647},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":93102,"byte_end":93105,"line_start":303,"line_end":303,"column_start":5,"column_end":8},"name":"V12","qualname":"::aarch64::RV::V12","value":"RV::V12","parent":{"krate":0,"index":1610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1650},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":93113,"byte_end":93116,"line_start":303,"line_end":303,"column_start":16,"column_end":19},"name":"V13","qualname":"::aarch64::RV::V13","value":"RV::V13","parent":{"krate":0,"index":1610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1653},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":93124,"byte_end":93127,"line_start":303,"line_end":303,"column_start":27,"column_end":30},"name":"V14","qualname":"::aarch64::RV::V14","value":"RV::V14","parent":{"krate":0,"index":1610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1656},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":93135,"byte_end":93138,"line_start":303,"line_end":303,"column_start":38,"column_end":41},"name":"V15","qualname":"::aarch64::RV::V15","value":"RV::V15","parent":{"krate":0,"index":1610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1659},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":93150,"byte_end":93153,"line_start":304,"line_end":304,"column_start":5,"column_end":8},"name":"V16","qualname":"::aarch64::RV::V16","value":"RV::V16","parent":{"krate":0,"index":1610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1662},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":93161,"byte_end":93164,"line_start":304,"line_end":304,"column_start":16,"column_end":19},"name":"V17","qualname":"::aarch64::RV::V17","value":"RV::V17","parent":{"krate":0,"index":1610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1665},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":93172,"byte_end":93175,"line_start":304,"line_end":304,"column_start":27,"column_end":30},"name":"V18","qualname":"::aarch64::RV::V18","value":"RV::V18","parent":{"krate":0,"index":1610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1668},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":93183,"byte_end":93186,"line_start":304,"line_end":304,"column_start":38,"column_end":41},"name":"V19","qualname":"::aarch64::RV::V19","value":"RV::V19","parent":{"krate":0,"index":1610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1671},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":93198,"byte_end":93201,"line_start":305,"line_end":305,"column_start":5,"column_end":8},"name":"V20","qualname":"::aarch64::RV::V20","value":"RV::V20","parent":{"krate":0,"index":1610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1674},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":93209,"byte_end":93212,"line_start":305,"line_end":305,"column_start":16,"column_end":19},"name":"V21","qualname":"::aarch64::RV::V21","value":"RV::V21","parent":{"krate":0,"index":1610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1677},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":93220,"byte_end":93223,"line_start":305,"line_end":305,"column_start":27,"column_end":30},"name":"V22","qualname":"::aarch64::RV::V22","value":"RV::V22","parent":{"krate":0,"index":1610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1680},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":93231,"byte_end":93234,"line_start":305,"line_end":305,"column_start":38,"column_end":41},"name":"V23","qualname":"::aarch64::RV::V23","value":"RV::V23","parent":{"krate":0,"index":1610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1683},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":93246,"byte_end":93249,"line_start":306,"line_end":306,"column_start":5,"column_end":8},"name":"V24","qualname":"::aarch64::RV::V24","value":"RV::V24","parent":{"krate":0,"index":1610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1686},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":93257,"byte_end":93260,"line_start":306,"line_end":306,"column_start":16,"column_end":19},"name":"V25","qualname":"::aarch64::RV::V25","value":"RV::V25","parent":{"krate":0,"index":1610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1689},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":93268,"byte_end":93271,"line_start":306,"line_end":306,"column_start":27,"column_end":30},"name":"V26","qualname":"::aarch64::RV::V26","value":"RV::V26","parent":{"krate":0,"index":1610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1692},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":93279,"byte_end":93282,"line_start":306,"line_end":306,"column_start":38,"column_end":41},"name":"V27","qualname":"::aarch64::RV::V27","value":"RV::V27","parent":{"krate":0,"index":1610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1695},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":93294,"byte_end":93297,"line_start":307,"line_end":307,"column_start":5,"column_end":8},"name":"V28","qualname":"::aarch64::RV::V28","value":"RV::V28","parent":{"krate":0,"index":1610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1698},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":93305,"byte_end":93308,"line_start":307,"line_end":307,"column_start":16,"column_end":19},"name":"V29","qualname":"::aarch64::RV::V29","value":"RV::V29","parent":{"krate":0,"index":1610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1701},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":93316,"byte_end":93319,"line_start":307,"line_end":307,"column_start":27,"column_end":30},"name":"V30","qualname":"::aarch64::RV::V30","value":"RV::V30","parent":{"krate":0,"index":1610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1704},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":93327,"byte_end":93330,"line_start":307,"line_end":307,"column_start":38,"column_end":41},"name":"V31","qualname":"::aarch64::RV::V31","value":"RV::V31","parent":{"krate":0,"index":1610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1610},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92949,"byte_end":92951,"line_start":299,"line_end":299,"column_start":10,"column_end":12},"name":"RV","qualname":"::aarch64::RV","value":"pub enum RV {\n    V0 = ,\n    V1 = ,\n    V2 = ,\n    V3 = ,\n    V4 = ,\n    V5 = ,\n    V6 = ,\n    V7 = ,\n    V8 = ,\n    V9 = ,\n    V10 = ,\n    V11 = ,\n    V12 = ,\n    V13 = ,\n    V14 = ,\n    V15 = ,\n    V16 = ,\n    V17 = ,\n    V18 = ,\n    V19 = ,\n    V20 = ,\n    V21 = ,\n    V22 = ,\n    V23 = ,\n    V24 = ,\n    V25 = ,\n    V26 = ,\n    V27 = ,\n    V28 = ,\n    V29 = ,\n    V30 = ,\n    V31 = ,\n}","parent":null,"children":[{"krate":0,"index":1611},{"krate":0,"index":1614},{"krate":0,"index":1617},{"krate":0,"index":1620},{"krate":0,"index":1623},{"krate":0,"index":1626},{"krate":0,"index":1629},{"krate":0,"index":1632},{"krate":0,"index":1635},{"krate":0,"index":1638},{"krate":0,"index":1641},{"krate":0,"index":1644},{"krate":0,"index":1647},{"krate":0,"index":1650},{"krate":0,"index":1653},{"krate":0,"index":1656},{"krate":0,"index":1659},{"krate":0,"index":1662},{"krate":0,"index":1665},{"krate":0,"index":1668},{"krate":0,"index":1671},{"krate":0,"index":1674},{"krate":0,"index":1677},{"krate":0,"index":1680},{"krate":0,"index":1683},{"krate":0,"index":1686},{"krate":0,"index":1689},{"krate":0,"index":1692},{"krate":0,"index":1695},{"krate":0,"index":1698},{"krate":0,"index":1701},{"krate":0,"index":1704}],"decl_id":null,"docs":" 1, 2, 4, 8 or 16-bytes scalar FP / vector SIMD registers. \n","sig":null,"attributes":[{"value":"/ 1, 2, 4, 8 or 16-bytes scalar FP / vector SIMD registers. ","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92803,"byte_end":92865,"line_start":296,"line_end":296,"column_start":1,"column_end":63}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":92866,"byte_end":92888,"line_start":297,"line_end":297,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":1725},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":1933,"byte_end":1947,"line_start":63,"line_end":63,"column_start":12,"column_end":26},"name":"AssemblyOffset","qualname":"::AssemblyOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct representing an offset into the assembling buffer of a `DynasmLabelApi` struct.\n The wrapped `usize` is the offset from the start of the assembling buffer in bytes.\n","sig":null,"attributes":[{"value":"/ A struct representing an offset into the assembling buffer of a `DynasmLabelApi` struct.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":1673,"byte_end":1765,"line_start":60,"line_end":60,"column_start":1,"column_end":93}},{"value":"/ The wrapped `usize` is the offset from the start of the assembling buffer in bytes.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":1766,"byte_end":1853,"line_start":61,"line_end":61,"column_start":1,"column_end":88}}]},{"kind":"Field","id":{"krate":0,"index":1727},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":1948,"byte_end":1957,"line_start":63,"line_end":63,"column_start":27,"column_end":36},"name":"0","qualname":"::AssemblyOffset::0","value":"usize","parent":{"krate":0,"index":1725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1747},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":2043,"byte_end":2055,"line_start":67,"line_end":67,"column_start":12,"column_end":24},"name":"DynamicLabel","qualname":"::DynamicLabel","value":"","parent":null,"children":[],"decl_id":null,"docs":" A dynamic label\n","sig":null,"attributes":[{"value":"/ A dynamic label","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":1961,"byte_end":1980,"line_start":65,"line_end":65,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":2192,"byte_end":2198,"line_start":72,"line_end":72,"column_start":12,"column_end":18},"name":"get_id","qualname":"<DynamicLabel>::get_id","value":"pub fn get_id(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the internal ID of this dynamic label. This is only useful for debugging purposes.\n","sig":null,"attributes":[{"value":"/ Get the internal ID of this dynamic label. This is only useful for debugging purposes.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":2090,"byte_end":2180,"line_start":71,"line_end":71,"column_start":5,"column_end":95}}]},{"kind":"Struct","id":{"krate":0,"index":1765},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":2435,"byte_end":2443,"line_start":81,"line_end":81,"column_start":12,"column_end":20},"name":"Executor","qualname":"::Executor","value":"Executor {  }","parent":null,"children":[{"krate":0,"index":1766}],"decl_id":null,"docs":" A read-only shared reference to the executable buffer inside an Assembler. By\n locking it the internal `ExecutableBuffer` can be accessed and executed.\n","sig":null,"attributes":[{"value":"/ A read-only shared reference to the executable buffer inside an Assembler. By","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":2241,"byte_end":2322,"line_start":78,"line_end":78,"column_start":1,"column_end":82}},{"value":"/ locking it the internal `ExecutableBuffer` can be accessed and executed.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":2323,"byte_end":2399,"line_start":79,"line_end":79,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":2960,"byte_end":2964,"line_start":93,"line_end":93,"column_start":12,"column_end":16},"name":"lock","qualname":"<Executor>::lock","value":"pub fn lock(&Self) -> RwLockReadGuard<, ExecutableBuffer>","parent":null,"children":[],"decl_id":null,"docs":" Gain read-access to the internal `ExecutableBuffer`. While the returned guard\n is alive, it can be used to read and execute from the `ExecutableBuffer`.\n Any pointers created to the `Executablebuffer` should no longer be used when\n the guard is dropped.\n","sig":null,"attributes":[{"value":"/ Gain read-access to the internal `ExecutableBuffer`. While the returned guard","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":2656,"byte_end":2737,"line_start":88,"line_end":88,"column_start":5,"column_end":86}},{"value":"/ is alive, it can be used to read and execute from the `ExecutableBuffer`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":2742,"byte_end":2819,"line_start":89,"line_end":89,"column_start":5,"column_end":82}},{"value":"/ Any pointers created to the `Executablebuffer` should no longer be used when","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":2824,"byte_end":2904,"line_start":90,"line_end":90,"column_start":5,"column_end":85}},{"value":"/ the guard is dropped.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":2909,"byte_end":2934,"line_start":91,"line_end":91,"column_start":5,"column_end":30}},{"value":"inline","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":2939,"byte_end":2948,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1772},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":3230,"byte_end":3235,"line_start":103,"line_end":103,"column_start":5,"column_end":10},"name":"Local","qualname":"::LabelKind::Local","value":"LabelKind::Local(&'static str)","parent":{"krate":0,"index":1771},"children":[],"decl_id":null,"docs":" A local label, like `label:`\n","sig":null,"attributes":[{"value":"/ A local label, like `label:`","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":3193,"byte_end":3225,"line_start":102,"line_end":102,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1775},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":3295,"byte_end":3301,"line_start":105,"line_end":105,"column_start":5,"column_end":11},"name":"Global","qualname":"::LabelKind::Global","value":"LabelKind::Global(&'static str)","parent":{"krate":0,"index":1771},"children":[],"decl_id":null,"docs":" A global label, like `->label:`\n","sig":null,"attributes":[{"value":"/ A global label, like `->label:`","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":3255,"byte_end":3290,"line_start":104,"line_end":104,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1778},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":3362,"byte_end":3369,"line_start":107,"line_end":107,"column_start":5,"column_end":12},"name":"Dynamic","qualname":"::LabelKind::Dynamic","value":"LabelKind::Dynamic(DynamicLabel)","parent":{"krate":0,"index":1771},"children":[],"decl_id":null,"docs":" A dynamic label, like `=>value:`\n","sig":null,"attributes":[{"value":"/ A dynamic label, like `=>value:`","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":3321,"byte_end":3357,"line_start":106,"line_end":106,"column_start":5,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":1771},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":3177,"byte_end":3186,"line_start":101,"line_end":101,"column_start":10,"column_end":19},"name":"LabelKind","qualname":"::LabelKind","value":"pub enum LabelKind {\n    Local(&'static str),\n    Global(&'static str),\n    Dynamic(DynamicLabel),\n}","parent":null,"children":[{"krate":0,"index":1772},{"krate":0,"index":1775},{"krate":0,"index":1778}],"decl_id":null,"docs":" A description of a label. Used for error reporting.\n","sig":null,"attributes":[{"value":"/ A description of a label. Used for error reporting.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":3061,"byte_end":3116,"line_start":99,"line_end":99,"column_start":1,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1797},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":3940,"byte_end":3947,"line_start":125,"line_end":125,"column_start":5,"column_end":12},"name":"Forward","qualname":"::TargetKind::Forward","value":"TargetKind::Forward(&'static str)","parent":{"krate":0,"index":1796},"children":[],"decl_id":null,"docs":" This targets a local label with the specified name that still has to be defined.\n","sig":null,"attributes":[{"value":"/ This targets a local label with the specified name that still has to be defined.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":3851,"byte_end":3935,"line_start":124,"line_end":124,"column_start":5,"column_end":89}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1800},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":4063,"byte_end":4071,"line_start":127,"line_end":127,"column_start":5,"column_end":13},"name":"Backward","qualname":"::TargetKind::Backward","value":"TargetKind::Backward(&'static str)","parent":{"krate":0,"index":1796},"children":[],"decl_id":null,"docs":" This targets a local label with the specified name that was already previously defined.\n","sig":null,"attributes":[{"value":"/ This targets a local label with the specified name that was already previously defined.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":3967,"byte_end":4058,"line_start":126,"line_end":126,"column_start":5,"column_end":96}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1803},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":4152,"byte_end":4158,"line_start":129,"line_end":129,"column_start":5,"column_end":11},"name":"Global","qualname":"::TargetKind::Global","value":"TargetKind::Global(&'static str)","parent":{"krate":0,"index":1796},"children":[],"decl_id":null,"docs":" This targets a global label with the specified name.\n","sig":null,"attributes":[{"value":"/ This targets a global label with the specified name.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":4091,"byte_end":4147,"line_start":128,"line_end":128,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1806},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":4228,"byte_end":4235,"line_start":131,"line_end":131,"column_start":5,"column_end":12},"name":"Dynamic","qualname":"::TargetKind::Dynamic","value":"TargetKind::Dynamic(DynamicLabel)","parent":{"krate":0,"index":1796},"children":[],"decl_id":null,"docs":" This targets the specified dynamic label.\n","sig":null,"attributes":[{"value":"/ This targets the specified dynamic label.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":4178,"byte_end":4223,"line_start":130,"line_end":130,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1809},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":4299,"byte_end":4305,"line_start":133,"line_end":133,"column_start":5,"column_end":11},"name":"Extern","qualname":"::TargetKind::Extern","value":"TargetKind::Extern(usize)","parent":{"krate":0,"index":1796},"children":[],"decl_id":null,"docs":" This targets the specified address.\n","sig":null,"attributes":[{"value":"/ This targets the specified address.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":4255,"byte_end":4294,"line_start":132,"line_end":132,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1812},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":4416,"byte_end":4423,"line_start":135,"line_end":135,"column_start":5,"column_end":12},"name":"Managed","qualname":"::TargetKind::Managed","value":"TargetKind::Managed","parent":{"krate":0,"index":1796},"children":[],"decl_id":null,"docs":" An already resolved relocation that needs to be adjusted when the buffer moves in memory.\n","sig":null,"attributes":[{"value":"/ An already resolved relocation that needs to be adjusted when the buffer moves in memory.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":4318,"byte_end":4411,"line_start":134,"line_end":134,"column_start":5,"column_end":98}}]},{"kind":"Enum","id":{"krate":0,"index":1796},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":3834,"byte_end":3844,"line_start":123,"line_end":123,"column_start":10,"column_end":20},"name":"TargetKind","qualname":"::TargetKind","value":"pub enum TargetKind {\n    Forward(&'static str),\n    Backward(&'static str),\n    Global(&'static str),\n    Dynamic(DynamicLabel),\n    Extern(usize),\n    Managed,\n}","parent":null,"children":[{"krate":0,"index":1797},{"krate":0,"index":1800},{"krate":0,"index":1803},{"krate":0,"index":1806},{"krate":0,"index":1809},{"krate":0,"index":1812}],"decl_id":null,"docs":" A description of a relocation target. Used for error reporting.\n","sig":null,"attributes":[{"value":"/ A description of a relocation target. Used for error reporting.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":3706,"byte_end":3773,"line_start":121,"line_end":121,"column_start":1,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1830},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":5172,"byte_end":5183,"line_start":156,"line_end":156,"column_start":5,"column_end":16},"name":"CheckFailed","qualname":"::DynasmError::CheckFailed","value":"DynasmError::CheckFailed","parent":{"krate":0,"index":1829},"children":[],"decl_id":null,"docs":" A check (like `Modifier::check` or `Modifier::check_exact`) that failed\n","sig":null,"attributes":[{"value":"/ A check (like `Modifier::check` or `Modifier::check_exact`) that failed","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":5092,"byte_end":5167,"line_start":155,"line_end":155,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1832},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":5248,"byte_end":5262,"line_start":158,"line_end":158,"column_start":5,"column_end":19},"name":"DuplicateLabel","qualname":"::DynasmError::DuplicateLabel","value":"DynasmError::DuplicateLabel(LabelKind)","parent":{"krate":0,"index":1829},"children":[],"decl_id":null,"docs":" A duplicate label dynamic/global label was defined\n","sig":null,"attributes":[{"value":"/ A duplicate label dynamic/global label was defined","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":5189,"byte_end":5243,"line_start":157,"line_end":157,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1835},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":5304,"byte_end":5316,"line_start":160,"line_end":160,"column_start":5,"column_end":17},"name":"UnknownLabel","qualname":"::DynasmError::UnknownLabel","value":"DynasmError::UnknownLabel(LabelKind)","parent":{"krate":0,"index":1829},"children":[],"decl_id":null,"docs":" An unknown label\n","sig":null,"attributes":[{"value":"/ An unknown label","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":5279,"byte_end":5299,"line_start":159,"line_end":159,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1838},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":5419,"byte_end":5439,"line_start":162,"line_end":162,"column_start":5,"column_end":25},"name":"ImpossibleRelocation","qualname":"::DynasmError::ImpossibleRelocation","value":"DynasmError::ImpossibleRelocation(TargetKind)","parent":{"krate":0,"index":1829},"children":[],"decl_id":null,"docs":" The user tried to declare a relocation too far away from the label it targets\n","sig":null,"attributes":[{"value":"/ The user tried to declare a relocation too far away from the label it targets","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":5333,"byte_end":5414,"line_start":161,"line_end":161,"column_start":5,"column_end":86}}]},{"kind":"Enum","id":{"krate":0,"index":1829},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":5074,"byte_end":5085,"line_start":154,"line_end":154,"column_start":10,"column_end":21},"name":"DynasmError","qualname":"::DynasmError","value":"pub enum DynasmError {\n    CheckFailed,\n    DuplicateLabel(LabelKind),\n    UnknownLabel(LabelKind),\n    ImpossibleRelocation(TargetKind),\n}","parent":null,"children":[{"krate":0,"index":1830},{"krate":0,"index":1832},{"krate":0,"index":1835},{"krate":0,"index":1838}],"decl_id":null,"docs":" The various error types generated by dynasm functions.\n","sig":null,"attributes":[{"value":"/ The various error types generated by dynasm functions.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":4967,"byte_end":5025,"line_start":152,"line_end":152,"column_start":1,"column_end":59}}]},{"kind":"Trait","id":{"krate":0,"index":435},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":6512,"byte_end":6521,"line_start":190,"line_end":190,"column_start":11,"column_end":20},"name":"DynasmApi","qualname":"::DynasmApi","value":"DynasmApi: Extend<u8> + for<'a> Extend<&'a u8>","parent":null,"children":[{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447}],"decl_id":null,"docs":" This trait represents the interface that must be implemented to allow\n the dynasm preprocessor to assemble into a datastructure.\n","sig":null,"attributes":[{"value":"/ This trait represents the interface that must be implemented to allow","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":6366,"byte_end":6439,"line_start":188,"line_end":188,"column_start":1,"column_end":74}},{"value":"/ the dynasm preprocessor to assemble into a datastructure.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":6440,"byte_end":6501,"line_start":189,"line_end":189,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":6629,"byte_end":6635,"line_start":192,"line_end":192,"column_start":8,"column_end":14},"name":"offset","qualname":"::DynasmApi::offset","value":"pub fn offset(&Self) -> AssemblyOffset","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":" Report the current offset into the assembling target\n","sig":null,"attributes":[{"value":"/ Report the current offset into the assembling target","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":6565,"byte_end":6621,"line_start":191,"line_end":191,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":6716,"byte_end":6720,"line_start":194,"line_end":194,"column_start":8,"column_end":12},"name":"push","qualname":"::DynasmApi::push","value":"pub fn push(&mut Self, u8)","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":" Push a byte into the assembling target\n","sig":null,"attributes":[{"value":"/ Push a byte into the assembling target","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":6666,"byte_end":6708,"line_start":193,"line_end":193,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":6837,"byte_end":6842,"line_start":196,"line_end":196,"column_start":8,"column_end":13},"name":"align","qualname":"::DynasmApi::align","value":"pub fn align(&mut Self, usize, u8)","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":" Push filler until the assembling target end is aligned to the given alignment.\n","sig":null,"attributes":[{"value":"/ Push filler until the assembling target end is aligned to the given alignment.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":6747,"byte_end":6829,"line_start":195,"line_end":195,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":6959,"byte_end":6966,"line_start":200,"line_end":200,"column_start":8,"column_end":15},"name":"push_i8","qualname":"::DynasmApi::push_i8","value":"pub fn push_i8(&mut Self, i8)","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":" Push a signed byte into the assembling target\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":6888,"byte_end":6897,"line_start":198,"line_end":198,"column_start":5,"column_end":14}},{"value":"/ Push a signed byte into the assembling target","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":6902,"byte_end":6951,"line_start":199,"line_end":199,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":7104,"byte_end":7112,"line_start":205,"line_end":205,"column_start":8,"column_end":16},"name":"push_i16","qualname":"::DynasmApi::push_i16","value":"pub fn push_i16(&mut Self, i16)","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":" Push a signed word into the assembling target\n","sig":null,"attributes":[{"value":"/ Push a signed word into the assembling target","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":7033,"byte_end":7082,"line_start":203,"line_end":203,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":7087,"byte_end":7096,"line_start":204,"line_end":204,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":7268,"byte_end":7276,"line_start":210,"line_end":210,"column_start":8,"column_end":16},"name":"push_i32","qualname":"::DynasmApi::push_i32","value":"pub fn push_i32(&mut Self, i32)","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":" Push a signed doubleword into the assembling target\n","sig":null,"attributes":[{"value":"/ Push a signed doubleword into the assembling target","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":7191,"byte_end":7246,"line_start":208,"line_end":208,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":7251,"byte_end":7260,"line_start":209,"line_end":209,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":7430,"byte_end":7438,"line_start":215,"line_end":215,"column_start":8,"column_end":16},"name":"push_i64","qualname":"::DynasmApi::push_i64","value":"pub fn push_i64(&mut Self, i64)","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":" Push a signed quadword into the assembling target\n","sig":null,"attributes":[{"value":"/ Push a signed quadword into the assembling target","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":7355,"byte_end":7408,"line_start":213,"line_end":213,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":7413,"byte_end":7422,"line_start":214,"line_end":214,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":7590,"byte_end":7598,"line_start":220,"line_end":220,"column_start":8,"column_end":16},"name":"push_u16","qualname":"::DynasmApi::push_u16","value":"pub fn push_u16(&mut Self, u16)","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":" Push an usigned word into the assembling target\n","sig":null,"attributes":[{"value":"/ Push an usigned word into the assembling target","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":7517,"byte_end":7568,"line_start":218,"line_end":218,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":7573,"byte_end":7582,"line_start":219,"line_end":219,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":7756,"byte_end":7764,"line_start":225,"line_end":225,"column_start":8,"column_end":16},"name":"push_u32","qualname":"::DynasmApi::push_u32","value":"pub fn push_u32(&mut Self, u32)","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":" Push an usigned doubleword into the assembling target\n","sig":null,"attributes":[{"value":"/ Push an usigned doubleword into the assembling target","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":7677,"byte_end":7734,"line_start":223,"line_end":223,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":7739,"byte_end":7748,"line_start":224,"line_end":224,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":7920,"byte_end":7928,"line_start":230,"line_end":230,"column_start":8,"column_end":16},"name":"push_u64","qualname":"::DynasmApi::push_u64","value":"pub fn push_u64(&mut Self, u64)","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":" Push an usigned quadword into the assembling target\n","sig":null,"attributes":[{"value":"/ Push an usigned quadword into the assembling target","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":7843,"byte_end":7898,"line_start":228,"line_end":228,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":7903,"byte_end":7912,"line_start":229,"line_end":229,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":8112,"byte_end":8125,"line_start":235,"line_end":235,"column_start":8,"column_end":21},"name":"runtime_error","qualname":"::DynasmApi::runtime_error","value":"pub fn runtime_error(&Self, &'static str) -> !","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":" This function is called in when a runtime error has to be generated. It panics.\n","sig":null,"attributes":[{"value":"/ This function is called in when a runtime error has to be generated. It panics.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":8007,"byte_end":8090,"line_start":233,"line_end":233,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":8095,"byte_end":8104,"line_start":234,"line_end":234,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":448},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":8301,"byte_end":8315,"line_start":241,"line_end":241,"column_start":11,"column_end":25},"name":"DynasmLabelApi","qualname":"::DynasmLabelApi","value":"DynasmLabelApi: DynasmApi","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462}],"decl_id":null,"docs":" This trait extends DynasmApi to not only allow assembling, but also labels and various directives\n","sig":null,"attributes":[{"value":"/ This trait extends DynasmApi to not only allow assembling, but also labels and various directives","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":8189,"byte_end":8290,"line_start":240,"line_end":240,"column_start":1,"column_end":102}}]},{"kind":"Type","id":{"krate":0,"index":449},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":8394,"byte_end":8404,"line_start":243,"line_end":243,"column_start":10,"column_end":20},"name":"Relocation","qualname":"::DynasmLabelApi::Relocation","value":"type Relocation: Relocation;","parent":{"krate":0,"index":448},"children":[],"decl_id":null,"docs":" The relocation info type this assembler uses. \n","sig":null,"attributes":[{"value":"/ The relocation info type this assembler uses. ","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":8334,"byte_end":8384,"line_start":242,"line_end":242,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":8473,"byte_end":8484,"line_start":246,"line_end":246,"column_start":8,"column_end":19},"name":"local_label","qualname":"::DynasmLabelApi::local_label","value":"pub fn local_label(&mut Self, &'static str)","parent":{"krate":0,"index":448},"children":[],"decl_id":null,"docs":" Record the definition of a local label\n","sig":null,"attributes":[{"value":"/ Record the definition of a local label","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":8423,"byte_end":8465,"line_start":245,"line_end":245,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":8574,"byte_end":8586,"line_start":248,"line_end":248,"column_start":8,"column_end":20},"name":"global_label","qualname":"::DynasmLabelApi::global_label","value":"pub fn global_label(&mut Self, &'static str)","parent":{"krate":0,"index":448},"children":[],"decl_id":null,"docs":" Record the definition of a global label\n","sig":null,"attributes":[{"value":"/ Record the definition of a global label","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":8523,"byte_end":8566,"line_start":247,"line_end":247,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":8676,"byte_end":8689,"line_start":250,"line_end":250,"column_start":8,"column_end":21},"name":"dynamic_label","qualname":"::DynasmLabelApi::dynamic_label","value":"pub fn dynamic_label(&mut Self, DynamicLabel)","parent":{"krate":0,"index":448},"children":[],"decl_id":null,"docs":" Record the definition of a dynamic label\n","sig":null,"attributes":[{"value":"/ Record the definition of a dynamic label","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":8624,"byte_end":8668,"line_start":249,"line_end":249,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":8802,"byte_end":8815,"line_start":253,"line_end":253,"column_start":8,"column_end":21},"name":"forward_reloc","qualname":"::DynasmLabelApi::forward_reloc","value":"pub fn forward_reloc(&mut Self, &'static str, isize, u8, u8,\n<Self::Relocation as Relocation>::Encoding)","parent":{"krate":0,"index":448},"children":[],"decl_id":null,"docs":" Record a relocation spot for a forward reference to a local label\n","sig":null,"attributes":[{"value":"/ Record a relocation spot for a forward reference to a local label","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":8725,"byte_end":8794,"line_start":252,"line_end":252,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":9162,"byte_end":9176,"line_start":257,"line_end":257,"column_start":8,"column_end":22},"name":"backward_reloc","qualname":"::DynasmLabelApi::backward_reloc","value":"pub fn backward_reloc(&mut Self, &'static str, isize, u8, u8,\n<Self::Relocation as Relocation>::Encoding)","parent":{"krate":0,"index":448},"children":[],"decl_id":null,"docs":" Record a relocation spot for a backward reference to a local label\n","sig":null,"attributes":[{"value":"/ Record a relocation spot for a backward reference to a local label","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":9084,"byte_end":9154,"line_start":256,"line_end":256,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":455},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":9515,"byte_end":9527,"line_start":261,"line_end":261,"column_start":8,"column_end":20},"name":"global_reloc","qualname":"::DynasmLabelApi::global_reloc","value":"pub fn global_reloc(&mut Self, &'static str, isize, u8, u8,\n<Self::Relocation as Relocation>::Encoding)","parent":{"krate":0,"index":448},"children":[],"decl_id":null,"docs":" Record a relocation spot for a reference to a global label\n","sig":null,"attributes":[{"value":"/ Record a relocation spot for a reference to a global label","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":9445,"byte_end":9507,"line_start":260,"line_end":260,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":9867,"byte_end":9880,"line_start":265,"line_end":265,"column_start":8,"column_end":21},"name":"dynamic_reloc","qualname":"::DynasmLabelApi::dynamic_reloc","value":"pub fn dynamic_reloc(&mut Self, DynamicLabel, isize, u8, u8,\n<Self::Relocation as Relocation>::Encoding)","parent":{"krate":0,"index":448},"children":[],"decl_id":null,"docs":" Record a relocation spot for a reference to a dynamic label\n","sig":null,"attributes":[{"value":"/ Record a relocation spot for a reference to a dynamic label","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":9796,"byte_end":9859,"line_start":264,"line_end":264,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":10207,"byte_end":10217,"line_start":269,"line_end":269,"column_start":8,"column_end":18},"name":"bare_reloc","qualname":"::DynasmLabelApi::bare_reloc","value":"pub fn bare_reloc(&mut Self, usize, u8, u8,\n<Self::Relocation as Relocation>::Encoding)","parent":{"krate":0,"index":448},"children":[],"decl_id":null,"docs":" Record a relocation spot to an arbitrary target.\n","sig":null,"attributes":[{"value":"/ Record a relocation spot to an arbitrary target.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":10147,"byte_end":10199,"line_start":268,"line_end":268,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":10518,"byte_end":10536,"line_start":274,"line_end":274,"column_start":8,"column_end":26},"name":"forward_relocation","qualname":"::DynasmLabelApi::forward_relocation","value":"pub fn forward_relocation(&mut Self, &'static str, isize, u8, u8,\nSelf::Relocation)","parent":{"krate":0,"index":448},"children":[],"decl_id":null,"docs":" Equivalent of forward_reloc, but takes a non-encoded relocation\n","sig":null,"attributes":[{"value":"/ Equivalent of forward_reloc, but takes a non-encoded relocation","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":10443,"byte_end":10510,"line_start":273,"line_end":273,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":10730,"byte_end":10749,"line_start":276,"line_end":276,"column_start":8,"column_end":27},"name":"backward_relocation","qualname":"::DynasmLabelApi::backward_relocation","value":"pub fn backward_relocation(&mut Self, &'static str, isize, u8, u8,\nSelf::Relocation)","parent":{"krate":0,"index":448},"children":[],"decl_id":null,"docs":" Equivalent of backward_reloc, but takes a non-encoded relocation\n","sig":null,"attributes":[{"value":"/ Equivalent of backward_reloc, but takes a non-encoded relocation","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":10654,"byte_end":10722,"line_start":275,"line_end":275,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":10940,"byte_end":10957,"line_start":278,"line_end":278,"column_start":8,"column_end":25},"name":"global_relocation","qualname":"::DynasmLabelApi::global_relocation","value":"pub fn global_relocation(&mut Self, &'static str, isize, u8, u8,\nSelf::Relocation)","parent":{"krate":0,"index":448},"children":[],"decl_id":null,"docs":" Equivalent of global_reloc, but takes a non-encoded relocation\n","sig":null,"attributes":[{"value":"/ Equivalent of global_reloc, but takes a non-encoded relocation","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":10866,"byte_end":10932,"line_start":277,"line_end":277,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":11151,"byte_end":11169,"line_start":280,"line_end":280,"column_start":8,"column_end":26},"name":"dynamic_relocation","qualname":"::DynasmLabelApi::dynamic_relocation","value":"pub fn dynamic_relocation(&mut Self, DynamicLabel, isize, u8, u8,\nSelf::Relocation)","parent":{"krate":0,"index":448},"children":[],"decl_id":null,"docs":" Equivalent of dynamic_reloc, but takes a non-encoded relocation\n","sig":null,"attributes":[{"value":"/ Equivalent of dynamic_reloc, but takes a non-encoded relocation","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":11076,"byte_end":11143,"line_start":279,"line_end":279,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":11359,"byte_end":11374,"line_start":282,"line_end":282,"column_start":8,"column_end":23},"name":"bare_relocation","qualname":"::DynasmLabelApi::bare_relocation","value":"pub fn bare_relocation(&mut Self, usize, u8, u8, Self::Relocation)","parent":{"krate":0,"index":448},"children":[],"decl_id":null,"docs":" Equivalent of bare_reloc, but takes a non-encoded relocation\n","sig":null,"attributes":[{"value":"/ Equivalent of bare_reloc, but takes a non-encoded relocation","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":11287,"byte_end":11351,"line_start":281,"line_end":281,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":1852},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":11701,"byte_end":11716,"line_start":289,"line_end":289,"column_start":12,"column_end":27},"name":"SimpleAssembler","qualname":"::SimpleAssembler","value":"SimpleAssembler { ops }","parent":null,"children":[{"krate":0,"index":1853}],"decl_id":null,"docs":" An assembler that is purely a `Vec<u8>`. It doesn't support labels or architecture-specific directives,\n but can be used to easily inspect generated code. It is intended to be used in testcases.\n","sig":null,"attributes":[{"value":"/ An assembler that is purely a `Vec<u8>`. It doesn't support labels or architecture-specific directives,","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":11464,"byte_end":11571,"line_start":286,"line_end":286,"column_start":1,"column_end":108}},{"value":"/ but can be used to easily inspect generated code. It is intended to be used in testcases.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":11572,"byte_end":11665,"line_start":287,"line_end":287,"column_start":1,"column_end":94}}]},{"kind":"Field","id":{"krate":0,"index":1853},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":11758,"byte_end":11761,"line_start":291,"line_end":291,"column_start":9,"column_end":12},"name":"ops","qualname":"::SimpleAssembler::ops","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":1852},"children":[],"decl_id":null,"docs":" The assembling buffer.\n","sig":null,"attributes":[{"value":"/ The assembling buffer.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":11723,"byte_end":11749,"line_start":290,"line_end":290,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":11876,"byte_end":11879,"line_start":296,"line_end":296,"column_start":12,"column_end":15},"name":"new","qualname":"<SimpleAssembler>::new","value":"pub fn new() -> SimpleAssembler","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `SimpleAssembler`, containing an empty `Vec`.\n","sig":null,"attributes":[{"value":"/ Creates a new `SimpleAssembler`, containing an empty `Vec`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":11801,"byte_end":11864,"line_start":295,"line_end":295,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":12049,"byte_end":12054,"line_start":303,"line_end":303,"column_start":12,"column_end":17},"name":"alter","qualname":"<SimpleAssembler>::alter","value":"pub fn alter(&mut Self) -> UncommittedModifier","parent":null,"children":[],"decl_id":null,"docs":" Use an `UncommittedModifier` to alter uncommitted code.\n","sig":null,"attributes":[{"value":"/ Use an `UncommittedModifier` to alter uncommitted code.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":11978,"byte_end":12037,"line_start":302,"line_end":302,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":12250,"byte_end":12258,"line_start":308,"line_end":308,"column_start":12,"column_end":20},"name":"finalize","qualname":"<SimpleAssembler>::finalize","value":"pub fn finalize(Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Destroys this assembler, returning the `Vec<u8>` contained within\n","sig":null,"attributes":[{"value":"/ Destroys this assembler, returning the `Vec<u8>` contained within","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":12169,"byte_end":12238,"line_start":307,"line_end":307,"column_start":5,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1858},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":13267,"byte_end":13279,"line_start":346,"line_end":346,"column_start":12,"column_end":24},"name":"VecAssembler","qualname":"::VecAssembler","value":"VecAssembler {  }","parent":null,"children":[{"krate":0,"index":1860},{"krate":0,"index":1861},{"krate":0,"index":1862},{"krate":0,"index":1863},{"krate":0,"index":1864}],"decl_id":null,"docs":" An assembler that assembles into a `Vec<u8>`, while supporting labels. To support the different types of relocations\n it requires a base address of the to be assembled code to be specified.\n","sig":null,"attributes":[{"value":"/ An assembler that assembles into a `Vec<u8>`, while supporting labels. To support the different types of relocations","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":13042,"byte_end":13162,"line_start":343,"line_end":343,"column_start":1,"column_end":121}},{"value":"/ it requires a base address of the to be assembled code to be specified.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":13163,"byte_end":13238,"line_start":344,"line_end":344,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":13546,"byte_end":13549,"line_start":356,"line_end":356,"column_start":12,"column_end":15},"name":"new","qualname":"<VecAssembler<R>>::new","value":"pub fn new(usize) -> VecAssembler<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new VecAssembler, with the specified base address.\n","sig":null,"attributes":[{"value":"/ Creates a new VecAssembler, with the specified base address.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":13470,"byte_end":13534,"line_start":355,"line_end":355,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":13963,"byte_end":13969,"line_start":368,"line_end":368,"column_start":12,"column_end":18},"name":"commit","qualname":"<VecAssembler<R>>::commit","value":"pub fn commit(&mut Self) -> Result<(), DynasmError>","parent":null,"children":[],"decl_id":null,"docs":" Resolves any relocations emitted to the assembler before this point.\n If an impossible relocation was specified before this point, returns them here.\n","sig":null,"attributes":[{"value":"/ Resolves any relocations emitted to the assembler before this point.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":13791,"byte_end":13863,"line_start":366,"line_end":366,"column_start":5,"column_end":77}},{"value":"/ If an impossible relocation was specified before this point, returns them here.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":13868,"byte_end":13951,"line_start":367,"line_end":367,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":15274,"byte_end":15279,"line_start":402,"line_end":402,"column_start":12,"column_end":17},"name":"alter","qualname":"<VecAssembler<R>>::alter","value":"pub fn alter(&mut Self) -> UncommittedModifier","parent":null,"children":[],"decl_id":null,"docs":" Use an `UncommittedModifier` to alter uncommitted code.\n This does not allow the user to change labels/relocations.\n","sig":null,"attributes":[{"value":"/ Use an `UncommittedModifier` to alter uncommitted code.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":15136,"byte_end":15195,"line_start":400,"line_end":400,"column_start":5,"column_end":64}},{"value":"/ This does not allow the user to change labels/relocations.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":15200,"byte_end":15262,"line_start":401,"line_end":401,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":15597,"byte_end":15605,"line_start":408,"line_end":408,"column_start":12,"column_end":20},"name":"finalize","qualname":"<VecAssembler<R>>::finalize","value":"pub fn finalize(Self) -> Result<Vec<u8>, DynasmError>","parent":null,"children":[],"decl_id":null,"docs":" Finalizes the `VecAssembler`, returning the resulting `Vec<u8>` containing all assembled data.\n this implicitly commits any relocations beforehand and returns an error if required.\n","sig":null,"attributes":[{"value":"/ Finalizes the `VecAssembler`, returning the resulting `Vec<u8>` containing all assembled data.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":15394,"byte_end":15492,"line_start":406,"line_end":406,"column_start":5,"column_end":103}},{"value":"/ this implicitly commits any relocations beforehand and returns an error if required.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":15497,"byte_end":15585,"line_start":407,"line_end":407,"column_start":5,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":1868},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":19631,"byte_end":19640,"line_start":510,"line_end":510,"column_start":12,"column_end":21},"name":"Assembler","qualname":"::Assembler","value":"Assembler {  }","parent":null,"children":[{"krate":0,"index":1870},{"krate":0,"index":1871},{"krate":0,"index":1872},{"krate":0,"index":1873},{"krate":0,"index":1874},{"krate":0,"index":1875}],"decl_id":null,"docs":" A full assembler implementation. Supports labels, all types of relocations,\n incremental compilation and multithreaded execution with simultaneous compiltion.\n Its implementation guarantees no memory is executable and writable at the same time.\n","sig":null,"attributes":[{"value":"/ A full assembler implementation. Supports labels, all types of relocations,","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":19348,"byte_end":19427,"line_start":506,"line_end":506,"column_start":1,"column_end":80}},{"value":"/ incremental compilation and multithreaded execution with simultaneous compiltion.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":19428,"byte_end":19513,"line_start":507,"line_end":507,"column_start":1,"column_end":86}},{"value":"/ Its implementation guarantees no memory is executable and writable at the same time.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":19514,"byte_end":19602,"line_start":508,"line_end":508,"column_start":1,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":19953,"byte_end":19956,"line_start":521,"line_end":521,"column_start":12,"column_end":15},"name":"new","qualname":"<Assembler<R>>::new","value":"pub fn new() -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, empty assembler, with initial allocation size `page_size`.\n","sig":null,"attributes":[{"value":"/ Create a new, empty assembler, with initial allocation size `page_size`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":19865,"byte_end":19941,"line_start":520,"line_end":520,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":20303,"byte_end":20320,"line_start":533,"line_end":533,"column_start":12,"column_end":29},"name":"new_dynamic_label","qualname":"<Assembler<R>>::new_dynamic_label","value":"pub fn new_dynamic_label(&mut Self) -> DynamicLabel","parent":null,"children":[],"decl_id":null,"docs":" Create a new dynamic label ID\n","sig":null,"attributes":[{"value":"/ Create a new dynamic label ID","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":20258,"byte_end":20291,"line_start":532,"line_end":532,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":20539,"byte_end":20556,"line_start":539,"line_end":539,"column_start":12,"column_end":29},"name":"alter_uncommitted","qualname":"<Assembler<R>>::alter_uncommitted","value":"pub fn alter_uncommitted(&mut Self) -> UncommittedModifier","parent":null,"children":[],"decl_id":null,"docs":" Use an `UncommittedModifier` to alter uncommitted code.\n This does not allow the user to change labels/relocations.\n","sig":null,"attributes":[{"value":"/ Use an `UncommittedModifier` to alter uncommitted code.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":20401,"byte_end":20460,"line_start":537,"line_end":537,"column_start":5,"column_end":64}},{"value":"/ This does not allow the user to change labels/relocations.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":20465,"byte_end":20527,"line_start":538,"line_end":538,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":20999,"byte_end":21004,"line_start":547,"line_end":547,"column_start":12,"column_end":17},"name":"alter","qualname":"<Assembler<R>>::alter","value":"pub fn alter<F, O>(&mut Self, F) -> Result<O, DynasmError> where\nF: FnOnce(&mut Modifier<, R>) -> O","parent":null,"children":[],"decl_id":null,"docs":" Use a `Modifier` to alter committed code directly. While this is happening\n no code can be executed as the relevant pages are remapped as writable.\n This API supports defining new labels/relocations, and overwriting previously defined relocations.\n","sig":null,"attributes":[{"value":"/ Use a `Modifier` to alter committed code directly. While this is happening","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":20722,"byte_end":20800,"line_start":544,"line_end":544,"column_start":5,"column_end":83}},{"value":"/ no code can be executed as the relevant pages are remapped as writable.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":20805,"byte_end":20880,"line_start":545,"line_end":545,"column_start":5,"column_end":80}},{"value":"/ This API supports defining new labels/relocations, and overwriting previously defined relocations.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":20885,"byte_end":20987,"line_start":546,"line_end":546,"column_start":5,"column_end":107}}]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":22292,"byte_end":22298,"line_start":586,"line_end":586,"column_start":12,"column_end":18},"name":"commit","qualname":"<Assembler<R>>::commit","value":"pub fn commit(&mut Self) -> Result<(), DynasmError>","parent":null,"children":[],"decl_id":null,"docs":" Commit code, flushing the temporary internal assembling buffer to the mapped executable memory.\n This makes assembled code available for execution.\n","sig":null,"attributes":[{"value":"/ Commit code, flushing the temporary internal assembling buffer to the mapped executable memory.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":22122,"byte_end":22221,"line_start":584,"line_end":584,"column_start":5,"column_end":104}},{"value":"/ This makes assembled code available for execution.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":22226,"byte_end":22280,"line_start":585,"line_end":585,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":23226,"byte_end":23234,"line_start":611,"line_end":611,"column_start":12,"column_end":20},"name":"finalize","qualname":"<Assembler<R>>::finalize","value":"pub fn finalize(Self) -> Result<ExecutableBuffer, Self>","parent":null,"children":[],"decl_id":null,"docs":" Finalize this assembler, returning the internal executablebuffer if no Executor instances exist.\n This panics if any uncommitted changes caused errors near the end. To handle these, call `commit()` explicitly beforehand.\n","sig":null,"attributes":[{"value":"/ Finalize this assembler, returning the internal executablebuffer if no Executor instances exist.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":22983,"byte_end":23083,"line_start":609,"line_end":609,"column_start":5,"column_end":105}},{"value":"/ This panics if any uncommitted changes caused errors near the end. To handle these, call `commit()` explicitly beforehand.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":23088,"byte_end":23214,"line_start":610,"line_end":610,"column_start":5,"column_end":131}}]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":23676,"byte_end":23682,"line_start":623,"line_end":623,"column_start":12,"column_end":18},"name":"reader","qualname":"<Assembler<R>>::reader","value":"pub fn reader(&Self) -> Executor","parent":null,"children":[],"decl_id":null,"docs":" Create an executor which can be used to execute code while still assembling code\n","sig":null,"attributes":[{"value":"/ Create an executor which can be used to execute code while still assembling code","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":23580,"byte_end":23664,"line_start":622,"line_end":622,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":23863,"byte_end":23869,"line_start":630,"line_end":630,"column_start":12,"column_end":18},"name":"labels","qualname":"<Assembler<R>>::labels","value":"pub fn labels(&Self) -> &LabelRegistry","parent":null,"children":[],"decl_id":null,"docs":" Provides access to the assemblers internal labels registry\n","sig":null,"attributes":[{"value":"/ Provides access to the assemblers internal labels registry","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":23789,"byte_end":23851,"line_start":629,"line_end":629,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":24011,"byte_end":24021,"line_start":635,"line_end":635,"column_start":12,"column_end":22},"name":"labels_mut","qualname":"<Assembler<R>>::labels_mut","value":"pub fn labels_mut(&mut Self) -> &mut LabelRegistry","parent":null,"children":[],"decl_id":null,"docs":" Provides mutable access to the assemblers internal labels registry\n","sig":null,"attributes":[{"value":"/ Provides mutable access to the assemblers internal labels registry","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":23929,"byte_end":23999,"line_start":634,"line_end":634,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":1879},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":29940,"byte_end":29948,"line_start":787,"line_end":787,"column_start":12,"column_end":20},"name":"Modifier","qualname":"::Modifier","value":"Modifier {  }","parent":null,"children":[{"krate":0,"index":1882},{"krate":0,"index":1883},{"krate":0,"index":1884},{"krate":0,"index":1885},{"krate":0,"index":1886},{"krate":0,"index":1887},{"krate":0,"index":1888},{"krate":0,"index":1889}],"decl_id":null,"docs":" Allows modification of already committed assembly code. Contains an internal cursor\n into the emitted assembly, initialized to the start, that can be moved around either with the\n `goto` function, or just by assembling new code into this `Modifier`.\n","sig":null,"attributes":[{"value":"/ Allows modification of already committed assembly code. Contains an internal cursor","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":29652,"byte_end":29739,"line_start":783,"line_end":783,"column_start":1,"column_end":88}},{"value":"/ into the emitted assembly, initialized to the start, that can be moved around either with the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":29740,"byte_end":29837,"line_start":784,"line_end":784,"column_start":1,"column_end":98}},{"value":"/ `goto` function, or just by assembling new code into this `Modifier`.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":29838,"byte_end":29911,"line_start":785,"line_end":785,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":30348,"byte_end":30352,"line_start":802,"line_end":802,"column_start":12,"column_end":16},"name":"goto","qualname":"<Modifier>::goto","value":"pub fn goto(&mut Self, AssemblyOffset)","parent":null,"children":[],"decl_id":null,"docs":" Move the modifier cursor to the selected location.\n","sig":null,"attributes":[{"value":"/ Move the modifier cursor to the selected location.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":30282,"byte_end":30336,"line_start":801,"line_end":801,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":30651,"byte_end":30656,"line_start":809,"line_end":809,"column_start":12,"column_end":17},"name":"check","qualname":"<Modifier>::check","value":"pub fn check(&Self, AssemblyOffset) -> Result<(), DynasmError>","parent":null,"children":[],"decl_id":null,"docs":" Check that the modifier cursor has not moved past the specified location.\n","sig":null,"attributes":[{"value":"/ Check that the modifier cursor has not moved past the specified location.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":30562,"byte_end":30639,"line_start":808,"line_end":808,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":30939,"byte_end":30950,"line_start":818,"line_end":818,"column_start":12,"column_end":23},"name":"check_exact","qualname":"<Modifier>::check_exact","value":"pub fn check_exact(&Self, AssemblyOffset) -> Result<(), DynasmError>","parent":null,"children":[],"decl_id":null,"docs":" Check that the modifier cursor is exactly at the specified location.\n","sig":null,"attributes":[{"value":"/ Check that the modifier cursor is exactly at the specified location.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":30855,"byte_end":30927,"line_start":817,"line_end":817,"column_start":5,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":1894},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":37560,"byte_end":37579,"line_start":989,"line_end":989,"column_start":12,"column_end":31},"name":"UncommittedModifier","qualname":"::UncommittedModifier","value":"UncommittedModifier {  }","parent":null,"children":[{"krate":0,"index":1896},{"krate":0,"index":1897},{"krate":0,"index":1898}],"decl_id":null,"docs":" This struct is a wrapper around an `Assembler` normally created using the\n `Assembler.alter_uncommitted` method. It allows the user to edit parts\n of the assembling buffer that cannot be determined easily or efficiently\n in advance. Due to limitations of the label resolution algorithms, this\n assembler does not allow labels to be used.\n","sig":null,"attributes":[{"value":"/ This struct is a wrapper around an `Assembler` normally created using the","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":37178,"byte_end":37255,"line_start":983,"line_end":983,"column_start":1,"column_end":78}},{"value":"/ `Assembler.alter_uncommitted` method. It allows the user to edit parts","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":37256,"byte_end":37330,"line_start":984,"line_end":984,"column_start":1,"column_end":75}},{"value":"/ of the assembling buffer that cannot be determined easily or efficiently","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":37331,"byte_end":37407,"line_start":985,"line_end":985,"column_start":1,"column_end":77}},{"value":"/ in advance. Due to limitations of the label resolution algorithms, this","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":37408,"byte_end":37483,"line_start":986,"line_end":986,"column_start":1,"column_end":76}},{"value":"/ assembler does not allow labels to be used.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":37484,"byte_end":37531,"line_start":987,"line_end":987,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":37747,"byte_end":37750,"line_start":997,"line_end":997,"column_start":12,"column_end":15},"name":"new","qualname":"<UncommittedModifier>::new","value":"pub fn new(&mut Vec<u8>, AssemblyOffset) -> UncommittedModifier","parent":null,"children":[],"decl_id":null,"docs":" create a new uncommittedmodifier\n","sig":null,"attributes":[{"value":"/ create a new uncommittedmodifier","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":37699,"byte_end":37735,"line_start":996,"line_end":996,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":38043,"byte_end":38047,"line_start":1006,"line_end":1006,"column_start":12,"column_end":16},"name":"goto","qualname":"<UncommittedModifier>::goto","value":"pub fn goto(&mut Self, AssemblyOffset)","parent":null,"children":[],"decl_id":null,"docs":" Sets the current modification offset to the given value\n","sig":null,"attributes":[{"value":"/ Sets the current modification offset to the given value","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":37972,"byte_end":38031,"line_start":1005,"line_end":1005,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":38228,"byte_end":38233,"line_start":1011,"line_end":1011,"column_start":12,"column_end":17},"name":"check","qualname":"<UncommittedModifier>::check","value":"pub fn check(&mut Self, AssemblyOffset) -> Result<(), DynasmError>","parent":null,"children":[],"decl_id":null,"docs":" Checks that the current modification offset is not larger than the specified offset.\n","sig":null,"attributes":[{"value":"/ Checks that the current modification offset is not larger than the specified offset.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":38128,"byte_end":38216,"line_start":1010,"line_end":1010,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":38525,"byte_end":38536,"line_start":1020,"line_end":1020,"column_start":12,"column_end":23},"name":"check_exact","qualname":"<UncommittedModifier>::check_exact","value":"pub fn check_exact(&mut Self, AssemblyOffset) -> Result<(), DynasmError>","parent":null,"children":[],"decl_id":null,"docs":" Checks that the current modification offset is exactly the specified offset.\n","sig":null,"attributes":[{"value":"/ Checks that the current modification offset is exactly the specified offset.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":38433,"byte_end":38513,"line_start":1019,"line_end":1019,"column_start":5,"column_end":85}}]},{"kind":"Trait","id":{"krate":0,"index":605},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":39838,"byte_end":39846,"line_start":1066,"line_end":1066,"column_start":11,"column_end":19},"name":"Register","qualname":"::Register","value":"Register: Debug + Clone + Copy + PartialEq + Eq + Hash","parent":null,"children":[{"krate":0,"index":606}],"decl_id":null,"docs":" A trait abstracting over architectural register families. This is usually implemented\n over an enum of all available registers in each family. This allows for code that is generic\n over register families.\n","sig":null,"attributes":[{"value":"/ A trait abstracting over architectural register families. This is usually implemented","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":39613,"byte_end":39702,"line_start":1063,"line_end":1063,"column_start":1,"column_end":90}},{"value":"/ over an enum of all available registers in each family. This allows for code that is generic","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":39703,"byte_end":39799,"line_start":1064,"line_end":1064,"column_start":1,"column_end":97}},{"value":"/ over register families.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":39800,"byte_end":39827,"line_start":1065,"line_end":1065,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":40062,"byte_end":40066,"line_start":1069,"line_end":1069,"column_start":8,"column_end":12},"name":"code","qualname":"::Register::code","value":"pub fn code(&Self) -> u8","parent":{"krate":0,"index":605},"children":[],"decl_id":null,"docs":" Returns the integer ID of the register. Usually equivalent to casting\n the enum to an u8, but allows you to be generic over the register family.\n","sig":null,"attributes":[{"value":"/ Returns the integer ID of the register. Usually equivalent to casting","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":39899,"byte_end":39972,"line_start":1067,"line_end":1067,"column_start":5,"column_end":78}},{"value":"/ the enum to an u8, but allows you to be generic over the register family.","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":39977,"byte_end":40054,"line_start":1068,"line_end":1068,"column_start":5,"column_end":82}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/mmap.rs","byte_start":41060,"byte_end":41076,"line_start":31,"line_end":31,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/mmap.rs","byte_start":42747,"byte_end":42760,"line_start":79,"line_end":79,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/mmap.rs","byte_start":43948,"byte_end":43964,"line_start":121,"line_end":121,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/mmap.rs","byte_start":44117,"byte_end":44130,"line_start":130,"line_end":130,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/mmap.rs","byte_start":44275,"byte_end":44291,"line_start":139,"line_end":139,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/mmap.rs","byte_start":44490,"byte_end":44503,"line_start":150,"line_end":150,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/mmap.rs","byte_start":44705,"byte_end":44718,"line_start":161,"line_end":161,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":45870,"byte_end":45883,"line_start":29,"line_end":29,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":50093,"byte_end":50106,"line_start":141,"line_end":141,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":53269,"byte_end":53277,"line_start":217,"line_end":217,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":56490,"byte_end":56503,"line_start":286,"line_end":286,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":151},{"krate":0,"index":154},{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":59170,"byte_end":59183,"line_start":350,"line_end":350,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":61303,"byte_end":61310,"line_start":412,"line_end":412,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":70711,"byte_end":70725,"line_start":52,"line_end":52,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":71556,"byte_end":71570,"line_start":80,"line_end":80,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":74757,"byte_end":74770,"line_start":34,"line_end":34,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":78678,"byte_end":78691,"line_start":33,"line_end":33,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":84339,"byte_end":84356,"line_start":48,"line_end":48,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":340},{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":86489,"byte_end":86506,"line_start":106,"line_end":106,"column_start":21,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":2071,"byte_end":2083,"line_start":70,"line_end":70,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":2641,"byte_end":2649,"line_start":87,"line_end":87,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":3409,"byte_end":3418,"line_start":110,"line_end":110,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":4450,"byte_end":4460,"line_start":138,"line_end":138,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":5478,"byte_end":5489,"line_start":165,"line_end":165,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":5976,"byte_end":5987,"line_start":176,"line_end":176,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":11779,"byte_end":11794,"line_start":294,"line_end":294,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":12324,"byte_end":12339,"line_start":313,"line_end":313,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":12479,"byte_end":12494,"line_start":319,"line_end":319,"column_start":29,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":12629,"byte_end":12644,"line_start":325,"line_end":325,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":13448,"byte_end":13460,"line_start":354,"line_end":354,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":15739,"byte_end":15751,"line_start":414,"line_end":414,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":15909,"byte_end":15921,"line_start":420,"line_end":420,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":16074,"byte_end":16086,"line_start":426,"line_end":426,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":16525,"byte_end":16537,"line_start":443,"line_end":443,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":19846,"byte_end":19855,"line_start":519,"line_end":519,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":517},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":25666,"byte_end":25675,"line_start":683,"line_end":683,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":25833,"byte_end":25842,"line_start":689,"line_end":689,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":531}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":25995,"byte_end":26004,"line_start":695,"line_end":695,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":26479,"byte_end":26488,"line_start":714,"line_end":714,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":30260,"byte_end":30268,"line_start":800,"line_end":800,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":32822,"byte_end":32830,"line_start":873,"line_end":873,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":559}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":33124,"byte_end":33132,"line_start":882,"line_end":882,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":565}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":33423,"byte_end":33431,"line_start":891,"line_end":891,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":33929,"byte_end":33937,"line_start":911,"line_end":911,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":37669,"byte_end":37688,"line_start":995,"line_end":995,"column_start":10,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":38758,"byte_end":38777,"line_start":1029,"line_end":1029,"column_start":24,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":39261,"byte_end":39280,"line_start":1049,"line_end":1049,"column_start":25,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":39457,"byte_end":39476,"line_start":1057,"line_end":1057,"column_start":33,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":388,"byte_end":392,"line_start":7,"line_end":7,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":402,"byte_end":412,"line_start":8,"line_end":8,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":48}},{"kind":"Mod","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":422,"byte_end":433,"line_start":9,"line_end":9,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":188}},{"kind":"Mod","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":796,"byte_end":799,"line_start":28,"line_end":28,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":225}},{"kind":"Mod","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":809,"byte_end":812,"line_start":29,"line_end":29,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":278}},{"kind":"Mod","span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":822,"byte_end":829,"line_start":30,"line_end":30,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":309}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/mmap.rs","byte_start":41060,"byte_end":41076,"line_start":31,"line_end":31,"column_start":6,"column_end":22},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":607},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/mmap.rs","byte_start":42747,"byte_end":42760,"line_start":79,"line_end":79,"column_start":6,"column_end":19},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":612},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/mmap.rs","byte_start":43948,"byte_end":43964,"line_start":121,"line_end":121,"column_start":18,"column_end":34},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":607},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/mmap.rs","byte_start":44117,"byte_end":44130,"line_start":130,"line_end":130,"column_start":18,"column_end":31},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":612},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/mmap.rs","byte_start":44275,"byte_end":44291,"line_start":139,"line_end":139,"column_start":16,"column_end":32},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":607},"to":{"krate":2,"index":3242}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/mmap.rs","byte_start":44490,"byte_end":44503,"line_start":150,"line_end":150,"column_start":16,"column_end":29},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":612},"to":{"krate":2,"index":3242}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/mmap.rs","byte_start":44705,"byte_end":44718,"line_start":161,"line_end":161,"column_start":19,"column_end":32},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":612},"to":{"krate":2,"index":3255}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":45870,"byte_end":45883,"line_start":29,"line_end":29,"column_start":6,"column_end":19},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":617},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":50093,"byte_end":50106,"line_start":141,"line_end":141,"column_start":6,"column_end":19},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":624},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":53269,"byte_end":53277,"line_start":217,"line_end":217,"column_start":21,"column_end":29},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":634},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":56490,"byte_end":56503,"line_start":286,"line_end":286,"column_start":21,"column_end":34},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":647},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":59170,"byte_end":59183,"line_start":350,"line_end":350,"column_start":21,"column_end":34},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":658},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/components.rs","byte_start":61303,"byte_end":61310,"line_start":412,"line_end":412,"column_start":6,"column_end":13},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":704},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":70711,"byte_end":70725,"line_start":52,"line_end":52,"column_start":6,"column_end":20},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":716},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/relocations.rs","byte_start":71556,"byte_end":71570,"line_start":80,"line_end":80,"column_start":21,"column_end":35},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":740},"to":{"krate":0,"index":199}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x64.rs","byte_start":74757,"byte_end":74770,"line_start":34,"line_end":34,"column_start":21,"column_end":34},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":767},"to":{"krate":0,"index":199}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/x86.rs","byte_start":78678,"byte_end":78691,"line_start":33,"line_end":33,"column_start":21,"column_end":34},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":974},"to":{"krate":0,"index":199}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":84339,"byte_end":84356,"line_start":48,"line_end":48,"column_start":6,"column_end":23},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1362},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/aarch64.rs","byte_start":86489,"byte_end":86506,"line_start":106,"line_end":106,"column_start":21,"column_end":38},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1362},"to":{"krate":0,"index":199}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":2071,"byte_end":2083,"line_start":70,"line_end":70,"column_start":6,"column_end":18},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1747},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":2641,"byte_end":2649,"line_start":87,"line_end":87,"column_start":6,"column_end":14},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1765},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":3409,"byte_end":3418,"line_start":110,"line_end":110,"column_start":23,"column_end":32},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1771},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":4450,"byte_end":4460,"line_start":138,"line_end":138,"column_start":23,"column_end":33},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1796},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":5478,"byte_end":5489,"line_start":165,"line_end":165,"column_start":23,"column_end":34},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1829},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":5976,"byte_end":5987,"line_start":176,"line_end":176,"column_start":23,"column_end":34},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1829},"to":{"krate":1,"index":2452}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":6523,"byte_end":6529,"line_start":190,"line_end":190,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":7724},"to":{"krate":0,"index":435}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":6544,"byte_end":6550,"line_start":190,"line_end":190,"column_start":43,"column_end":49},"kind":"SuperTrait","from":{"krate":2,"index":7724},"to":{"krate":0,"index":435}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":8318,"byte_end":8327,"line_start":241,"line_end":241,"column_start":28,"column_end":37},"kind":"SuperTrait","from":{"krate":0,"index":435},"to":{"krate":0,"index":448}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":11779,"byte_end":11794,"line_start":294,"line_end":294,"column_start":6,"column_end":21},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1852},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":12324,"byte_end":12339,"line_start":313,"line_end":313,"column_start":21,"column_end":36},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1852},"to":{"krate":2,"index":7724}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":12479,"byte_end":12494,"line_start":319,"line_end":319,"column_start":29,"column_end":44},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1852},"to":{"krate":2,"index":7724}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":12629,"byte_end":12644,"line_start":325,"line_end":325,"column_start":20,"column_end":35},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1852},"to":{"krate":0,"index":435}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":13448,"byte_end":13460,"line_start":354,"line_end":354,"column_start":21,"column_end":33},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1858},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":15739,"byte_end":15751,"line_start":414,"line_end":414,"column_start":36,"column_end":48},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1858},"to":{"krate":2,"index":7724}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":15909,"byte_end":15921,"line_start":420,"line_end":420,"column_start":44,"column_end":56},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1858},"to":{"krate":2,"index":7724}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":16074,"byte_end":16086,"line_start":426,"line_end":426,"column_start":35,"column_end":47},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1858},"to":{"krate":0,"index":435}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":16525,"byte_end":16537,"line_start":443,"line_end":443,"column_start":40,"column_end":52},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1858},"to":{"krate":0,"index":448}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":19846,"byte_end":19855,"line_start":519,"line_end":519,"column_start":21,"column_end":30},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1868},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":25666,"byte_end":25675,"line_start":683,"line_end":683,"column_start":36,"column_end":45},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1868},"to":{"krate":2,"index":7724}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":25833,"byte_end":25842,"line_start":689,"line_end":689,"column_start":44,"column_end":53},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1868},"to":{"krate":2,"index":7724}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":25995,"byte_end":26004,"line_start":695,"line_end":695,"column_start":35,"column_end":44},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1868},"to":{"krate":0,"index":435}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":26479,"byte_end":26488,"line_start":714,"line_end":714,"column_start":40,"column_end":49},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1868},"to":{"krate":0,"index":448}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":30260,"byte_end":30268,"line_start":800,"line_end":800,"column_start":25,"column_end":33},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1879},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":32822,"byte_end":32830,"line_start":873,"line_end":873,"column_start":40,"column_end":48},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1879},"to":{"krate":2,"index":7724}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":33124,"byte_end":33132,"line_start":882,"line_end":882,"column_start":48,"column_end":56},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1879},"to":{"krate":2,"index":7724}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":33423,"byte_end":33431,"line_start":891,"line_end":891,"column_start":39,"column_end":47},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1879},"to":{"krate":0,"index":435}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":33929,"byte_end":33937,"line_start":911,"line_end":911,"column_start":44,"column_end":52},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1879},"to":{"krate":0,"index":448}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":37669,"byte_end":37688,"line_start":995,"line_end":995,"column_start":10,"column_end":29},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1894},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":38758,"byte_end":38777,"line_start":1029,"line_end":1029,"column_start":24,"column_end":43},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1894},"to":{"krate":0,"index":435}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":39261,"byte_end":39280,"line_start":1049,"line_end":1049,"column_start":25,"column_end":44},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1894},"to":{"krate":2,"index":7724}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":39457,"byte_end":39476,"line_start":1057,"line_end":1057,"column_start":33,"column_end":52},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1894},"to":{"krate":2,"index":7724}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":39848,"byte_end":39853,"line_start":1066,"line_end":1066,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":9597},"to":{"krate":0,"index":605}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":39856,"byte_end":39861,"line_start":1066,"line_end":1066,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2645},"to":{"krate":0,"index":605}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":39864,"byte_end":39868,"line_start":1066,"line_end":1066,"column_start":37,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":3034},"to":{"krate":0,"index":605}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":39871,"byte_end":39880,"line_start":1066,"line_end":1066,"column_start":44,"column_end":53},"kind":"SuperTrait","from":{"krate":2,"index":2675},"to":{"krate":0,"index":605}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":39883,"byte_end":39885,"line_start":1066,"line_end":1066,"column_start":56,"column_end":58},"kind":"SuperTrait","from":{"krate":2,"index":2680},"to":{"krate":0,"index":605}},{"span":{"file_name":"/Users/doviethoang/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasmrt-1.0.1/src/lib.rs","byte_start":39888,"byte_end":39892,"line_start":1066,"line_end":1066,"column_start":61,"column_end":65},"kind":"SuperTrait","from":{"krate":2,"index":9804},"to":{"krate":0,"index":605}}]}